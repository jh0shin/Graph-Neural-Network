         153697 function calls (153090 primitive calls) in 8.744 seconds

   Ordered by: internal time

   ncalls  tottime  percall  cumtime  percall filename:lineno(function)
     6000    4.556    0.001    4.556    0.001 {method 'item' of 'torch._C._TensorBase' objects}
      300    1.894    0.006    1.894    0.006 {method 'argsort' of 'torch._C._TensorBase' objects}
      100    0.787    0.008    0.787    0.008 {method 'run_backward' of 'torch._C._EngineBase' objects}
      300    0.485    0.002    1.246    0.004 diag.py:35(set_diag)
      300    0.286    0.001    0.513    0.002 diag.py:9(remove_diag)
     6000    0.173    0.000    0.173    0.000 {method 'max' of 'torch._C._TensorBase' objects}
      300    0.085    0.000    0.085    0.000 {built-in method torch._ops.torch_scatter.gather_csr}
      300    0.039    0.000    7.827    0.026 gcn_conv.py:152(forward)
     3000    0.039    0.000    4.779    0.002 storage.py:33(__init__)
     1800    0.027    0.000    0.027    0.000 {method 'mul_' of 'torch._C._TensorBase' objects}
     1500    0.021    0.000    0.021    0.000 {method 'add_' of 'torch._C._TensorBase' objects}
      300    0.018    0.000    0.018    0.000 {built-in method torch._ops.torch_sparse.spmm_sum}
      300    0.018    0.000    1.912    0.006 storage.py:347(csr2csc)
      300    0.017    0.000    5.817    0.019 gcn_conv.py:30(gcn_norm)
      600    0.017    0.000    0.017    0.000 {built-in method torch._ops.torch_sparse.ind2ptr}
      300    0.015    0.000    0.023    0.000 storage.py:312(colptr)
      300    0.015    0.000    0.015    0.000 {built-in method torch._ops.torch_sparse.non_diag_mask}
      300    0.015    0.000    0.015    0.000 {built-in method torch._ops.torch_scatter.segment_sum_csr}
      100    0.013    0.000    0.063    0.001 _functional.py:53(adam)
      600    0.012    0.000    0.573    0.001 mul.py:8(mul)
      300    0.010    0.000    0.010    0.000 {method 'new_full' of 'torch._C._TensorBase' objects}
      300    0.010    0.000    0.010    0.000 {method 'pow_' of 'torch._C._TensorBase' objects}
      300    0.008    0.000    0.008    0.000 {built-in method full}
      300    0.008    0.000    0.008    0.000 {method 'masked_fill_' of 'torch._C._TensorBase' objects}
      600    0.007    0.000    0.007    0.000 {method 'sqrt' of 'torch._C._TensorBase' objects}
  700/100    0.007    0.000    7.856    0.079 module.py:866(_call_impl)
      600    0.007    0.000    0.007    0.000 {method 'addcdiv_' of 'torch._C._TensorBase' objects}
      900    0.007    0.000    0.007    0.000 {method 'new_empty' of 'torch._C._TensorBase' objects}
      300    0.007    0.000    0.007    0.000 {built-in method arange}
    11900    0.007    0.000    0.007    0.000 {method 'size' of 'torch._C._TensorBase' objects}
      600    0.007    0.000    0.007    0.000 {method 'addcmul_' of 'torch._C._TensorBase' objects}
      594    0.006    0.000    0.006    0.000 {method 'zero_' of 'torch._C._TensorBase' objects}
      200    0.006    0.000    0.006    0.000 {built-in method relu_}
      900    0.005    0.000    4.062    0.005 storage.py:213(set_value)
      100    0.005    0.000    7.855    0.079 sequential.py:99(forward)
      700    0.004    0.000    0.004    0.000 {method 'squeeze' of 'torch._C._TensorBase' objects}
      100    0.004    0.000    0.004    0.000 {method 'log_softmax' of 'torch._C._TensorBase' objects}
     1500    0.004    0.000    0.485    0.000 tensor.py:27(from_storage)
     1800    0.004    0.000    0.006    0.000 tensor.py:212(sizes)
    11100    0.004    0.000    0.004    0.000 {method 'contiguous' of 'torch._C._TensorBase' objects}
      300    0.004    0.000    1.262    0.004 diag.py:82(fill_diag)
      100    0.003    0.000    0.003    0.000 {built-in method torch._C._nn.nll_loss}
     1500    0.003    0.000    0.481    0.000 tensor.py:15(__init__)
      600    0.003    0.000    0.003    0.000 {method 'view' of 'torch._C._TensorBase' objects}
    15100    0.003    0.000    0.003    0.000 {method 'numel' of 'torch._C._TensorBase' objects}
      300    0.003    0.000    0.003    0.000 message_passing.py:138(__collect__)
     4182    0.003    0.000    0.004    0.000 tensor.py:906(grad)
      300    0.003    0.000    1.969    0.007 message_passing.py:186(propagate)
      300    0.003    0.000    1.956    0.007 matmul.py:7(spmm_sum)
      100    0.003    0.000    0.003    0.000 {built-in method ones_like}
      200    0.003    0.000    0.003    0.000 {built-in method torch._ops.profiler._record_function_enter}
      100    0.002    0.000    0.069    0.001 adam.py:55(step)
      200    0.002    0.000    0.002    0.000 {built-in method zeros}
      600    0.002    0.000    0.003    0.000 inspector.py:52(distribute)
      900    0.002    0.000    4.363    0.005 tensor.py:169(set_value)
      700    0.002    0.000    0.002    0.000 {built-in method torch._C._get_tracing_state}
      100    0.002    0.000    0.078    0.001 optimizer.py:84(wrapper)
     1000    0.002    0.000    0.002    0.000 module.py:934(__getattr__)
      100    0.002    0.000    0.012    0.000 optimizer.py:189(zero_grad)
     7300    0.001    0.000    0.001    0.000 {method 'dim' of 'torch._C._TensorBase' objects}
     8000    0.001    0.000    0.001    0.000 {built-in method builtins.len}
      300    0.001    0.000    3.918    0.013 tensor.py:207(fill_value)
      300    0.001    0.000    0.002    0.000 message_passing.py:86(__check_input__)
      600    0.001    0.000    0.001    0.000 {method 'to' of 'torch._C._TensorBase' objects}
     2400    0.001    0.000    0.001    0.000 tensor.py:173(sparse_sizes)
     1500    0.001    0.000    0.009    0.000 storage.py:179(rowptr)
      100    0.001    0.000    0.792    0.008 tensor.py:195(backward)
      900    0.001    0.000    0.001    0.000 tensor.py:149(csr)
      200    0.001    0.000    0.001    0.000 {built-in method torch._ops.profiler._record_function_exit}
      300    0.001    0.000    0.026    0.000 reduce.py:8(reduction)
      600    0.001    0.000    0.001    0.000 tensor.py:146(coo)
     1200    0.001    0.000    0.001    0.000 tensor.py:176(sparse_size)
      100    0.001    0.000    0.791    0.008 __init__.py:68(backward)
      200    0.001    0.000    0.007    0.000 activation.py:101(forward)
      100    0.001    0.000    0.005    0.000 functional.py:2312(nll_loss)
      600    0.001    0.000    0.001    0.000 {method 'update' of 'dict' objects}
      300    0.001    0.000    1.958    0.007 gcn_conv.py:193(message_and_aggregate)
     1500    0.001    0.000    0.005    0.000 tensor.py:220(size)
      100    0.001    0.000    0.001    0.000 grad_mode.py:114(__init__)
     3516    0.001    0.000    0.001    0.000 {built-in method builtins.isinstance}
      300    0.001    0.000    0.085    0.000 segment_csr.py:112(gather_csr)
      300    0.001    0.000    0.001    0.000 {built-in method builtins.min}
      300    0.001    0.000    0.016    0.000 segment_csr.py:6(segment_sum_csr)
      200    0.001    0.000    0.003    0.000 profiler.py:615(__enter__)
      300    0.001    0.000    1.957    0.007 matmul.py:121(matmul)
      100    0.001    0.000    0.004    0.000 __init__.py:28(_make_grads)
      100    0.001    0.000    0.071    0.001 grad_mode.py:24(decorate_context)
     5188    0.000    0.000    0.000    0.000 {built-in method torch._C._has_torch_function_unary}
      600    0.000    0.000    0.000    0.000 sequential.py:109(<dictcomp>)
     4800    0.000    0.000    0.000    0.000 storage.py:198(value)
     3600    0.000    0.000    0.000    0.000 storage.py:228(sparse_sizes)
      300    0.000    0.000    0.016    0.000 segment_csr.py:35(segment_csr)
      200    0.000    0.000    0.006    0.000 functional.py:1195(relu)
      200    0.000    0.000    0.003    0.000 profiler.py:607(__init__)
      300    0.000    0.000    0.000    0.000 tensor.py:343(device)
      900    0.000    0.000    0.000    0.000 storage.py:11(get_layout)
      300    0.000    0.000    0.027    0.000 reduce.py:70(sum)
      300    0.000    0.000    0.001    0.000 tensor.py:226(nnz)
     1500    0.000    0.000    0.000    0.000 storage.py:163(row)
      594    0.000    0.000    0.000    0.000 {method 'requires_grad_' of 'torch._C._TensorBase' objects}
      100    0.000    0.000    0.005    0.000 activation.py:1270(forward)
      300    0.000    0.000    1.957    0.007 matmul.py:63(spmm)
     4282    0.000    0.000    0.000    0.000 {built-in method builtins.hasattr}
      300    0.000    0.000    0.000    0.000 tensor.py:161(has_value)
     2400    0.000    0.000    0.000    0.000 storage.py:192(col)
      600    0.000    0.000    0.000    0.000 sequential.py:106(<listcomp>)
      104    0.000    0.000    0.000    0.000 {method 'format' of 'str' objects}
      608    0.000    0.000    0.000    0.000 {method 'items' of 'collections.OrderedDict' objects}
      200    0.000    0.000    0.001    0.000 profiler.py:619(__exit__)
      200    0.000    0.000    0.000    0.000 grad_mode.py:200(__init__)
     2900    0.000    0.000    0.000    0.000 {method 'values' of 'collections.OrderedDict' objects}
     3100    0.000    0.000    0.000    0.000 {method 'append' of 'list' objects}
      100    0.000    0.000    0.004    0.000 functional.py:1651(log_softmax)
      100    0.000    0.000    0.001    0.000 grad_mode.py:119(__enter__)
      606    0.000    0.000    0.000    0.000 tensor.py:593(__hash__)
       12    0.000    0.000    0.000    0.000 {built-in method zeros_like}
      100    0.000    0.000    0.000    0.000 grad_mode.py:123(__exit__)
      600    0.000    0.000    0.000    0.000 {built-in method math.sqrt}
      300    0.000    0.000    0.000    0.000 storage.py:195(has_value)
      100    0.000    0.000    0.000    0.000 container.py:186(__iter__)
      300    0.000    0.000    0.000    0.000 {built-in method torch._C.is_grad_enabled}
        4    0.000    0.000    0.000    0.000 {built-in method torch._C._jit_get_operation}
      610    0.000    0.000    0.000    0.000 {built-in method builtins.id}
      100    0.000    0.000    0.000    0.000 sequential.py:102(<dictcomp>)
      100    0.000    0.000    0.000    0.000 _reduction.py:7(get_enum)
      624    0.000    0.000    0.000    0.000 {method 'get' of 'dict' objects}
      300    0.000    0.000    0.000    0.000 message_passing.py:300(update)
      200    0.000    0.000    0.000    0.000 {built-in method torch._C._set_grad_enabled}
      100    0.000    0.000    0.000    0.000 __init__.py:60(_tensor_or_tensors_to_tuple)
      100    0.000    0.000    0.000    0.000 _jit_internal.py:833(is_scripting)
        4    0.000    0.000    0.000    0.000 _ops.py:56(__getattr__)
      100    0.000    0.000    0.000    0.000 {built-in method builtins.iter}
        8    0.000    0.000    0.000    0.000 module.py:950(__setattr__)
      100    0.000    0.000    0.000    0.000 {built-in method torch._C._has_torch_function_variadic}
      8/1    0.000    0.000    0.000    0.000 module.py:1432(train)
       15    0.000    0.000    0.000    0.000 module.py:1347(named_children)
        4    0.000    0.000    0.000    0.000 _builtins.py:141(_register_builtin)
       15    0.000    0.000    0.000    0.000 module.py:1338(children)
        1    0.000    0.000    0.000    0.000 _ops.py:52(__init__)
        1    0.000    0.000    0.000    0.000 _ops.py:75(__getattr__)
        5    0.000    0.000    0.000    0.000 {built-in method builtins.setattr}
        4    0.000    0.000    0.000    0.000 _builtins.py:110(_get_builtin_table)
        7    0.000    0.000    0.000    0.000 {method 'add' of 'set' objects}
        1    0.000    0.000    0.000    0.000 {method 'disable' of '_lsprof.Profiler' objects}