========================================================================
Using backend: pytorch
Number of node : 10, Number of node features : 128, Number of classes : 10
Density : 0.1, Random seed : 34, Epoch : 0
========================================================================
Using backend: pytorch
Number of node : 10, Number of node features : 128, Number of classes : 10
Density : 0.05, Random seed : 34, Epoch : 0
========================================================================
Using backend: pytorch
Number of node : 10, Number of node features : 128, Number of classes : 10
Density : 0.01, Random seed : 34, Epoch : 0
========================================================================
Using backend: pytorch
Number of node : 10, Number of node features : 128, Number of classes : 10
Density : 0.005, Random seed : 34, Epoch : 0
========================================================================
Using backend: pytorch
Number of node : 10, Number of node features : 128, Number of classes : 10
Density : 0.001, Random seed : 34, Epoch : 0
========================================================================
Using backend: pytorch
Number of node : 10, Number of node features : 128, Number of classes : 10
Density : 0.0005, Random seed : 34, Epoch : 0
========================================================================
Using backend: pytorch
Number of node : 10, Number of node features : 128, Number of classes : 10
Density : 0.0001, Random seed : 34, Epoch : 0
========================================================================
Using backend: pytorch
Number of node : 10, Number of node features : 128, Number of classes : 10
Density : 5e-05, Random seed : 34, Epoch : 0
========================================================================
Using backend: pytorch
Number of node : 10, Number of node features : 128, Number of classes : 10
Density : 1e-05, Random seed : 34, Epoch : 0
========================================================================
Using backend: pytorch
Number of node : 50, Number of node features : 128, Number of classes : 10
Density : 0.1, Random seed : 34, Epoch : 0
========================================================================
Using backend: pytorch
Number of node : 50, Number of node features : 128, Number of classes : 10
Density : 0.05, Random seed : 34, Epoch : 0
========================================================================
Using backend: pytorch
Number of node : 50, Number of node features : 128, Number of classes : 10
Density : 0.01, Random seed : 34, Epoch : 0
========================================================================
Using backend: pytorch
Number of node : 50, Number of node features : 128, Number of classes : 10
Density : 0.005, Random seed : 34, Epoch : 0
========================================================================
Using backend: pytorch
Number of node : 50, Number of node features : 128, Number of classes : 10
Density : 0.001, Random seed : 34, Epoch : 0
========================================================================
Using backend: pytorch
Number of node : 50, Number of node features : 128, Number of classes : 10
Density : 0.0005, Random seed : 34, Epoch : 0
========================================================================
Using backend: pytorch
Number of node : 50, Number of node features : 128, Number of classes : 10
Density : 0.0001, Random seed : 34, Epoch : 0
========================================================================
Using backend: pytorch
Number of node : 50, Number of node features : 128, Number of classes : 10
Density : 5e-05, Random seed : 34, Epoch : 0
========================================================================
Using backend: pytorch
Number of node : 50, Number of node features : 128, Number of classes : 10
Density : 1e-05, Random seed : 34, Epoch : 0
========================================================================
Using backend: pytorch
Number of node : 100, Number of node features : 128, Number of classes : 10
Density : 0.1, Random seed : 34, Epoch : 0
========================================================================
Using backend: pytorch
Number of node : 100, Number of node features : 128, Number of classes : 10
Density : 0.05, Random seed : 34, Epoch : 0
========================================================================
Using backend: pytorch
Number of node : 100, Number of node features : 128, Number of classes : 10
Density : 0.01, Random seed : 34, Epoch : 0
========================================================================
Using backend: pytorch
Number of node : 100, Number of node features : 128, Number of classes : 10
Density : 0.005, Random seed : 34, Epoch : 0
========================================================================
Using backend: pytorch
Number of node : 100, Number of node features : 128, Number of classes : 10
Density : 0.001, Random seed : 34, Epoch : 0
========================================================================
Using backend: pytorch
Number of node : 100, Number of node features : 128, Number of classes : 10
Density : 0.0005, Random seed : 34, Epoch : 0
========================================================================
Using backend: pytorch
Number of node : 100, Number of node features : 128, Number of classes : 10
Density : 0.0001, Random seed : 34, Epoch : 0
========================================================================
Using backend: pytorch
Number of node : 100, Number of node features : 128, Number of classes : 10
Density : 5e-05, Random seed : 34, Epoch : 0
========================================================================
Using backend: pytorch
Number of node : 100, Number of node features : 128, Number of classes : 10
Density : 1e-05, Random seed : 34, Epoch : 0
========================================================================
Using backend: pytorch
Number of node : 500, Number of node features : 128, Number of classes : 10
Density : 0.1, Random seed : 34, Epoch : 0
========================================================================
Using backend: pytorch
Number of node : 500, Number of node features : 128, Number of classes : 10
Density : 0.05, Random seed : 34, Epoch : 0
========================================================================
Using backend: pytorch
Number of node : 500, Number of node features : 128, Number of classes : 10
Density : 0.01, Random seed : 34, Epoch : 0
========================================================================
Using backend: pytorch
Number of node : 500, Number of node features : 128, Number of classes : 10
Density : 0.005, Random seed : 34, Epoch : 0
========================================================================
Using backend: pytorch
Number of node : 500, Number of node features : 128, Number of classes : 10
Density : 0.001, Random seed : 34, Epoch : 0
========================================================================
Using backend: pytorch
Number of node : 500, Number of node features : 128, Number of classes : 10
Density : 0.0005, Random seed : 34, Epoch : 0
========================================================================
Using backend: pytorch
Number of node : 500, Number of node features : 128, Number of classes : 10
Density : 0.0001, Random seed : 34, Epoch : 0
========================================================================
Using backend: pytorch
Number of node : 500, Number of node features : 128, Number of classes : 10
Density : 5e-05, Random seed : 34, Epoch : 0
========================================================================
Using backend: pytorch
Number of node : 500, Number of node features : 128, Number of classes : 10
Density : 1e-05, Random seed : 34, Epoch : 0
========================================================================
Using backend: pytorch
Number of node : 1000, Number of node features : 128, Number of classes : 10
Density : 0.1, Random seed : 34, Epoch : 0
========================================================================
Using backend: pytorch
Number of node : 1000, Number of node features : 128, Number of classes : 10
Density : 0.05, Random seed : 34, Epoch : 0
========================================================================
========================================================================
Using backend: pytorch
Number of node : 10, Number of node features : 128, Number of classes : 10
Density : 0.1, Random seed : 34, Epoch : 0
========================================================================
Using backend: pytorch
Number of node : 10, Number of node features : 128, Number of classes : 10
Density : 0.05, Random seed : 34, Epoch : 0
========================================================================
Using backend: pytorch
Number of node : 10, Number of node features : 128, Number of classes : 10
Density : 0.01, Random seed : 34, Epoch : 0
========================================================================
Using backend: pytorch
Number of node : 10, Number of node features : 128, Number of classes : 10
Density : 0.005, Random seed : 34, Epoch : 0
========================================================================
Using backend: pytorch
Number of node : 10, Number of node features : 128, Number of classes : 10
Density : 0.001, Random seed : 34, Epoch : 0
========================================================================
Using backend: pytorch
Number of node : 10, Number of node features : 128, Number of classes : 10
Density : 0.0005, Random seed : 34, Epoch : 0
========================================================================
Using backend: pytorch
Number of node : 10, Number of node features : 128, Number of classes : 10
Density : 0.0001, Random seed : 34, Epoch : 0
========================================================================
Using backend: pytorch
Number of node : 10, Number of node features : 128, Number of classes : 10
Density : 5e-05, Random seed : 34, Epoch : 0
========================================================================
Using backend: pytorch
Number of node : 10, Number of node features : 128, Number of classes : 10
Density : 1e-05, Random seed : 34, Epoch : 0
========================================================================
Using backend: pytorch
Number of node : 50, Number of node features : 128, Number of classes : 10
Density : 0.1, Random seed : 34, Epoch : 0
========================================================================
Using backend: pytorch
Number of node : 50, Number of node features : 128, Number of classes : 10
Density : 0.05, Random seed : 34, Epoch : 0
========================================================================
Using backend: pytorch
Number of node : 50, Number of node features : 128, Number of classes : 10
Density : 0.01, Random seed : 34, Epoch : 0
========================================================================
Using backend: pytorch
Number of node : 50, Number of node features : 128, Number of classes : 10
Density : 0.005, Random seed : 34, Epoch : 0
========================================================================
Using backend: pytorch
Number of node : 50, Number of node features : 128, Number of classes : 10
Density : 0.001, Random seed : 34, Epoch : 0
========================================================================
Using backend: pytorch
Number of node : 50, Number of node features : 128, Number of classes : 10
Density : 0.0005, Random seed : 34, Epoch : 0
========================================================================
Using backend: pytorch
Number of node : 50, Number of node features : 128, Number of classes : 10
Density : 0.0001, Random seed : 34, Epoch : 0
========================================================================
Using backend: pytorch
Number of node : 50, Number of node features : 128, Number of classes : 10
Density : 5e-05, Random seed : 34, Epoch : 0
========================================================================
Using backend: pytorch
Number of node : 50, Number of node features : 128, Number of classes : 10
Density : 1e-05, Random seed : 34, Epoch : 0
========================================================================
Using backend: pytorch
Number of node : 100, Number of node features : 128, Number of classes : 10
Density : 0.1, Random seed : 34, Epoch : 0
========================================================================
Using backend: pytorch
Number of node : 100, Number of node features : 128, Number of classes : 10
Density : 0.05, Random seed : 34, Epoch : 0
========================================================================
Using backend: pytorch
Number of node : 100, Number of node features : 128, Number of classes : 10
Density : 0.01, Random seed : 34, Epoch : 0
========================================================================
Using backend: pytorch
Number of node : 100, Number of node features : 128, Number of classes : 10
Density : 0.005, Random seed : 34, Epoch : 0
========================================================================
Using backend: pytorch
Number of node : 100, Number of node features : 128, Number of classes : 10
Density : 0.001, Random seed : 34, Epoch : 0
========================================================================
Using backend: pytorch
Number of node : 100, Number of node features : 128, Number of classes : 10
Density : 0.0005, Random seed : 34, Epoch : 0
========================================================================
Using backend: pytorch
Number of node : 100, Number of node features : 128, Number of classes : 10
Density : 0.0001, Random seed : 34, Epoch : 0
========================================================================
Using backend: pytorch
Number of node : 100, Number of node features : 128, Number of classes : 10
Density : 5e-05, Random seed : 34, Epoch : 0
========================================================================
Using backend: pytorch
Number of node : 100, Number of node features : 128, Number of classes : 10
Density : 1e-05, Random seed : 34, Epoch : 0
========================================================================
Using backend: pytorch
Number of node : 500, Number of node features : 128, Number of classes : 10
Density : 0.1, Random seed : 34, Epoch : 0
========================================================================
Using backend: pytorch
Number of node : 500, Number of node features : 128, Number of classes : 10
Density : 0.05, Random seed : 34, Epoch : 0
========================================================================
Using backend: pytorch
Number of node : 500, Number of node features : 128, Number of classes : 10
Density : 0.01, Random seed : 34, Epoch : 0
========================================================================
Using backend: pytorch
Number of node : 500, Number of node features : 128, Number of classes : 10
Density : 0.005, Random seed : 34, Epoch : 0
========================================================================
Using backend: pytorch
Number of node : 500, Number of node features : 128, Number of classes : 10
Density : 0.001, Random seed : 34, Epoch : 0
========================================================================
Using backend: pytorch
Number of node : 500, Number of node features : 128, Number of classes : 10
Density : 0.0005, Random seed : 34, Epoch : 0
========================================================================
Using backend: pytorch
Number of node : 500, Number of node features : 128, Number of classes : 10
Density : 0.0001, Random seed : 34, Epoch : 0
========================================================================
Using backend: pytorch
Number of node : 500, Number of node features : 128, Number of classes : 10
Density : 5e-05, Random seed : 34, Epoch : 0
========================================================================
Using backend: pytorch
Number of node : 500, Number of node features : 128, Number of classes : 10
Density : 1e-05, Random seed : 34, Epoch : 0
========================================================================
Using backend: pytorch
Number of node : 1000, Number of node features : 128, Number of classes : 10
Density : 0.1, Random seed : 34, Epoch : 0
========================================================================
Using backend: pytorch
Number of node : 1000, Number of node features : 128, Number of classes : 10
Density : 0.05, Random seed : 34, Epoch : 0
========================================================================
Using backend: pytorch
Number of node : 1000, Number of node features : 128, Number of classes : 10
Density : 0.01, Random seed : 34, Epoch : 0
========================================================================
Using backend: pytorch
Number of node : 1000, Number of node features : 128, Number of classes : 10
Density : 0.005, Random seed : 34, Epoch : 0
========================================================================
Using backend: pytorch
Number of node : 1000, Number of node features : 128, Number of classes : 10
Density : 0.001, Random seed : 34, Epoch : 0
========================================================================
Using backend: pytorch
Number of node : 1000, Number of node features : 128, Number of classes : 10
Density : 0.0005, Random seed : 34, Epoch : 0
========================================================================
Using backend: pytorch
Number of node : 1000, Number of node features : 128, Number of classes : 10
Density : 0.0001, Random seed : 34, Epoch : 0
========================================================================
Using backend: pytorch
Number of node : 1000, Number of node features : 128, Number of classes : 10
Density : 5e-05, Random seed : 34, Epoch : 0
========================================================================
Using backend: pytorch
Number of node : 1000, Number of node features : 128, Number of classes : 10
Density : 1e-05, Random seed : 34, Epoch : 0
========================================================================
Using backend: pytorch
Number of node : 5000, Number of node features : 128, Number of classes : 10
Density : 0.1, Random seed : 34, Epoch : 0
========================================================================
Using backend: pytorch
Number of node : 5000, Number of node features : 128, Number of classes : 10
Density : 0.05, Random seed : 34, Epoch : 0
========================================================================
Using backend: pytorch
Number of node : 5000, Number of node features : 128, Number of classes : 10
Density : 0.01, Random seed : 34, Epoch : 0
========================================================================
Using backend: pytorch
Number of node : 5000, Number of node features : 128, Number of classes : 10
Density : 0.005, Random seed : 34, Epoch : 0
========================================================================
Using backend: pytorch
Number of node : 5000, Number of node features : 128, Number of classes : 10
Density : 0.001, Random seed : 34, Epoch : 0
========================================================================
Using backend: pytorch
Number of node : 5000, Number of node features : 128, Number of classes : 10
Density : 0.0005, Random seed : 34, Epoch : 0
========================================================================
Using backend: pytorch
Number of node : 5000, Number of node features : 128, Number of classes : 10
Density : 0.0001, Random seed : 34, Epoch : 0
========================================================================
Using backend: pytorch
Number of node : 5000, Number of node features : 128, Number of classes : 10
Density : 5e-05, Random seed : 34, Epoch : 0
========================================================================
Using backend: pytorch
Number of node : 5000, Number of node features : 128, Number of classes : 10
Density : 1e-05, Random seed : 34, Epoch : 0
========================================================================
========================================================================
Using backend: pytorch
Number of node : 10, Number of node features : 128, Number of classes : 10
Density : 0.1, Random seed : 34, Epoch : 0
========================================================================
Using backend: pytorch
Number of node : 10, Number of node features : 128, Number of classes : 10
Density : 0.05, Random seed : 34, Epoch : 0
========================================================================
Using backend: pytorch
Number of node : 10, Number of node features : 128, Number of classes : 10
Density : 0.01, Random seed : 34, Epoch : 0
========================================================================
Using backend: pytorch
Number of node : 10, Number of node features : 128, Number of classes : 10
Density : 0.005, Random seed : 34, Epoch : 0
========================================================================
Using backend: pytorch
Number of node : 10, Number of node features : 128, Number of classes : 10
Density : 0.001, Random seed : 34, Epoch : 0
========================================================================
Using backend: pytorch
Number of node : 10, Number of node features : 128, Number of classes : 10
Density : 0.0005, Random seed : 34, Epoch : 0
========================================================================
Using backend: pytorch
Number of node : 10, Number of node features : 128, Number of classes : 10
Density : 0.0001, Random seed : 34, Epoch : 0
========================================================================
Using backend: pytorch
Number of node : 10, Number of node features : 128, Number of classes : 10
Density : 5e-05, Random seed : 34, Epoch : 0
========================================================================
Using backend: pytorch
Number of node : 10, Number of node features : 128, Number of classes : 10
Density : 1e-05, Random seed : 34, Epoch : 0
========================================================================
Using backend: pytorch
Number of node : 50, Number of node features : 128, Number of classes : 10
Density : 0.1, Random seed : 34, Epoch : 0
========================================================================
Using backend: pytorch
Number of node : 50, Number of node features : 128, Number of classes : 10
Density : 0.05, Random seed : 34, Epoch : 0
========================================================================
Using backend: pytorch
Number of node : 50, Number of node features : 128, Number of classes : 10
Density : 0.01, Random seed : 34, Epoch : 0
========================================================================
Using backend: pytorch
Number of node : 50, Number of node features : 128, Number of classes : 10
Density : 0.005, Random seed : 34, Epoch : 0
========================================================================
Using backend: pytorch
Number of node : 50, Number of node features : 128, Number of classes : 10
Density : 0.001, Random seed : 34, Epoch : 0
========================================================================
Using backend: pytorch
Number of node : 50, Number of node features : 128, Number of classes : 10
Density : 0.0005, Random seed : 34, Epoch : 0
========================================================================
Using backend: pytorch
Number of node : 50, Number of node features : 128, Number of classes : 10
Density : 0.0001, Random seed : 34, Epoch : 0
========================================================================
Using backend: pytorch
Number of node : 50, Number of node features : 128, Number of classes : 10
Density : 5e-05, Random seed : 34, Epoch : 0
========================================================================
Using backend: pytorch
Number of node : 50, Number of node features : 128, Number of classes : 10
Density : 1e-05, Random seed : 34, Epoch : 0
========================================================================
Using backend: pytorch
Number of node : 100, Number of node features : 128, Number of classes : 10
Density : 0.1, Random seed : 34, Epoch : 0
========================================================================
Using backend: pytorch
Number of node : 100, Number of node features : 128, Number of classes : 10
Density : 0.05, Random seed : 34, Epoch : 0
========================================================================
Using backend: pytorch
Number of node : 100, Number of node features : 128, Number of classes : 10
Density : 0.01, Random seed : 34, Epoch : 0
========================================================================
Using backend: pytorch
Number of node : 100, Number of node features : 128, Number of classes : 10
Density : 0.005, Random seed : 34, Epoch : 0
========================================================================
Using backend: pytorch
Number of node : 100, Number of node features : 128, Number of classes : 10
Density : 0.001, Random seed : 34, Epoch : 0
========================================================================
Using backend: pytorch
Number of node : 100, Number of node features : 128, Number of classes : 10
Density : 0.0005, Random seed : 34, Epoch : 0
========================================================================
Using backend: pytorch
Number of node : 100, Number of node features : 128, Number of classes : 10
Density : 0.0001, Random seed : 34, Epoch : 0
========================================================================
Using backend: pytorch
Number of node : 100, Number of node features : 128, Number of classes : 10
Density : 5e-05, Random seed : 34, Epoch : 0
========================================================================
Using backend: pytorch
Number of node : 100, Number of node features : 128, Number of classes : 10
Density : 1e-05, Random seed : 34, Epoch : 0
========================================================================
Using backend: pytorch
Number of node : 500, Number of node features : 128, Number of classes : 10
Density : 0.1, Random seed : 34, Epoch : 0
========================================================================
Using backend: pytorch
Number of node : 500, Number of node features : 128, Number of classes : 10
Density : 0.05, Random seed : 34, Epoch : 0
========================================================================
Using backend: pytorch
Number of node : 500, Number of node features : 128, Number of classes : 10
Density : 0.01, Random seed : 34, Epoch : 0
========================================================================
Using backend: pytorch
Number of node : 500, Number of node features : 128, Number of classes : 10
Density : 0.005, Random seed : 34, Epoch : 0
========================================================================
Using backend: pytorch
Number of node : 500, Number of node features : 128, Number of classes : 10
Density : 0.001, Random seed : 34, Epoch : 0
========================================================================
Using backend: pytorch
Number of node : 500, Number of node features : 128, Number of classes : 10
Density : 0.0005, Random seed : 34, Epoch : 0
========================================================================
Using backend: pytorch
Number of node : 500, Number of node features : 128, Number of classes : 10
Density : 0.0001, Random seed : 34, Epoch : 0
========================================================================
Using backend: pytorch
Number of node : 500, Number of node features : 128, Number of classes : 10
Density : 5e-05, Random seed : 34, Epoch : 0
========================================================================
Using backend: pytorch
Number of node : 500, Number of node features : 128, Number of classes : 10
Density : 1e-05, Random seed : 34, Epoch : 0
========================================================================
Using backend: pytorch
Number of node : 1000, Number of node features : 128, Number of classes : 10
Density : 0.1, Random seed : 34, Epoch : 0
========================================================================
Using backend: pytorch
Number of node : 1000, Number of node features : 128, Number of classes : 10
Density : 0.05, Random seed : 34, Epoch : 0
========================================================================
Using backend: pytorch
Number of node : 1000, Number of node features : 128, Number of classes : 10
Density : 0.01, Random seed : 34, Epoch : 0
========================================================================
Using backend: pytorch
Number of node : 1000, Number of node features : 128, Number of classes : 10
Density : 0.005, Random seed : 34, Epoch : 0
========================================================================
Using backend: pytorch
Number of node : 1000, Number of node features : 128, Number of classes : 10
Density : 0.001, Random seed : 34, Epoch : 0
========================================================================
Using backend: pytorch
Number of node : 1000, Number of node features : 128, Number of classes : 10
Density : 0.0005, Random seed : 34, Epoch : 0
========================================================================
Using backend: pytorch
Number of node : 1000, Number of node features : 128, Number of classes : 10
Density : 0.0001, Random seed : 34, Epoch : 0
========================================================================
Using backend: pytorch
Number of node : 1000, Number of node features : 128, Number of classes : 10
Density : 5e-05, Random seed : 34, Epoch : 0
========================================================================
Using backend: pytorch
Number of node : 1000, Number of node features : 128, Number of classes : 10
Density : 1e-05, Random seed : 34, Epoch : 0
========================================================================
Using backend: pytorch
Number of node : 5000, Number of node features : 128, Number of classes : 10
Density : 0.1, Random seed : 34, Epoch : 0
========================================================================
Using backend: pytorch
Number of node : 5000, Number of node features : 128, Number of classes : 10
Density : 0.05, Random seed : 34, Epoch : 0
========================================================================
Using backend: pytorch
Number of node : 5000, Number of node features : 128, Number of classes : 10
Density : 0.01, Random seed : 34, Epoch : 0
========================================================================
Using backend: pytorch
Number of node : 5000, Number of node features : 128, Number of classes : 10
Density : 0.005, Random seed : 34, Epoch : 0
========================================================================
Using backend: pytorch
Number of node : 5000, Number of node features : 128, Number of classes : 10
Density : 0.001, Random seed : 34, Epoch : 0
========================================================================
Using backend: pytorch
Number of node : 5000, Number of node features : 128, Number of classes : 10
Density : 0.0005, Random seed : 34, Epoch : 0
========================================================================
Using backend: pytorch
Number of node : 5000, Number of node features : 128, Number of classes : 10
Density : 0.0001, Random seed : 34, Epoch : 0
========================================================================
Using backend: pytorch
Number of node : 5000, Number of node features : 128, Number of classes : 10
Density : 5e-05, Random seed : 34, Epoch : 0
========================================================================
Using backend: pytorch
Number of node : 5000, Number of node features : 128, Number of classes : 10
Density : 1e-05, Random seed : 34, Epoch : 0
========================================================================
Using backend: pytorch
Number of node : 10000, Number of node features : 128, Number of classes : 10
Density : 0.1, Random seed : 34, Epoch : 0
========================================================================
Using backend: pytorch
Number of node : 10000, Number of node features : 128, Number of classes : 10
Density : 0.05, Random seed : 34, Epoch : 0
========================================================================
Using backend: pytorch
Number of node : 10000, Number of node features : 128, Number of classes : 10
Density : 0.01, Random seed : 34, Epoch : 0
========================================================================
Using backend: pytorch
Number of node : 10000, Number of node features : 128, Number of classes : 10
Density : 0.005, Random seed : 34, Epoch : 0
========================================================================
Using backend: pytorch
Number of node : 10000, Number of node features : 128, Number of classes : 10
Density : 0.001, Random seed : 34, Epoch : 0
========================================================================
Using backend: pytorch
Number of node : 10000, Number of node features : 128, Number of classes : 10
Density : 0.0005, Random seed : 34, Epoch : 0
========================================================================
Using backend: pytorch
Number of node : 10000, Number of node features : 128, Number of classes : 10
Density : 0.0001, Random seed : 34, Epoch : 0
========================================================================
Using backend: pytorch
Number of node : 10000, Number of node features : 128, Number of classes : 10
Density : 5e-05, Random seed : 34, Epoch : 0
========================================================================
Using backend: pytorch
Number of node : 10000, Number of node features : 128, Number of classes : 10
Density : 1e-05, Random seed : 34, Epoch : 0
========================================================================
Killed
========================================================================
Killed
========================================================================
Using backend: pytorch
Number of node : 50000, Number of node features : 128, Number of classes : 10
Density : 0.01, Random seed : 34, Epoch : 0
========================================================================
Using backend: pytorch
Number of node : 50000, Number of node features : 128, Number of classes : 10
Density : 0.005, Random seed : 34, Epoch : 0
========================================================================
Using backend: pytorch
Number of node : 50000, Number of node features : 128, Number of classes : 10
Density : 0.001, Random seed : 34, Epoch : 0
========================================================================
Using backend: pytorch
Number of node : 50000, Number of node features : 128, Number of classes : 10
Density : 0.0005, Random seed : 34, Epoch : 0
========================================================================
Using backend: pytorch
Number of node : 50000, Number of node features : 128, Number of classes : 10
Density : 0.0001, Random seed : 34, Epoch : 0
========================================================================
Using backend: pytorch
Number of node : 50000, Number of node features : 128, Number of classes : 10
Density : 5e-05, Random seed : 34, Epoch : 0
========================================================================
Using backend: pytorch
Number of node : 50000, Number of node features : 128, Number of classes : 10
Density : 1e-05, Random seed : 34, Epoch : 0
========================================================================
Using backend: pytorch
Number of node : 100000, Number of node features : 128, Number of classes : 10
Density : 0.1, Random seed : 34, Epoch : 0
Traceback (most recent call last):
  File "crosskernel/benchmark2.py", line 114, in <module>
    adj = sparse.random(MAT_SIZE, MAT_SIZE, density=DENSITY, dtype=np.float32, random_state=np.random.default_rng())
  File "/home/junho/.local/lib/python3.8/site-packages/scipy/sparse/construct.py", line 806, in random
    ind = random_state.choice(mn, size=k, replace=False)
  File "_generator.pyx", line 788, in numpy.random._generator.Generator.choice
numpy.core._exceptions.MemoryError: Unable to allocate 74.5 GiB for an array with shape (10000000000,) and data type int64
========================================================================
Using backend: pytorch
Number of node : 100000, Number of node features : 128, Number of classes : 10
Density : 0.05, Random seed : 34, Epoch : 0
Traceback (most recent call last):
  File "crosskernel/benchmark2.py", line 114, in <module>
    adj = sparse.random(MAT_SIZE, MAT_SIZE, density=DENSITY, dtype=np.float32, random_state=np.random.default_rng())
  File "/home/junho/.local/lib/python3.8/site-packages/scipy/sparse/construct.py", line 806, in random
    ind = random_state.choice(mn, size=k, replace=False)
  File "_generator.pyx", line 788, in numpy.random._generator.Generator.choice
numpy.core._exceptions.MemoryError: Unable to allocate 74.5 GiB for an array with shape (10000000000,) and data type int64
========================================================================
Using backend: pytorch
Number of node : 100000, Number of node features : 128, Number of classes : 10
Density : 0.01, Random seed : 34, Epoch : 0
========================================================================
Using backend: pytorch
Number of node : 100000, Number of node features : 128, Number of classes : 10
Density : 0.005, Random seed : 34, Epoch : 0
========================================================================
Using backend: pytorch
Number of node : 100000, Number of node features : 128, Number of classes : 10
Density : 0.001, Random seed : 34, Epoch : 0
========================================================================
Using backend: pytorch
Number of node : 100000, Number of node features : 128, Number of classes : 10
Density : 0.0005, Random seed : 34, Epoch : 0
========================================================================
Using backend: pytorch
Number of node : 100000, Number of node features : 128, Number of classes : 10
Density : 0.0001, Random seed : 34, Epoch : 0
========================================================================
Using backend: pytorch
Number of node : 100000, Number of node features : 128, Number of classes : 10
Density : 5e-05, Random seed : 34, Epoch : 0
========================================================================
Using backend: pytorch
Number of node : 100000, Number of node features : 128, Number of classes : 10
Density : 1e-05, Random seed : 34, Epoch : 0
========================================================================
Using backend: pytorch
Number of node : 200000, Number of node features : 128, Number of classes : 10
Density : 0.1, Random seed : 34, Epoch : 0
Traceback (most recent call last):
  File "crosskernel/benchmark2.py", line 114, in <module>
    adj = sparse.random(MAT_SIZE, MAT_SIZE, density=DENSITY, dtype=np.float32, random_state=np.random.default_rng())
  File "/home/junho/.local/lib/python3.8/site-packages/scipy/sparse/construct.py", line 806, in random
    ind = random_state.choice(mn, size=k, replace=False)
  File "_generator.pyx", line 788, in numpy.random._generator.Generator.choice
numpy.core._exceptions.MemoryError: Unable to allocate 298. GiB for an array with shape (40000000000,) and data type int64
========================================================================
Using backend: pytorch
Number of node : 200000, Number of node features : 128, Number of classes : 10
Density : 0.05, Random seed : 34, Epoch : 0
Traceback (most recent call last):
  File "crosskernel/benchmark2.py", line 114, in <module>
    adj = sparse.random(MAT_SIZE, MAT_SIZE, density=DENSITY, dtype=np.float32, random_state=np.random.default_rng())
  File "/home/junho/.local/lib/python3.8/site-packages/scipy/sparse/construct.py", line 806, in random
    ind = random_state.choice(mn, size=k, replace=False)
  File "_generator.pyx", line 788, in numpy.random._generator.Generator.choice
numpy.core._exceptions.MemoryError: Unable to allocate 298. GiB for an array with shape (40000000000,) and data type int64
========================================================================
Using backend: pytorch
Number of node : 200000, Number of node features : 128, Number of classes : 10
Density : 0.01, Random seed : 34, Epoch : 0
Traceback (most recent call last):
  File "crosskernel/benchmark2.py", line 125, in <module>
    data_pyg = SparseTensor.from_scipy(adj).to('cuda')
  File "/home/junho/.local/lib/python3.8/site-packages/torch_sparse/tensor.py", line 452, in to
    self = self.device_as(torch.tensor(0., device=device), non_blocking)
  File "/home/junho/.local/lib/python3.8/site-packages/torch_sparse/tensor.py", line 142, in device_as
    return self.from_storage(self.storage.device_as(tensor, non_blocking))
  File "/home/junho/.local/lib/python3.8/site-packages/torch_sparse/storage.py", line 495, in device_as
    value = value.to(tensor.device, non_blocking=non_blocking)
RuntimeError: CUDA out of memory. Tried to allocate 1.49 GiB (GPU 0; 8.00 GiB total capacity; 6.06 GiB already allocated; 0 bytes free; 6.08 GiB reserved in total by PyTorch)
========================================================================
terminate called after throwing an instance of 'c10::CUDAOutOfMemoryError'
  what():  CUDA out of memory. Tried to allocate 1.49 GiB (GPU 0; 8.00 GiB total capacity; 5.32 GiB already allocated; 617.48 MiB free; 5.33 GiB reserved in total by PyTorch)
Exception raised from malloc at /pytorch/c10/cuda/CUDACachingAllocator.cpp:288 (most recent call first):
frame #0: c10::Error::Error(c10::SourceLocation, std::string) + 0x42 (0x7f49962042f2 in /home/junho/.local/lib/python3.8/site-packages/torch/lib/libc10.so)
frame #1: <unknown function> + 0x1bc01 (0x7f4996462c01 in /home/junho/.local/lib/python3.8/site-packages/torch/lib/libc10_cuda.so)
frame #2: <unknown function> + 0x1c924 (0x7f4996463924 in /home/junho/.local/lib/python3.8/site-packages/torch/lib/libc10_cuda.so)
frame #3: <unknown function> + 0x1cf43 (0x7f4996463f43 in /home/junho/.local/lib/python3.8/site-packages/torch/lib/libc10_cuda.so)
frame #4: at::native::empty_cuda(c10::ArrayRef<long>, c10::optional<c10::ScalarType>, c10::optional<c10::Layout>, c10::optional<c10::Device>, c10::optional<bool>, c10::optional<c10::MemoryFormat>) + 0x200 (0x7f4999847110 in /home/junho/.local/lib/python3.8/site-packages/torch/lib/libtorch_cuda.so)
frame #5: <unknown function> + 0xec0596 (0x7f4997537596 in /home/junho/.local/lib/python3.8/site-packages/torch/lib/libtorch_cuda.so)
frame #6: <unknown function> + 0xec063d (0x7f499753763d in /home/junho/.local/lib/python3.8/site-packages/torch/lib/libtorch_cuda.so)
frame #7: <unknown function> + 0x165ab19 (0x7f49d37cbb19 in /home/junho/.local/lib/python3.8/site-packages/torch/lib/libtorch_cpu.so)
frame #8: <unknown function> + 0x1611277 (0x7f49d3782277 in /home/junho/.local/lib/python3.8/site-packages/torch/lib/libtorch_cpu.so)
frame #9: at::empty(c10::ArrayRef<long>, c10::TensorOptions, c10::optional<c10::MemoryFormat>) + 0x149 (0x7f49d3626549 in /home/junho/.local/lib/python3.8/site-packages/torch/lib/libtorch_cpu.so)
frame #10: torch::empty(c10::ArrayRef<long>, c10::TensorOptions, c10::optional<c10::MemoryFormat>) + 0x9a (0x7f49609073bd in /home/junho/.local/lib/python3.8/site-packages/dgl/tensoradapter/pytorch/libtensoradapter_pytorch_1.8.0.so)
frame #11: TAempty + 0x119 (0x7f496090386e in /home/junho/.local/lib/python3.8/site-packages/dgl/tensoradapter/pytorch/libtensoradapter_pytorch_1.8.0.so)
frame #12: dgl::runtime::NDArray::Empty(std::vector<long, std::allocator<long> >, DLDataType, DLContext) + 0xb6 (0x7f49380b57b6 in /home/junho/.local/lib/python3.8/site-packages/dgl/libdgl.so)
frame #13: dgl::runtime::NDArray::CopyTo(DLContext const&) const + 0xc0 (0x7f49380eebd0 in /home/junho/.local/lib/python3.8/site-packages/dgl/libdgl.so)
frame #14: dgl::aten::COOMatrix::CopyTo(DLContext const&) const + 0x8c (0x7f493820561c in /home/junho/.local/lib/python3.8/site-packages/dgl/libdgl.so)
frame #15: dgl::UnitGraph::CopyTo(std::shared_ptr<dgl::BaseHeteroGraph>, DLContext const&) + 0x292 (0x7f49381f5d82 in /home/junho/.local/lib/python3.8/site-packages/dgl/libdgl.so)
frame #16: dgl::HeteroGraph::CopyTo(std::shared_ptr<dgl::BaseHeteroGraph>, DLContext const&) + 0xf5 (0x7f49380ffe05 in /home/junho/.local/lib/python3.8/site-packages/dgl/libdgl.so)
frame #17: <unknown function> + 0xdb9beb (0x7f493810cbeb in /home/junho/.local/lib/python3.8/site-packages/dgl/libdgl.so)
frame #18: DGLFuncCall + 0x48 (0x7f4938099918 in /home/junho/.local/lib/python3.8/site-packages/dgl/libdgl.so)
frame #19: <unknown function> + 0x15fa9 (0x7f49606e1fa9 in /home/junho/.local/lib/python3.8/site-packages/dgl/_ffi/_cy3/core.cpython-38-x86_64-linux-gnu.so)
frame #20: <unknown function> + 0x1628b (0x7f49606e228b in /home/junho/.local/lib/python3.8/site-packages/dgl/_ffi/_cy3/core.cpython-38-x86_64-linux-gnu.so)
<omitting python frames>
frame #23: python3() [0x50a23e]
frame #30: python3() [0x67d5a1]
frame #31: python3() [0x67d61f]
frame #36: __libc_start_main + 0xf3 (0x7f49e6efe0b3 in /lib/x86_64-linux-gnu/libc.so.6)

Aborted
========================================================================
Using backend: pytorch
Number of node : 200000, Number of node features : 128, Number of classes : 10
Density : 0.001, Random seed : 34, Epoch : 0
========================================================================
Using backend: pytorch
Number of node : 200000, Number of node features : 128, Number of classes : 10
Density : 0.0005, Random seed : 34, Epoch : 0
========================================================================
Using backend: pytorch
Number of node : 200000, Number of node features : 128, Number of classes : 10
Density : 0.0001, Random seed : 34, Epoch : 0
========================================================================
Using backend: pytorch
Number of node : 200000, Number of node features : 128, Number of classes : 10
Density : 5e-05, Random seed : 34, Epoch : 0
========================================================================
Using backend: pytorch
Number of node : 200000, Number of node features : 128, Number of classes : 10
Density : 1e-05, Random seed : 34, Epoch : 0
========================================================================
Using backend: pytorch
Number of node : 300000, Number of node features : 128, Number of classes : 10
Density : 0.1, Random seed : 34, Epoch : 0
Traceback (most recent call last):
  File "crosskernel/benchmark2.py", line 114, in <module>
    adj = sparse.random(MAT_SIZE, MAT_SIZE, density=DENSITY, dtype=np.float32, random_state=np.random.default_rng())
  File "/home/junho/.local/lib/python3.8/site-packages/scipy/sparse/construct.py", line 806, in random
    ind = random_state.choice(mn, size=k, replace=False)
  File "_generator.pyx", line 788, in numpy.random._generator.Generator.choice
numpy.core._exceptions.MemoryError: Unable to allocate 671. GiB for an array with shape (90000000000,) and data type int64
========================================================================
Using backend: pytorch
Number of node : 300000, Number of node features : 128, Number of classes : 10
Density : 0.05, Random seed : 34, Epoch : 0
Traceback (most recent call last):
  File "crosskernel/benchmark2.py", line 114, in <module>
    adj = sparse.random(MAT_SIZE, MAT_SIZE, density=DENSITY, dtype=np.float32, random_state=np.random.default_rng())
  File "/home/junho/.local/lib/python3.8/site-packages/scipy/sparse/construct.py", line 806, in random
    ind = random_state.choice(mn, size=k, replace=False)
  File "_generator.pyx", line 788, in numpy.random._generator.Generator.choice
numpy.core._exceptions.MemoryError: Unable to allocate 671. GiB for an array with shape (90000000000,) and data type int64
========================================================================
Killed
========================================================================
Killed
========================================================================
Using backend: pytorch
Number of node : 300000, Number of node features : 128, Number of classes : 10
Density : 0.001, Random seed : 34, Epoch : 0
========================================================================
Using backend: pytorch
Number of node : 300000, Number of node features : 128, Number of classes : 10
Density : 0.0005, Random seed : 34, Epoch : 0
========================================================================
Using backend: pytorch
Number of node : 300000, Number of node features : 128, Number of classes : 10
Density : 0.0001, Random seed : 34, Epoch : 0
========================================================================
Using backend: pytorch
Number of node : 300000, Number of node features : 128, Number of classes : 10
Density : 5e-05, Random seed : 34, Epoch : 0
========================================================================
Using backend: pytorch
Number of node : 300000, Number of node features : 128, Number of classes : 10
Density : 1e-05, Random seed : 34, Epoch : 0
========================================================================
Using backend: pytorch
Number of node : 10, Number of node features : 128, Number of classes : 10
Density : 0.1, Random seed : 34, Epoch : 10
========================================================================
Using backend: pytorch
Number of node : 10, Number of node features : 128, Number of classes : 10
Density : 0.05, Random seed : 34, Epoch : 10
========================================================================
Using backend: pytorch
Number of node : 10, Number of node features : 128, Number of classes : 10
Density : 0.01, Random seed : 34, Epoch : 10
========================================================================
Using backend: pytorch
Number of node : 10, Number of node features : 128, Number of classes : 10
Density : 0.005, Random seed : 34, Epoch : 10
Traceback (most recent call last):
  File "crosskernel/benchmark2.py", line 140, in <module>
    out = model(node_features, data_pyg)[train_idx]
  File "/home/junho/.local/lib/python3.8/site-packages/torch/nn/modules/module.py", line 889, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/junho/.local/lib/python3.8/site-packages/torch_geometric/nn/sequential.py", line 106, in forward
    out = fn(*[state[key] for key in in_desc])
  File "/home/junho/.local/lib/python3.8/site-packages/torch/nn/modules/module.py", line 889, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/junho/.local/lib/python3.8/site-packages/torch_geometric/nn/conv/gcn_conv.py", line 171, in forward
    edge_index = gcn_norm(  # yapf: disable
  File "/home/junho/.local/lib/python3.8/site-packages/torch_geometric/nn/conv/gcn_conv.py", line 40, in gcn_norm
    adj_t = fill_diag(adj_t, fill_value)
  File "/home/junho/.local/lib/python3.8/site-packages/torch_sparse/diag.py", line 91, in fill_diag
    return set_diag(src, value.new_full(sizes, fill_value), k)
  File "/home/junho/.local/lib/python3.8/site-packages/torch_sparse/diag.py", line 42, in set_diag
    inv_mask = ~mask
RuntimeError: CUDA error: invalid configuration argument
========================================================================
Using backend: pytorch
Number of node : 10, Number of node features : 128, Number of classes : 10
Density : 0.001, Random seed : 34, Epoch : 10
Traceback (most recent call last):
  File "crosskernel/benchmark2.py", line 140, in <module>
    out = model(node_features, data_pyg)[train_idx]
  File "/home/junho/.local/lib/python3.8/site-packages/torch/nn/modules/module.py", line 889, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/junho/.local/lib/python3.8/site-packages/torch_geometric/nn/sequential.py", line 106, in forward
    out = fn(*[state[key] for key in in_desc])
  File "/home/junho/.local/lib/python3.8/site-packages/torch/nn/modules/module.py", line 889, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/junho/.local/lib/python3.8/site-packages/torch_geometric/nn/conv/gcn_conv.py", line 171, in forward
    edge_index = gcn_norm(  # yapf: disable
  File "/home/junho/.local/lib/python3.8/site-packages/torch_geometric/nn/conv/gcn_conv.py", line 40, in gcn_norm
    adj_t = fill_diag(adj_t, fill_value)
  File "/home/junho/.local/lib/python3.8/site-packages/torch_sparse/diag.py", line 91, in fill_diag
    return set_diag(src, value.new_full(sizes, fill_value), k)
  File "/home/junho/.local/lib/python3.8/site-packages/torch_sparse/diag.py", line 42, in set_diag
    inv_mask = ~mask
RuntimeError: CUDA error: invalid configuration argument
========================================================================
Using backend: pytorch
Number of node : 10, Number of node features : 128, Number of classes : 10
Density : 0.0005, Random seed : 34, Epoch : 10
Traceback (most recent call last):
  File "crosskernel/benchmark2.py", line 140, in <module>
    out = model(node_features, data_pyg)[train_idx]
  File "/home/junho/.local/lib/python3.8/site-packages/torch/nn/modules/module.py", line 889, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/junho/.local/lib/python3.8/site-packages/torch_geometric/nn/sequential.py", line 106, in forward
    out = fn(*[state[key] for key in in_desc])
  File "/home/junho/.local/lib/python3.8/site-packages/torch/nn/modules/module.py", line 889, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/junho/.local/lib/python3.8/site-packages/torch_geometric/nn/conv/gcn_conv.py", line 171, in forward
    edge_index = gcn_norm(  # yapf: disable
  File "/home/junho/.local/lib/python3.8/site-packages/torch_geometric/nn/conv/gcn_conv.py", line 40, in gcn_norm
    adj_t = fill_diag(adj_t, fill_value)
  File "/home/junho/.local/lib/python3.8/site-packages/torch_sparse/diag.py", line 91, in fill_diag
    return set_diag(src, value.new_full(sizes, fill_value), k)
  File "/home/junho/.local/lib/python3.8/site-packages/torch_sparse/diag.py", line 42, in set_diag
    inv_mask = ~mask
RuntimeError: CUDA error: invalid configuration argument
========================================================================
Using backend: pytorch
Number of node : 10, Number of node features : 128, Number of classes : 10
Density : 0.0001, Random seed : 34, Epoch : 10
Traceback (most recent call last):
  File "crosskernel/benchmark2.py", line 140, in <module>
    out = model(node_features, data_pyg)[train_idx]
  File "/home/junho/.local/lib/python3.8/site-packages/torch/nn/modules/module.py", line 889, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/junho/.local/lib/python3.8/site-packages/torch_geometric/nn/sequential.py", line 106, in forward
    out = fn(*[state[key] for key in in_desc])
  File "/home/junho/.local/lib/python3.8/site-packages/torch/nn/modules/module.py", line 889, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/junho/.local/lib/python3.8/site-packages/torch_geometric/nn/conv/gcn_conv.py", line 171, in forward
    edge_index = gcn_norm(  # yapf: disable
  File "/home/junho/.local/lib/python3.8/site-packages/torch_geometric/nn/conv/gcn_conv.py", line 40, in gcn_norm
    adj_t = fill_diag(adj_t, fill_value)
  File "/home/junho/.local/lib/python3.8/site-packages/torch_sparse/diag.py", line 91, in fill_diag
    return set_diag(src, value.new_full(sizes, fill_value), k)
  File "/home/junho/.local/lib/python3.8/site-packages/torch_sparse/diag.py", line 42, in set_diag
    inv_mask = ~mask
RuntimeError: CUDA error: invalid configuration argument
========================================================================
Using backend: pytorch
Number of node : 10, Number of node features : 128, Number of classes : 10
Density : 5e-05, Random seed : 34, Epoch : 10
Traceback (most recent call last):
  File "crosskernel/benchmark2.py", line 140, in <module>
    out = model(node_features, data_pyg)[train_idx]
  File "/home/junho/.local/lib/python3.8/site-packages/torch/nn/modules/module.py", line 889, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/junho/.local/lib/python3.8/site-packages/torch_geometric/nn/sequential.py", line 106, in forward
    out = fn(*[state[key] for key in in_desc])
  File "/home/junho/.local/lib/python3.8/site-packages/torch/nn/modules/module.py", line 889, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/junho/.local/lib/python3.8/site-packages/torch_geometric/nn/conv/gcn_conv.py", line 171, in forward
    edge_index = gcn_norm(  # yapf: disable
  File "/home/junho/.local/lib/python3.8/site-packages/torch_geometric/nn/conv/gcn_conv.py", line 40, in gcn_norm
    adj_t = fill_diag(adj_t, fill_value)
  File "/home/junho/.local/lib/python3.8/site-packages/torch_sparse/diag.py", line 91, in fill_diag
    return set_diag(src, value.new_full(sizes, fill_value), k)
  File "/home/junho/.local/lib/python3.8/site-packages/torch_sparse/diag.py", line 42, in set_diag
    inv_mask = ~mask
RuntimeError: CUDA error: invalid configuration argument
========================================================================
Using backend: pytorch
Number of node : 10, Number of node features : 128, Number of classes : 10
Density : 1e-05, Random seed : 34, Epoch : 10
Traceback (most recent call last):
  File "crosskernel/benchmark2.py", line 140, in <module>
    out = model(node_features, data_pyg)[train_idx]
  File "/home/junho/.local/lib/python3.8/site-packages/torch/nn/modules/module.py", line 889, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/junho/.local/lib/python3.8/site-packages/torch_geometric/nn/sequential.py", line 106, in forward
    out = fn(*[state[key] for key in in_desc])
  File "/home/junho/.local/lib/python3.8/site-packages/torch/nn/modules/module.py", line 889, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/junho/.local/lib/python3.8/site-packages/torch_geometric/nn/conv/gcn_conv.py", line 171, in forward
    edge_index = gcn_norm(  # yapf: disable
  File "/home/junho/.local/lib/python3.8/site-packages/torch_geometric/nn/conv/gcn_conv.py", line 40, in gcn_norm
    adj_t = fill_diag(adj_t, fill_value)
  File "/home/junho/.local/lib/python3.8/site-packages/torch_sparse/diag.py", line 91, in fill_diag
    return set_diag(src, value.new_full(sizes, fill_value), k)
  File "/home/junho/.local/lib/python3.8/site-packages/torch_sparse/diag.py", line 42, in set_diag
    inv_mask = ~mask
RuntimeError: CUDA error: invalid configuration argument
========================================================================
Using backend: pytorch
Number of node : 50, Number of node features : 128, Number of classes : 10
Density : 0.1, Random seed : 34, Epoch : 10
========================================================================
Using backend: pytorch
Number of node : 50, Number of node features : 128, Number of classes : 10
Density : 0.05, Random seed : 34, Epoch : 10
========================================================================
Using backend: pytorch
Number of node : 50, Number of node features : 128, Number of classes : 10
Density : 0.01, Random seed : 34, Epoch : 10
========================================================================
Using backend: pytorch
Number of node : 50, Number of node features : 128, Number of classes : 10
Density : 0.005, Random seed : 34, Epoch : 10
========================================================================
Using backend: pytorch
Number of node : 50, Number of node features : 128, Number of classes : 10
Density : 0.001, Random seed : 34, Epoch : 10
========================================================================
Using backend: pytorch
Number of node : 50, Number of node features : 128, Number of classes : 10
Density : 0.0005, Random seed : 34, Epoch : 10
========================================================================
Using backend: pytorch
Number of node : 50, Number of node features : 128, Number of classes : 10
Density : 0.0001, Random seed : 34, Epoch : 10
Traceback (most recent call last):
  File "crosskernel/benchmark2.py", line 140, in <module>
    out = model(node_features, data_pyg)[train_idx]
  File "/home/junho/.local/lib/python3.8/site-packages/torch/nn/modules/module.py", line 889, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/junho/.local/lib/python3.8/site-packages/torch_geometric/nn/sequential.py", line 106, in forward
    out = fn(*[state[key] for key in in_desc])
  File "/home/junho/.local/lib/python3.8/site-packages/torch/nn/modules/module.py", line 889, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/junho/.local/lib/python3.8/site-packages/torch_geometric/nn/conv/gcn_conv.py", line 171, in forward
    edge_index = gcn_norm(  # yapf: disable
  File "/home/junho/.local/lib/python3.8/site-packages/torch_geometric/nn/conv/gcn_conv.py", line 40, in gcn_norm
    adj_t = fill_diag(adj_t, fill_value)
  File "/home/junho/.local/lib/python3.8/site-packages/torch_sparse/diag.py", line 91, in fill_diag
    return set_diag(src, value.new_full(sizes, fill_value), k)
  File "/home/junho/.local/lib/python3.8/site-packages/torch_sparse/diag.py", line 42, in set_diag
    inv_mask = ~mask
RuntimeError: CUDA error: invalid configuration argument
========================================================================
Using backend: pytorch
Number of node : 50, Number of node features : 128, Number of classes : 10
Density : 5e-05, Random seed : 34, Epoch : 10
Traceback (most recent call last):
  File "crosskernel/benchmark2.py", line 140, in <module>
    out = model(node_features, data_pyg)[train_idx]
  File "/home/junho/.local/lib/python3.8/site-packages/torch/nn/modules/module.py", line 889, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/junho/.local/lib/python3.8/site-packages/torch_geometric/nn/sequential.py", line 106, in forward
    out = fn(*[state[key] for key in in_desc])
  File "/home/junho/.local/lib/python3.8/site-packages/torch/nn/modules/module.py", line 889, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/junho/.local/lib/python3.8/site-packages/torch_geometric/nn/conv/gcn_conv.py", line 171, in forward
    edge_index = gcn_norm(  # yapf: disable
  File "/home/junho/.local/lib/python3.8/site-packages/torch_geometric/nn/conv/gcn_conv.py", line 40, in gcn_norm
    adj_t = fill_diag(adj_t, fill_value)
  File "/home/junho/.local/lib/python3.8/site-packages/torch_sparse/diag.py", line 91, in fill_diag
    return set_diag(src, value.new_full(sizes, fill_value), k)
  File "/home/junho/.local/lib/python3.8/site-packages/torch_sparse/diag.py", line 42, in set_diag
    inv_mask = ~mask
RuntimeError: CUDA error: invalid configuration argument
========================================================================
Using backend: pytorch
Number of node : 50, Number of node features : 128, Number of classes : 10
Density : 1e-05, Random seed : 34, Epoch : 10
Traceback (most recent call last):
  File "crosskernel/benchmark2.py", line 140, in <module>
    out = model(node_features, data_pyg)[train_idx]
  File "/home/junho/.local/lib/python3.8/site-packages/torch/nn/modules/module.py", line 889, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/junho/.local/lib/python3.8/site-packages/torch_geometric/nn/sequential.py", line 106, in forward
    out = fn(*[state[key] for key in in_desc])
  File "/home/junho/.local/lib/python3.8/site-packages/torch/nn/modules/module.py", line 889, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/junho/.local/lib/python3.8/site-packages/torch_geometric/nn/conv/gcn_conv.py", line 171, in forward
    edge_index = gcn_norm(  # yapf: disable
  File "/home/junho/.local/lib/python3.8/site-packages/torch_geometric/nn/conv/gcn_conv.py", line 40, in gcn_norm
    adj_t = fill_diag(adj_t, fill_value)
  File "/home/junho/.local/lib/python3.8/site-packages/torch_sparse/diag.py", line 91, in fill_diag
    return set_diag(src, value.new_full(sizes, fill_value), k)
  File "/home/junho/.local/lib/python3.8/site-packages/torch_sparse/diag.py", line 42, in set_diag
    inv_mask = ~mask
RuntimeError: CUDA error: invalid configuration argument
========================================================================
Using backend: pytorch
Number of node : 100, Number of node features : 128, Number of classes : 10
Density : 0.1, Random seed : 34, Epoch : 10
========================================================================
Using backend: pytorch
Number of node : 100, Number of node features : 128, Number of classes : 10
Density : 0.05, Random seed : 34, Epoch : 10
========================================================================
Using backend: pytorch
Number of node : 100, Number of node features : 128, Number of classes : 10
Density : 0.01, Random seed : 34, Epoch : 10
========================================================================
========================================================================
Using backend: pytorch
Number of node : 10, Number of node features : 128, Number of classes : 10
Density : 0.1, Random seed : 34, Epoch : 10
========================================================================
Using backend: pytorch
Number of node : 10, Number of node features : 128, Number of classes : 10
Density : 0.05, Random seed : 34, Epoch : 10
========================================================================
Using backend: pytorch
Number of node : 10, Number of node features : 128, Number of classes : 10
Density : 0.01, Random seed : 34, Epoch : 10
========================================================================
Using backend: pytorch
Number of node : 10, Number of node features : 128, Number of classes : 10
Density : 0.005, Random seed : 34, Epoch : 10
Traceback (most recent call last):
  File "crosskernel/benchmark2.py", line 140, in <module>
    out = model(node_features, data_pyg)[train_idx]
  File "/home/junho/.local/lib/python3.8/site-packages/torch/nn/modules/module.py", line 889, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/junho/.local/lib/python3.8/site-packages/torch_geometric/nn/sequential.py", line 106, in forward
    out = fn(*[state[key] for key in in_desc])
  File "/home/junho/.local/lib/python3.8/site-packages/torch/nn/modules/module.py", line 889, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/junho/.local/lib/python3.8/site-packages/torch_geometric/nn/conv/gcn_conv.py", line 171, in forward
    edge_index = gcn_norm(  # yapf: disable
  File "/home/junho/.local/lib/python3.8/site-packages/torch_geometric/nn/conv/gcn_conv.py", line 40, in gcn_norm
    adj_t = fill_diag(adj_t, fill_value)
  File "/home/junho/.local/lib/python3.8/site-packages/torch_sparse/diag.py", line 91, in fill_diag
    return set_diag(src, value.new_full(sizes, fill_value), k)
  File "/home/junho/.local/lib/python3.8/site-packages/torch_sparse/diag.py", line 42, in set_diag
    inv_mask = ~mask
RuntimeError: CUDA error: invalid configuration argument
========================================================================
Using backend: pytorch
Number of node : 10, Number of node features : 128, Number of classes : 10
Density : 0.001, Random seed : 34, Epoch : 10
Traceback (most recent call last):
  File "crosskernel/benchmark2.py", line 140, in <module>
    out = model(node_features, data_pyg)[train_idx]
  File "/home/junho/.local/lib/python3.8/site-packages/torch/nn/modules/module.py", line 889, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/junho/.local/lib/python3.8/site-packages/torch_geometric/nn/sequential.py", line 106, in forward
    out = fn(*[state[key] for key in in_desc])
  File "/home/junho/.local/lib/python3.8/site-packages/torch/nn/modules/module.py", line 889, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/junho/.local/lib/python3.8/site-packages/torch_geometric/nn/conv/gcn_conv.py", line 171, in forward
    edge_index = gcn_norm(  # yapf: disable
  File "/home/junho/.local/lib/python3.8/site-packages/torch_geometric/nn/conv/gcn_conv.py", line 40, in gcn_norm
    adj_t = fill_diag(adj_t, fill_value)
  File "/home/junho/.local/lib/python3.8/site-packages/torch_sparse/diag.py", line 91, in fill_diag
    return set_diag(src, value.new_full(sizes, fill_value), k)
  File "/home/junho/.local/lib/python3.8/site-packages/torch_sparse/diag.py", line 42, in set_diag
    inv_mask = ~mask
RuntimeError: CUDA error: invalid configuration argument
========================================================================
Using backend: pytorch
Number of node : 10, Number of node features : 128, Number of classes : 10
Density : 0.0005, Random seed : 34, Epoch : 10
Traceback (most recent call last):
  File "crosskernel/benchmark2.py", line 140, in <module>
    out = model(node_features, data_pyg)[train_idx]
  File "/home/junho/.local/lib/python3.8/site-packages/torch/nn/modules/module.py", line 889, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/junho/.local/lib/python3.8/site-packages/torch_geometric/nn/sequential.py", line 106, in forward
    out = fn(*[state[key] for key in in_desc])
  File "/home/junho/.local/lib/python3.8/site-packages/torch/nn/modules/module.py", line 889, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/junho/.local/lib/python3.8/site-packages/torch_geometric/nn/conv/gcn_conv.py", line 171, in forward
    edge_index = gcn_norm(  # yapf: disable
  File "/home/junho/.local/lib/python3.8/site-packages/torch_geometric/nn/conv/gcn_conv.py", line 40, in gcn_norm
    adj_t = fill_diag(adj_t, fill_value)
  File "/home/junho/.local/lib/python3.8/site-packages/torch_sparse/diag.py", line 91, in fill_diag
    return set_diag(src, value.new_full(sizes, fill_value), k)
  File "/home/junho/.local/lib/python3.8/site-packages/torch_sparse/diag.py", line 42, in set_diag
    inv_mask = ~mask
RuntimeError: CUDA error: invalid configuration argument
========================================================================
Using backend: pytorch
Number of node : 10, Number of node features : 128, Number of classes : 10
Density : 0.0001, Random seed : 34, Epoch : 10
Traceback (most recent call last):
  File "crosskernel/benchmark2.py", line 140, in <module>
    out = model(node_features, data_pyg)[train_idx]
  File "/home/junho/.local/lib/python3.8/site-packages/torch/nn/modules/module.py", line 889, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/junho/.local/lib/python3.8/site-packages/torch_geometric/nn/sequential.py", line 106, in forward
    out = fn(*[state[key] for key in in_desc])
  File "/home/junho/.local/lib/python3.8/site-packages/torch/nn/modules/module.py", line 889, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/junho/.local/lib/python3.8/site-packages/torch_geometric/nn/conv/gcn_conv.py", line 171, in forward
    edge_index = gcn_norm(  # yapf: disable
  File "/home/junho/.local/lib/python3.8/site-packages/torch_geometric/nn/conv/gcn_conv.py", line 40, in gcn_norm
    adj_t = fill_diag(adj_t, fill_value)
  File "/home/junho/.local/lib/python3.8/site-packages/torch_sparse/diag.py", line 91, in fill_diag
    return set_diag(src, value.new_full(sizes, fill_value), k)
  File "/home/junho/.local/lib/python3.8/site-packages/torch_sparse/diag.py", line 42, in set_diag
    inv_mask = ~mask
RuntimeError: CUDA error: invalid configuration argument
========================================================================
Using backend: pytorch
Number of node : 10, Number of node features : 128, Number of classes : 10
Density : 5e-05, Random seed : 34, Epoch : 10
Traceback (most recent call last):
  File "crosskernel/benchmark2.py", line 140, in <module>
    out = model(node_features, data_pyg)[train_idx]
  File "/home/junho/.local/lib/python3.8/site-packages/torch/nn/modules/module.py", line 889, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/junho/.local/lib/python3.8/site-packages/torch_geometric/nn/sequential.py", line 106, in forward
    out = fn(*[state[key] for key in in_desc])
  File "/home/junho/.local/lib/python3.8/site-packages/torch/nn/modules/module.py", line 889, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/junho/.local/lib/python3.8/site-packages/torch_geometric/nn/conv/gcn_conv.py", line 171, in forward
    edge_index = gcn_norm(  # yapf: disable
  File "/home/junho/.local/lib/python3.8/site-packages/torch_geometric/nn/conv/gcn_conv.py", line 40, in gcn_norm
    adj_t = fill_diag(adj_t, fill_value)
  File "/home/junho/.local/lib/python3.8/site-packages/torch_sparse/diag.py", line 91, in fill_diag
    return set_diag(src, value.new_full(sizes, fill_value), k)
  File "/home/junho/.local/lib/python3.8/site-packages/torch_sparse/diag.py", line 42, in set_diag
    inv_mask = ~mask
RuntimeError: CUDA error: invalid configuration argument
========================================================================
Using backend: pytorch
Number of node : 10, Number of node features : 128, Number of classes : 10
Density : 1e-05, Random seed : 34, Epoch : 10
Traceback (most recent call last):
  File "crosskernel/benchmark2.py", line 140, in <module>
    out = model(node_features, data_pyg)[train_idx]
  File "/home/junho/.local/lib/python3.8/site-packages/torch/nn/modules/module.py", line 889, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/junho/.local/lib/python3.8/site-packages/torch_geometric/nn/sequential.py", line 106, in forward
    out = fn(*[state[key] for key in in_desc])
  File "/home/junho/.local/lib/python3.8/site-packages/torch/nn/modules/module.py", line 889, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/junho/.local/lib/python3.8/site-packages/torch_geometric/nn/conv/gcn_conv.py", line 171, in forward
    edge_index = gcn_norm(  # yapf: disable
  File "/home/junho/.local/lib/python3.8/site-packages/torch_geometric/nn/conv/gcn_conv.py", line 40, in gcn_norm
    adj_t = fill_diag(adj_t, fill_value)
  File "/home/junho/.local/lib/python3.8/site-packages/torch_sparse/diag.py", line 91, in fill_diag
    return set_diag(src, value.new_full(sizes, fill_value), k)
  File "/home/junho/.local/lib/python3.8/site-packages/torch_sparse/diag.py", line 42, in set_diag
    inv_mask = ~mask
RuntimeError: CUDA error: invalid configuration argument
========================================================================
Using backend: pytorch
Number of node : 50, Number of node features : 128, Number of classes : 10
Density : 0.1, Random seed : 34, Epoch : 10
========================================================================
Using backend: pytorch
Number of node : 50, Number of node features : 128, Number of classes : 10
Density : 0.05, Random seed : 34, Epoch : 10
========================================================================
Using backend: pytorch
Number of node : 50, Number of node features : 128, Number of classes : 10
Density : 0.01, Random seed : 34, Epoch : 10
========================================================================
Using backend: pytorch
Number of node : 50, Number of node features : 128, Number of classes : 10
Density : 0.005, Random seed : 34, Epoch : 10
========================================================================
Using backend: pytorch
Number of node : 50, Number of node features : 128, Number of classes : 10
Density : 0.001, Random seed : 34, Epoch : 10
========================================================================
Using backend: pytorch
Number of node : 50, Number of node features : 128, Number of classes : 10
Density : 0.0005, Random seed : 34, Epoch : 10
========================================================================
Using backend: pytorch
Number of node : 50, Number of node features : 128, Number of classes : 10
Density : 0.0001, Random seed : 34, Epoch : 10
Traceback (most recent call last):
  File "crosskernel/benchmark2.py", line 140, in <module>
    out = model(node_features, data_pyg)[train_idx]
  File "/home/junho/.local/lib/python3.8/site-packages/torch/nn/modules/module.py", line 889, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/junho/.local/lib/python3.8/site-packages/torch_geometric/nn/sequential.py", line 106, in forward
    out = fn(*[state[key] for key in in_desc])
  File "/home/junho/.local/lib/python3.8/site-packages/torch/nn/modules/module.py", line 889, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/junho/.local/lib/python3.8/site-packages/torch_geometric/nn/conv/gcn_conv.py", line 171, in forward
    edge_index = gcn_norm(  # yapf: disable
  File "/home/junho/.local/lib/python3.8/site-packages/torch_geometric/nn/conv/gcn_conv.py", line 40, in gcn_norm
    adj_t = fill_diag(adj_t, fill_value)
  File "/home/junho/.local/lib/python3.8/site-packages/torch_sparse/diag.py", line 91, in fill_diag
    return set_diag(src, value.new_full(sizes, fill_value), k)
  File "/home/junho/.local/lib/python3.8/site-packages/torch_sparse/diag.py", line 42, in set_diag
    inv_mask = ~mask
RuntimeError: CUDA error: invalid configuration argument
========================================================================
Using backend: pytorch
Number of node : 50, Number of node features : 128, Number of classes : 10
Density : 5e-05, Random seed : 34, Epoch : 10
Traceback (most recent call last):
  File "crosskernel/benchmark2.py", line 140, in <module>
    out = model(node_features, data_pyg)[train_idx]
  File "/home/junho/.local/lib/python3.8/site-packages/torch/nn/modules/module.py", line 889, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/junho/.local/lib/python3.8/site-packages/torch_geometric/nn/sequential.py", line 106, in forward
    out = fn(*[state[key] for key in in_desc])
  File "/home/junho/.local/lib/python3.8/site-packages/torch/nn/modules/module.py", line 889, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/junho/.local/lib/python3.8/site-packages/torch_geometric/nn/conv/gcn_conv.py", line 171, in forward
    edge_index = gcn_norm(  # yapf: disable
  File "/home/junho/.local/lib/python3.8/site-packages/torch_geometric/nn/conv/gcn_conv.py", line 40, in gcn_norm
    adj_t = fill_diag(adj_t, fill_value)
  File "/home/junho/.local/lib/python3.8/site-packages/torch_sparse/diag.py", line 91, in fill_diag
    return set_diag(src, value.new_full(sizes, fill_value), k)
  File "/home/junho/.local/lib/python3.8/site-packages/torch_sparse/diag.py", line 42, in set_diag
    inv_mask = ~mask
RuntimeError: CUDA error: invalid configuration argument
========================================================================
Using backend: pytorch
Number of node : 50, Number of node features : 128, Number of classes : 10
Density : 1e-05, Random seed : 34, Epoch : 10
Traceback (most recent call last):
  File "crosskernel/benchmark2.py", line 140, in <module>
    out = model(node_features, data_pyg)[train_idx]
  File "/home/junho/.local/lib/python3.8/site-packages/torch/nn/modules/module.py", line 889, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/junho/.local/lib/python3.8/site-packages/torch_geometric/nn/sequential.py", line 106, in forward
    out = fn(*[state[key] for key in in_desc])
  File "/home/junho/.local/lib/python3.8/site-packages/torch/nn/modules/module.py", line 889, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/junho/.local/lib/python3.8/site-packages/torch_geometric/nn/conv/gcn_conv.py", line 171, in forward
    edge_index = gcn_norm(  # yapf: disable
  File "/home/junho/.local/lib/python3.8/site-packages/torch_geometric/nn/conv/gcn_conv.py", line 40, in gcn_norm
    adj_t = fill_diag(adj_t, fill_value)
  File "/home/junho/.local/lib/python3.8/site-packages/torch_sparse/diag.py", line 91, in fill_diag
    return set_diag(src, value.new_full(sizes, fill_value), k)
  File "/home/junho/.local/lib/python3.8/site-packages/torch_sparse/diag.py", line 42, in set_diag
    inv_mask = ~mask
RuntimeError: CUDA error: invalid configuration argument
========================================================================
Using backend: pytorch
Number of node : 100, Number of node features : 128, Number of classes : 10
Density : 0.1, Random seed : 34, Epoch : 10
========================================================================
Using backend: pytorch
Number of node : 100, Number of node features : 128, Number of classes : 10
Density : 0.05, Random seed : 34, Epoch : 10
========================================================================
Using backend: pytorch
Number of node : 100, Number of node features : 128, Number of classes : 10
Density : 0.01, Random seed : 34, Epoch : 10
========================================================================
Using backend: pytorch
Number of node : 100, Number of node features : 128, Number of classes : 10
Density : 0.005, Random seed : 34, Epoch : 10
========================================================================
Using backend: pytorch
Number of node : 100, Number of node features : 128, Number of classes : 10
Density : 0.001, Random seed : 34, Epoch : 10
========================================================================
Using backend: pytorch
Number of node : 100, Number of node features : 128, Number of classes : 10
Density : 0.0005, Random seed : 34, Epoch : 10
========================================================================
Using backend: pytorch
Number of node : 100, Number of node features : 128, Number of classes : 10
Density : 0.0001, Random seed : 34, Epoch : 10
========================================================================
Using backend: pytorch
Number of node : 100, Number of node features : 128, Number of classes : 10
Density : 5e-05, Random seed : 34, Epoch : 10
Traceback (most recent call last):
  File "crosskernel/benchmark2.py", line 140, in <module>
    out = model(node_features, data_pyg)[train_idx]
  File "/home/junho/.local/lib/python3.8/site-packages/torch/nn/modules/module.py", line 889, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/junho/.local/lib/python3.8/site-packages/torch_geometric/nn/sequential.py", line 106, in forward
    out = fn(*[state[key] for key in in_desc])
  File "/home/junho/.local/lib/python3.8/site-packages/torch/nn/modules/module.py", line 889, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/junho/.local/lib/python3.8/site-packages/torch_geometric/nn/conv/gcn_conv.py", line 171, in forward
    edge_index = gcn_norm(  # yapf: disable
  File "/home/junho/.local/lib/python3.8/site-packages/torch_geometric/nn/conv/gcn_conv.py", line 40, in gcn_norm
    adj_t = fill_diag(adj_t, fill_value)
  File "/home/junho/.local/lib/python3.8/site-packages/torch_sparse/diag.py", line 91, in fill_diag
    return set_diag(src, value.new_full(sizes, fill_value), k)
  File "/home/junho/.local/lib/python3.8/site-packages/torch_sparse/diag.py", line 42, in set_diag
    inv_mask = ~mask
RuntimeError: CUDA error: invalid configuration argument
========================================================================
Using backend: pytorch
Number of node : 100, Number of node features : 128, Number of classes : 10
Density : 1e-05, Random seed : 34, Epoch : 10
Traceback (most recent call last):
  File "crosskernel/benchmark2.py", line 140, in <module>
    out = model(node_features, data_pyg)[train_idx]
  File "/home/junho/.local/lib/python3.8/site-packages/torch/nn/modules/module.py", line 889, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/junho/.local/lib/python3.8/site-packages/torch_geometric/nn/sequential.py", line 106, in forward
    out = fn(*[state[key] for key in in_desc])
  File "/home/junho/.local/lib/python3.8/site-packages/torch/nn/modules/module.py", line 889, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/junho/.local/lib/python3.8/site-packages/torch_geometric/nn/conv/gcn_conv.py", line 171, in forward
    edge_index = gcn_norm(  # yapf: disable
  File "/home/junho/.local/lib/python3.8/site-packages/torch_geometric/nn/conv/gcn_conv.py", line 40, in gcn_norm
    adj_t = fill_diag(adj_t, fill_value)
  File "/home/junho/.local/lib/python3.8/site-packages/torch_sparse/diag.py", line 91, in fill_diag
    return set_diag(src, value.new_full(sizes, fill_value), k)
  File "/home/junho/.local/lib/python3.8/site-packages/torch_sparse/diag.py", line 42, in set_diag
    inv_mask = ~mask
RuntimeError: CUDA error: invalid configuration argument
========================================================================
Using backend: pytorch
Number of node : 500, Number of node features : 128, Number of classes : 10
Density : 0.1, Random seed : 34, Epoch : 10
========================================================================
Using backend: pytorch
Number of node : 500, Number of node features : 128, Number of classes : 10
Density : 0.05, Random seed : 34, Epoch : 10
========================================================================
Using backend: pytorch
Number of node : 500, Number of node features : 128, Number of classes : 10
Density : 0.01, Random seed : 34, Epoch : 10
========================================================================
Using backend: pytorch
Number of node : 500, Number of node features : 128, Number of classes : 10
Density : 0.005, Random seed : 34, Epoch : 10
========================================================================
Using backend: pytorch
Number of node : 500, Number of node features : 128, Number of classes : 10
Density : 0.001, Random seed : 34, Epoch : 10
========================================================================
Using backend: pytorch
Number of node : 500, Number of node features : 128, Number of classes : 10
Density : 0.0005, Random seed : 34, Epoch : 10
========================================================================
Using backend: pytorch
Number of node : 500, Number of node features : 128, Number of classes : 10
Density : 0.0001, Random seed : 34, Epoch : 10
========================================================================
Using backend: pytorch
Number of node : 500, Number of node features : 128, Number of classes : 10
Density : 5e-05, Random seed : 34, Epoch : 10
========================================================================
Using backend: pytorch
Number of node : 500, Number of node features : 128, Number of classes : 10
Density : 1e-05, Random seed : 34, Epoch : 10
========================================================================
Using backend: pytorch
Number of node : 1000, Number of node features : 128, Number of classes : 10
Density : 0.1, Random seed : 34, Epoch : 10
========================================================================
Using backend: pytorch
Number of node : 1000, Number of node features : 128, Number of classes : 10
Density : 0.05, Random seed : 34, Epoch : 10
========================================================================
Using backend: pytorch
Number of node : 1000, Number of node features : 128, Number of classes : 10
Density : 0.01, Random seed : 34, Epoch : 10
========================================================================
Using backend: pytorch
Number of node : 1000, Number of node features : 128, Number of classes : 10
Density : 0.005, Random seed : 34, Epoch : 10
========================================================================
Using backend: pytorch
Number of node : 1000, Number of node features : 128, Number of classes : 10
Density : 0.001, Random seed : 34, Epoch : 10
========================================================================
Using backend: pytorch
Number of node : 1000, Number of node features : 128, Number of classes : 10
Density : 0.0005, Random seed : 34, Epoch : 10
========================================================================
Using backend: pytorch
Number of node : 1000, Number of node features : 128, Number of classes : 10
Density : 0.0001, Random seed : 34, Epoch : 10
========================================================================
Using backend: pytorch
Number of node : 1000, Number of node features : 128, Number of classes : 10
Density : 5e-05, Random seed : 34, Epoch : 10
========================================================================
Using backend: pytorch
Number of node : 1000, Number of node features : 128, Number of classes : 10
Density : 1e-05, Random seed : 34, Epoch : 10
========================================================================
Using backend: pytorch
Number of node : 5000, Number of node features : 128, Number of classes : 10
Density : 0.1, Random seed : 34, Epoch : 10
========================================================================
Using backend: pytorch
Number of node : 5000, Number of node features : 128, Number of classes : 10
Density : 0.05, Random seed : 34, Epoch : 10
========================================================================
Using backend: pytorch
Number of node : 5000, Number of node features : 128, Number of classes : 10
Density : 0.01, Random seed : 34, Epoch : 10
========================================================================
Using backend: pytorch
Number of node : 5000, Number of node features : 128, Number of classes : 10
Density : 0.005, Random seed : 34, Epoch : 10
========================================================================
Using backend: pytorch
Number of node : 5000, Number of node features : 128, Number of classes : 10
Density : 0.001, Random seed : 34, Epoch : 10
========================================================================
Using backend: pytorch
Number of node : 5000, Number of node features : 128, Number of classes : 10
Density : 0.0005, Random seed : 34, Epoch : 10
========================================================================
Using backend: pytorch
Number of node : 5000, Number of node features : 128, Number of classes : 10
Density : 0.0001, Random seed : 34, Epoch : 10
========================================================================
Using backend: pytorch
Number of node : 5000, Number of node features : 128, Number of classes : 10
Density : 5e-05, Random seed : 34, Epoch : 10
========================================================================
Using backend: pytorch
Number of node : 5000, Number of node features : 128, Number of classes : 10
Density : 1e-05, Random seed : 34, Epoch : 10
========================================================================
Using backend: pytorch
Number of node : 10000, Number of node features : 128, Number of classes : 10
Density : 0.1, Random seed : 34, Epoch : 10
========================================================================
Using backend: pytorch
Number of node : 10000, Number of node features : 128, Number of classes : 10
Density : 0.05, Random seed : 34, Epoch : 10
========================================================================
Using backend: pytorch
Number of node : 10000, Number of node features : 128, Number of classes : 10
Density : 0.01, Random seed : 34, Epoch : 10
========================================================================
Using backend: pytorch
Number of node : 10000, Number of node features : 128, Number of classes : 10
Density : 0.005, Random seed : 34, Epoch : 10
========================================================================
Using backend: pytorch
Number of node : 10000, Number of node features : 128, Number of classes : 10
Density : 0.001, Random seed : 34, Epoch : 10
========================================================================
Using backend: pytorch
Number of node : 10000, Number of node features : 128, Number of classes : 10
Density : 0.0005, Random seed : 34, Epoch : 10
========================================================================
Using backend: pytorch
Number of node : 10000, Number of node features : 128, Number of classes : 10
Density : 0.0001, Random seed : 34, Epoch : 10
========================================================================
Using backend: pytorch
Number of node : 10000, Number of node features : 128, Number of classes : 10
Density : 5e-05, Random seed : 34, Epoch : 10
========================================================================
Using backend: pytorch
Number of node : 10000, Number of node features : 128, Number of classes : 10
Density : 1e-05, Random seed : 34, Epoch : 10
========================================================================
Killed
========================================================================
Killed
========================================================================
Using backend: pytorch
Number of node : 50000, Number of node features : 128, Number of classes : 10
Density : 0.01, Random seed : 34, Epoch : 10
========================================================================
Using backend: pytorch
Number of node : 50000, Number of node features : 128, Number of classes : 10
Density : 0.005, Random seed : 34, Epoch : 10
========================================================================
Using backend: pytorch
Number of node : 50000, Number of node features : 128, Number of classes : 10
Density : 0.001, Random seed : 34, Epoch : 10
========================================================================
Using backend: pytorch
Number of node : 50000, Number of node features : 128, Number of classes : 10
Density : 0.0005, Random seed : 34, Epoch : 10
========================================================================
Using backend: pytorch
Number of node : 50000, Number of node features : 128, Number of classes : 10
Density : 0.0001, Random seed : 34, Epoch : 10
========================================================================
Using backend: pytorch
Number of node : 50000, Number of node features : 128, Number of classes : 10
Density : 5e-05, Random seed : 34, Epoch : 10
========================================================================
Using backend: pytorch
Number of node : 50000, Number of node features : 128, Number of classes : 10
Density : 1e-05, Random seed : 34, Epoch : 10
========================================================================
Using backend: pytorch
Number of node : 100000, Number of node features : 128, Number of classes : 10
Density : 0.1, Random seed : 34, Epoch : 10
Traceback (most recent call last):
  File "crosskernel/benchmark2.py", line 114, in <module>
    adj = sparse.random(MAT_SIZE, MAT_SIZE, density=DENSITY, dtype=np.float32, random_state=np.random.default_rng())
  File "/home/junho/.local/lib/python3.8/site-packages/scipy/sparse/construct.py", line 806, in random
    ind = random_state.choice(mn, size=k, replace=False)
  File "_generator.pyx", line 788, in numpy.random._generator.Generator.choice
numpy.core._exceptions.MemoryError: Unable to allocate 74.5 GiB for an array with shape (10000000000,) and data type int64
========================================================================
Using backend: pytorch
Number of node : 100000, Number of node features : 128, Number of classes : 10
Density : 0.05, Random seed : 34, Epoch : 10
Traceback (most recent call last):
  File "crosskernel/benchmark2.py", line 114, in <module>
    adj = sparse.random(MAT_SIZE, MAT_SIZE, density=DENSITY, dtype=np.float32, random_state=np.random.default_rng())
  File "/home/junho/.local/lib/python3.8/site-packages/scipy/sparse/construct.py", line 806, in random
    ind = random_state.choice(mn, size=k, replace=False)
  File "_generator.pyx", line 788, in numpy.random._generator.Generator.choice
numpy.core._exceptions.MemoryError: Unable to allocate 74.5 GiB for an array with shape (10000000000,) and data type int64
========================================================================
Using backend: pytorch
Number of node : 100000, Number of node features : 128, Number of classes : 10
Density : 0.01, Random seed : 34, Epoch : 10
Traceback (most recent call last):
  File "crosskernel/benchmark2.py", line 140, in <module>
    out = model(node_features, data_pyg)[train_idx]
  File "/home/junho/.local/lib/python3.8/site-packages/torch/nn/modules/module.py", line 889, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/junho/.local/lib/python3.8/site-packages/torch_geometric/nn/sequential.py", line 106, in forward
    out = fn(*[state[key] for key in in_desc])
  File "/home/junho/.local/lib/python3.8/site-packages/torch/nn/modules/module.py", line 889, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/junho/.local/lib/python3.8/site-packages/torch_geometric/nn/conv/gcn_conv.py", line 171, in forward
    edge_index = gcn_norm(  # yapf: disable
  File "/home/junho/.local/lib/python3.8/site-packages/torch_geometric/nn/conv/gcn_conv.py", line 40, in gcn_norm
    adj_t = fill_diag(adj_t, fill_value)
  File "/home/junho/.local/lib/python3.8/site-packages/torch_sparse/diag.py", line 91, in fill_diag
    return set_diag(src, value.new_full(sizes, fill_value), k)
  File "/home/junho/.local/lib/python3.8/site-packages/torch_sparse/diag.py", line 52, in set_diag
    new_col[mask] = col
RuntimeError: CUDA out of memory. Tried to allocate 764.00 MiB (GPU 0; 8.00 GiB total capacity; 5.46 GiB already allocated; 0 bytes free; 6.12 GiB reserved in total by PyTorch)
========================================================================
Using backend: pytorch
Number of node : 100000, Number of node features : 128, Number of classes : 10
Density : 0.005, Random seed : 34, Epoch : 10
Traceback (most recent call last):
  File "crosskernel/benchmark2.py", line 140, in <module>
    out = model(node_features, data_pyg)[train_idx]
  File "/home/junho/.local/lib/python3.8/site-packages/torch/nn/modules/module.py", line 889, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/junho/.local/lib/python3.8/site-packages/torch_geometric/nn/sequential.py", line 106, in forward
    out = fn(*[state[key] for key in in_desc])
  File "/home/junho/.local/lib/python3.8/site-packages/torch/nn/modules/module.py", line 889, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/junho/.local/lib/python3.8/site-packages/torch_geometric/nn/conv/gcn_conv.py", line 182, in forward
    out = self.propagate(edge_index, x=x, edge_weight=edge_weight,
  File "/home/junho/.local/lib/python3.8/site-packages/torch_geometric/nn/conv/message_passing.py", line 226, in propagate
    out = self.message_and_aggregate(edge_index, **msg_aggr_kwargs)
  File "/home/junho/.local/lib/python3.8/site-packages/torch_geometric/nn/conv/gcn_conv.py", line 194, in message_and_aggregate
    return matmul(adj_t, x, reduce=self.aggr)
  File "/home/junho/.local/lib/python3.8/site-packages/torch_sparse/matmul.py", line 133, in matmul
    return spmm(src, other, reduce)
  File "/home/junho/.local/lib/python3.8/site-packages/torch_sparse/matmul.py", line 69, in spmm
    return spmm_sum(src, other)
  File "/home/junho/.local/lib/python3.8/site-packages/torch_sparse/matmul.py", line 23, in spmm_sum
    csr2csc = src.storage.csr2csc()
  File "/home/junho/.local/lib/python3.8/site-packages/torch_sparse/storage.py", line 353, in csr2csc
    csr2csc = idx.argsort()
RuntimeError: CUDA out of memory. Tried to allocate 766.00 MiB (GPU 0; 8.00 GiB total capacity; 5.85 GiB already allocated; 0 bytes free; 6.23 GiB reserved in total by PyTorch)
========================================================================
Using backend: pytorch
Number of node : 100000, Number of node features : 128, Number of classes : 10
Density : 0.001, Random seed : 34, Epoch : 10
========================================================================
Using backend: pytorch
Number of node : 100000, Number of node features : 128, Number of classes : 10
Density : 0.0005, Random seed : 34, Epoch : 10
========================================================================
Using backend: pytorch
Number of node : 100000, Number of node features : 128, Number of classes : 10
Density : 0.0001, Random seed : 34, Epoch : 10
========================================================================
Using backend: pytorch
Number of node : 100000, Number of node features : 128, Number of classes : 10
Density : 5e-05, Random seed : 34, Epoch : 10
========================================================================
Using backend: pytorch
Number of node : 100000, Number of node features : 128, Number of classes : 10
Density : 1e-05, Random seed : 34, Epoch : 10
========================================================================
Using backend: pytorch
Number of node : 200000, Number of node features : 128, Number of classes : 10
Density : 0.1, Random seed : 34, Epoch : 10
Traceback (most recent call last):
  File "crosskernel/benchmark2.py", line 114, in <module>
    adj = sparse.random(MAT_SIZE, MAT_SIZE, density=DENSITY, dtype=np.float32, random_state=np.random.default_rng())
  File "/home/junho/.local/lib/python3.8/site-packages/scipy/sparse/construct.py", line 806, in random
    ind = random_state.choice(mn, size=k, replace=False)
  File "_generator.pyx", line 788, in numpy.random._generator.Generator.choice
numpy.core._exceptions.MemoryError: Unable to allocate 298. GiB for an array with shape (40000000000,) and data type int64
========================================================================
Using backend: pytorch
Number of node : 200000, Number of node features : 128, Number of classes : 10
Density : 0.05, Random seed : 34, Epoch : 10
Traceback (most recent call last):
  File "crosskernel/benchmark2.py", line 114, in <module>
    adj = sparse.random(MAT_SIZE, MAT_SIZE, density=DENSITY, dtype=np.float32, random_state=np.random.default_rng())
  File "/home/junho/.local/lib/python3.8/site-packages/scipy/sparse/construct.py", line 806, in random
    ind = random_state.choice(mn, size=k, replace=False)
  File "_generator.pyx", line 788, in numpy.random._generator.Generator.choice
numpy.core._exceptions.MemoryError: Unable to allocate 298. GiB for an array with shape (40000000000,) and data type int64
========================================================================
Using backend: pytorch
Number of node : 200000, Number of node features : 128, Number of classes : 10
Density : 0.01, Random seed : 34, Epoch : 10
Traceback (most recent call last):
  File "crosskernel/benchmark2.py", line 125, in <module>
    data_pyg = SparseTensor.from_scipy(adj).to('cuda')
  File "/home/junho/.local/lib/python3.8/site-packages/torch_sparse/tensor.py", line 452, in to
    self = self.device_as(torch.tensor(0., device=device), non_blocking)
  File "/home/junho/.local/lib/python3.8/site-packages/torch_sparse/tensor.py", line 142, in device_as
    return self.from_storage(self.storage.device_as(tensor, non_blocking))
  File "/home/junho/.local/lib/python3.8/site-packages/torch_sparse/storage.py", line 495, in device_as
    value = value.to(tensor.device, non_blocking=non_blocking)
RuntimeError: CUDA out of memory. Tried to allocate 1.49 GiB (GPU 0; 8.00 GiB total capacity; 6.06 GiB already allocated; 0 bytes free; 6.08 GiB reserved in total by PyTorch)
========================================================================
Using backend: pytorch
Number of node : 200000, Number of node features : 128, Number of classes : 10
Density : 0.005, Random seed : 34, Epoch : 10
Traceback (most recent call last):
  File "crosskernel/benchmark2.py", line 140, in <module>
    out = model(node_features, data_pyg)[train_idx]
  File "/home/junho/.local/lib/python3.8/site-packages/torch/nn/modules/module.py", line 889, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/junho/.local/lib/python3.8/site-packages/torch_geometric/nn/sequential.py", line 106, in forward
    out = fn(*[state[key] for key in in_desc])
  File "/home/junho/.local/lib/python3.8/site-packages/torch/nn/modules/module.py", line 889, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/junho/.local/lib/python3.8/site-packages/torch_geometric/nn/conv/gcn_conv.py", line 171, in forward
    edge_index = gcn_norm(  # yapf: disable
  File "/home/junho/.local/lib/python3.8/site-packages/torch_geometric/nn/conv/gcn_conv.py", line 40, in gcn_norm
    adj_t = fill_diag(adj_t, fill_value)
  File "/home/junho/.local/lib/python3.8/site-packages/torch_sparse/diag.py", line 91, in fill_diag
    return set_diag(src, value.new_full(sizes, fill_value), k)
  File "/home/junho/.local/lib/python3.8/site-packages/torch_sparse/diag.py", line 37, in set_diag
    src = remove_diag(src, k=k)
  File "/home/junho/.local/lib/python3.8/site-packages/torch_sparse/diag.py", line 12, in remove_diag
    new_row, new_col = row[inv_mask], col[inv_mask]
RuntimeError: CUDA out of memory. Tried to allocate 1.49 GiB (GPU 0; 8.00 GiB total capacity; 5.50 GiB already allocated; 435.08 MiB free; 5.52 GiB reserved in total by PyTorch)
========================================================================
Using backend: pytorch
Number of node : 200000, Number of node features : 128, Number of classes : 10
Density : 0.001, Random seed : 34, Epoch : 10
Traceback (most recent call last):
  File "crosskernel/benchmark2.py", line 172, in <module>
    out = model(data_dgl, node_features)
  File "/home/junho/.local/lib/python3.8/site-packages/torch/nn/modules/module.py", line 889, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/junho/.local/lib/python3.8/site-packages/dgl/nn/pytorch/utils.py", line 223, in forward
    feats = module(graph, *feats)
  File "/home/junho/.local/lib/python3.8/site-packages/torch/nn/modules/module.py", line 889, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/junho/.local/lib/python3.8/site-packages/dgl/nn/pytorch/conv/graphconv.py", line 388, in forward
    if (graph.in_degrees() == 0).any():
  File "/home/junho/.local/lib/python3.8/site-packages/dgl/heterograph.py", line 3496, in in_degrees
    deg = self._graph.in_degrees(etid, v_tensor)
  File "/home/junho/.local/lib/python3.8/site-packages/dgl/heterograph_index.py", line 577, in in_degrees
    return F.from_dgl_nd(_CAPI_DGLHeteroInDegrees(
  File "dgl/_ffi/_cython/./function.pxi", line 287, in dgl._ffi._cy3.core.FunctionBase.__call__
  File "dgl/_ffi/_cython/./function.pxi", line 222, in dgl._ffi._cy3.core.FuncCall
  File "dgl/_ffi/_cython/./function.pxi", line 211, in dgl._ffi._cy3.core.FuncCall3
  File "dgl/_ffi/_cython/./base.pxi", line 155, in dgl._ffi._cy3.core.CALL
dgl._ffi.base.DGLError: [19:44:01] /opt/dgl/src/runtime/cuda/cuda_device_api.cc:97: Check failed: e == cudaSuccess || e == cudaErrorCudartUnloading: CUDA: out of memory
Stack trace:
  [bt] (0) /home/junho/.local/lib/python3.8/site-packages/dgl/libdgl.so(dmlc::LogMessageFatal::~LogMessageFatal()+0x4f) [0x7fab07902c4f]
  [bt] (1) /home/junho/.local/lib/python3.8/site-packages/dgl/libdgl.so(dgl::runtime::CUDADeviceAPI::AllocDataSpace(DLContext, unsigned long, unsigned long, DLDataType)+0x108) [0x7fab08223078]
  [bt] (2) /home/junho/.local/lib/python3.8/site-packages/dgl/libdgl.so(dgl::runtime::WorkspacePool::AllocWorkspace(DLContext, unsigned long)+0x154) [0x7fab080c7f24]
  [bt] (3) /home/junho/.local/lib/python3.8/site-packages/dgl/libdgl.so(std::pair<dgl::runtime::NDArray, dgl::runtime::NDArray> dgl::aten::impl::Sort<(DLDeviceType)2, long>(dgl::runtime::NDArray, int)+0x134) [0x7fab0824ae84]
  [bt] (4) /home/junho/.local/lib/python3.8/site-packages/dgl/libdgl.so(dgl::aten::Sort(dgl::runtime::NDArray, int)+0x1f2) [0x7fab078e8d52]
  [bt] (5) /home/junho/.local/lib/python3.8/site-packages/dgl/libdgl.so(void dgl::aten::impl::COOSort_<(DLDeviceType)2, long>(dgl::aten::COOMatrix*, bool)+0x5b) [0x7fab082554db]
  [bt] (6) /home/junho/.local/lib/python3.8/site-packages/dgl/libdgl.so(dgl::aten::COOSort_(dgl::aten::COOMatrix*, bool)+0x344) [0x7fab078e55c4]
  [bt] (7) /home/junho/.local/lib/python3.8/site-packages/dgl/libdgl.so(dgl::aten::COOSort(dgl::aten::COOMatrix, bool)+0x471) [0x7fab0792ac61]
  [bt] (8) /home/junho/.local/lib/python3.8/site-packages/dgl/libdgl.so(dgl::aten::CSRMatrix dgl::aten::impl::COOToCSR<(DLDeviceType)2, long>(dgl::aten::COOMatrix)+0xbd) [0x7fab0825319d]


========================================================================
Using backend: pytorch
Number of node : 200000, Number of node features : 128, Number of classes : 10
Density : 0.0005, Random seed : 34, Epoch : 10
========================================================================
Using backend: pytorch
Number of node : 200000, Number of node features : 128, Number of classes : 10
Density : 0.0001, Random seed : 34, Epoch : 10
========================================================================
Using backend: pytorch
Number of node : 200000, Number of node features : 128, Number of classes : 10
Density : 5e-05, Random seed : 34, Epoch : 10
========================================================================
Using backend: pytorch
Number of node : 200000, Number of node features : 128, Number of classes : 10
Density : 1e-05, Random seed : 34, Epoch : 10
========================================================================
Using backend: pytorch
Number of node : 300000, Number of node features : 128, Number of classes : 10
Density : 0.1, Random seed : 34, Epoch : 10
Traceback (most recent call last):
  File "crosskernel/benchmark2.py", line 114, in <module>
    adj = sparse.random(MAT_SIZE, MAT_SIZE, density=DENSITY, dtype=np.float32, random_state=np.random.default_rng())
  File "/home/junho/.local/lib/python3.8/site-packages/scipy/sparse/construct.py", line 806, in random
    ind = random_state.choice(mn, size=k, replace=False)
  File "_generator.pyx", line 788, in numpy.random._generator.Generator.choice
numpy.core._exceptions.MemoryError: Unable to allocate 671. GiB for an array with shape (90000000000,) and data type int64
========================================================================
Using backend: pytorch
Number of node : 300000, Number of node features : 128, Number of classes : 10
Density : 0.05, Random seed : 34, Epoch : 10
Traceback (most recent call last):
  File "crosskernel/benchmark2.py", line 114, in <module>
    adj = sparse.random(MAT_SIZE, MAT_SIZE, density=DENSITY, dtype=np.float32, random_state=np.random.default_rng())
  File "/home/junho/.local/lib/python3.8/site-packages/scipy/sparse/construct.py", line 806, in random
    ind = random_state.choice(mn, size=k, replace=False)
  File "_generator.pyx", line 788, in numpy.random._generator.Generator.choice
numpy.core._exceptions.MemoryError: Unable to allocate 671. GiB for an array with shape (90000000000,) and data type int64
========================================================================
Killed
========================================================================
Killed
========================================================================
Using backend: pytorch
Number of node : 300000, Number of node features : 128, Number of classes : 10
Density : 0.001, Random seed : 34, Epoch : 10
Traceback (most recent call last):
  File "crosskernel/benchmark2.py", line 140, in <module>
    out = model(node_features, data_pyg)[train_idx]
  File "/home/junho/.local/lib/python3.8/site-packages/torch/nn/modules/module.py", line 889, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/junho/.local/lib/python3.8/site-packages/torch_geometric/nn/sequential.py", line 106, in forward
    out = fn(*[state[key] for key in in_desc])
  File "/home/junho/.local/lib/python3.8/site-packages/torch/nn/modules/module.py", line 889, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/junho/.local/lib/python3.8/site-packages/torch_geometric/nn/conv/gcn_conv.py", line 182, in forward
    out = self.propagate(edge_index, x=x, edge_weight=edge_weight,
  File "/home/junho/.local/lib/python3.8/site-packages/torch_geometric/nn/conv/message_passing.py", line 226, in propagate
    out = self.message_and_aggregate(edge_index, **msg_aggr_kwargs)
  File "/home/junho/.local/lib/python3.8/site-packages/torch_geometric/nn/conv/gcn_conv.py", line 194, in message_and_aggregate
    return matmul(adj_t, x, reduce=self.aggr)
  File "/home/junho/.local/lib/python3.8/site-packages/torch_sparse/matmul.py", line 133, in matmul
    return spmm(src, other, reduce)
  File "/home/junho/.local/lib/python3.8/site-packages/torch_sparse/matmul.py", line 69, in spmm
    return spmm_sum(src, other)
  File "/home/junho/.local/lib/python3.8/site-packages/torch_sparse/matmul.py", line 23, in spmm_sum
    csr2csc = src.storage.csr2csc()
  File "/home/junho/.local/lib/python3.8/site-packages/torch_sparse/storage.py", line 353, in csr2csc
    csr2csc = idx.argsort()
RuntimeError: CUDA out of memory. Tried to allocate 1.35 GiB (GPU 0; 8.00 GiB total capacity; 5.67 GiB already allocated; 118.38 MiB free; 5.89 GiB reserved in total by PyTorch)
========================================================================
Using backend: pytorch
Number of node : 300000, Number of node features : 128, Number of classes : 10
Density : 0.0005, Random seed : 34, Epoch : 10
Traceback (most recent call last):
  File "crosskernel/benchmark2.py", line 140, in <module>
    out = model(node_features, data_pyg)[train_idx]
  File "/home/junho/.local/lib/python3.8/site-packages/torch/nn/modules/module.py", line 889, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/junho/.local/lib/python3.8/site-packages/torch_geometric/nn/sequential.py", line 106, in forward
    out = fn(*[state[key] for key in in_desc])
  File "/home/junho/.local/lib/python3.8/site-packages/torch/nn/modules/module.py", line 889, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/junho/.local/lib/python3.8/site-packages/torch_geometric/nn/conv/gcn_conv.py", line 182, in forward
    out = self.propagate(edge_index, x=x, edge_weight=edge_weight,
  File "/home/junho/.local/lib/python3.8/site-packages/torch_geometric/nn/conv/message_passing.py", line 226, in propagate
    out = self.message_and_aggregate(edge_index, **msg_aggr_kwargs)
  File "/home/junho/.local/lib/python3.8/site-packages/torch_geometric/nn/conv/gcn_conv.py", line 194, in message_and_aggregate
    return matmul(adj_t, x, reduce=self.aggr)
  File "/home/junho/.local/lib/python3.8/site-packages/torch_sparse/matmul.py", line 133, in matmul
    return spmm(src, other, reduce)
  File "/home/junho/.local/lib/python3.8/site-packages/torch_sparse/matmul.py", line 69, in spmm
    return spmm_sum(src, other)
  File "/home/junho/.local/lib/python3.8/site-packages/torch_sparse/matmul.py", line 23, in spmm_sum
    csr2csc = src.storage.csr2csc()
  File "/home/junho/.local/lib/python3.8/site-packages/torch_sparse/storage.py", line 353, in csr2csc
    csr2csc = idx.argsort()
RuntimeError: CUDA out of memory. Tried to allocate 692.00 MiB (GPU 0; 8.00 GiB total capacity; 5.81 GiB already allocated; 0 bytes free; 6.23 GiB reserved in total by PyTorch)
========================================================================
Using backend: pytorch
Number of node : 300000, Number of node features : 128, Number of classes : 10
Density : 0.0001, Random seed : 34, Epoch : 10
========================================================================
Using backend: pytorch
Number of node : 300000, Number of node features : 128, Number of classes : 10
Density : 5e-05, Random seed : 34, Epoch : 10
========================================================================
Using backend: pytorch
Number of node : 300000, Number of node features : 128, Number of classes : 10
Density : 1e-05, Random seed : 34, Epoch : 10
========================================================================
Using backend: pytorch
Number of node : 10, Number of node features : 128, Number of classes : 10
Density : 0.1, Random seed : 34, Epoch : 100
========================================================================
Using backend: pytorch
Number of node : 10, Number of node features : 128, Number of classes : 10
Density : 0.05, Random seed : 34, Epoch : 100
========================================================================
Using backend: pytorch
Number of node : 10, Number of node features : 128, Number of classes : 10
Density : 0.01, Random seed : 34, Epoch : 100
========================================================================
Using backend: pytorch
Number of node : 10, Number of node features : 128, Number of classes : 10
Density : 0.005, Random seed : 34, Epoch : 100
Traceback (most recent call last):
  File "crosskernel/benchmark2.py", line 140, in <module>
    out = model(node_features, data_pyg)[train_idx]
  File "/home/junho/.local/lib/python3.8/site-packages/torch/nn/modules/module.py", line 889, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/junho/.local/lib/python3.8/site-packages/torch_geometric/nn/sequential.py", line 106, in forward
    out = fn(*[state[key] for key in in_desc])
  File "/home/junho/.local/lib/python3.8/site-packages/torch/nn/modules/module.py", line 889, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/junho/.local/lib/python3.8/site-packages/torch_geometric/nn/conv/gcn_conv.py", line 171, in forward
    edge_index = gcn_norm(  # yapf: disable
  File "/home/junho/.local/lib/python3.8/site-packages/torch_geometric/nn/conv/gcn_conv.py", line 40, in gcn_norm
    adj_t = fill_diag(adj_t, fill_value)
  File "/home/junho/.local/lib/python3.8/site-packages/torch_sparse/diag.py", line 91, in fill_diag
    return set_diag(src, value.new_full(sizes, fill_value), k)
  File "/home/junho/.local/lib/python3.8/site-packages/torch_sparse/diag.py", line 42, in set_diag
    inv_mask = ~mask
RuntimeError: CUDA error: invalid configuration argument
========================================================================
Using backend: pytorch
Number of node : 10, Number of node features : 128, Number of classes : 10
Density : 0.001, Random seed : 34, Epoch : 100
Traceback (most recent call last):
  File "crosskernel/benchmark2.py", line 140, in <module>
    out = model(node_features, data_pyg)[train_idx]
  File "/home/junho/.local/lib/python3.8/site-packages/torch/nn/modules/module.py", line 889, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/junho/.local/lib/python3.8/site-packages/torch_geometric/nn/sequential.py", line 106, in forward
    out = fn(*[state[key] for key in in_desc])
  File "/home/junho/.local/lib/python3.8/site-packages/torch/nn/modules/module.py", line 889, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/junho/.local/lib/python3.8/site-packages/torch_geometric/nn/conv/gcn_conv.py", line 171, in forward
    edge_index = gcn_norm(  # yapf: disable
  File "/home/junho/.local/lib/python3.8/site-packages/torch_geometric/nn/conv/gcn_conv.py", line 40, in gcn_norm
    adj_t = fill_diag(adj_t, fill_value)
  File "/home/junho/.local/lib/python3.8/site-packages/torch_sparse/diag.py", line 91, in fill_diag
    return set_diag(src, value.new_full(sizes, fill_value), k)
  File "/home/junho/.local/lib/python3.8/site-packages/torch_sparse/diag.py", line 42, in set_diag
    inv_mask = ~mask
RuntimeError: CUDA error: invalid configuration argument
========================================================================
Using backend: pytorch
Number of node : 10, Number of node features : 128, Number of classes : 10
Density : 0.0005, Random seed : 34, Epoch : 100
Traceback (most recent call last):
  File "crosskernel/benchmark2.py", line 140, in <module>
    out = model(node_features, data_pyg)[train_idx]
  File "/home/junho/.local/lib/python3.8/site-packages/torch/nn/modules/module.py", line 889, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/junho/.local/lib/python3.8/site-packages/torch_geometric/nn/sequential.py", line 106, in forward
    out = fn(*[state[key] for key in in_desc])
  File "/home/junho/.local/lib/python3.8/site-packages/torch/nn/modules/module.py", line 889, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/junho/.local/lib/python3.8/site-packages/torch_geometric/nn/conv/gcn_conv.py", line 171, in forward
    edge_index = gcn_norm(  # yapf: disable
  File "/home/junho/.local/lib/python3.8/site-packages/torch_geometric/nn/conv/gcn_conv.py", line 40, in gcn_norm
    adj_t = fill_diag(adj_t, fill_value)
  File "/home/junho/.local/lib/python3.8/site-packages/torch_sparse/diag.py", line 91, in fill_diag
    return set_diag(src, value.new_full(sizes, fill_value), k)
  File "/home/junho/.local/lib/python3.8/site-packages/torch_sparse/diag.py", line 42, in set_diag
    inv_mask = ~mask
RuntimeError: CUDA error: invalid configuration argument
========================================================================
Using backend: pytorch
Number of node : 10, Number of node features : 128, Number of classes : 10
Density : 0.0001, Random seed : 34, Epoch : 100
Traceback (most recent call last):
  File "crosskernel/benchmark2.py", line 140, in <module>
    out = model(node_features, data_pyg)[train_idx]
  File "/home/junho/.local/lib/python3.8/site-packages/torch/nn/modules/module.py", line 889, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/junho/.local/lib/python3.8/site-packages/torch_geometric/nn/sequential.py", line 106, in forward
    out = fn(*[state[key] for key in in_desc])
  File "/home/junho/.local/lib/python3.8/site-packages/torch/nn/modules/module.py", line 889, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/junho/.local/lib/python3.8/site-packages/torch_geometric/nn/conv/gcn_conv.py", line 171, in forward
    edge_index = gcn_norm(  # yapf: disable
  File "/home/junho/.local/lib/python3.8/site-packages/torch_geometric/nn/conv/gcn_conv.py", line 40, in gcn_norm
    adj_t = fill_diag(adj_t, fill_value)
  File "/home/junho/.local/lib/python3.8/site-packages/torch_sparse/diag.py", line 91, in fill_diag
    return set_diag(src, value.new_full(sizes, fill_value), k)
  File "/home/junho/.local/lib/python3.8/site-packages/torch_sparse/diag.py", line 42, in set_diag
    inv_mask = ~mask
RuntimeError: CUDA error: invalid configuration argument
========================================================================
Using backend: pytorch
Number of node : 10, Number of node features : 128, Number of classes : 10
Density : 5e-05, Random seed : 34, Epoch : 100
Traceback (most recent call last):
  File "crosskernel/benchmark2.py", line 140, in <module>
    out = model(node_features, data_pyg)[train_idx]
  File "/home/junho/.local/lib/python3.8/site-packages/torch/nn/modules/module.py", line 889, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/junho/.local/lib/python3.8/site-packages/torch_geometric/nn/sequential.py", line 106, in forward
    out = fn(*[state[key] for key in in_desc])
  File "/home/junho/.local/lib/python3.8/site-packages/torch/nn/modules/module.py", line 889, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/junho/.local/lib/python3.8/site-packages/torch_geometric/nn/conv/gcn_conv.py", line 171, in forward
    edge_index = gcn_norm(  # yapf: disable
  File "/home/junho/.local/lib/python3.8/site-packages/torch_geometric/nn/conv/gcn_conv.py", line 40, in gcn_norm
    adj_t = fill_diag(adj_t, fill_value)
  File "/home/junho/.local/lib/python3.8/site-packages/torch_sparse/diag.py", line 91, in fill_diag
    return set_diag(src, value.new_full(sizes, fill_value), k)
  File "/home/junho/.local/lib/python3.8/site-packages/torch_sparse/diag.py", line 42, in set_diag
    inv_mask = ~mask
RuntimeError: CUDA error: invalid configuration argument
========================================================================
Using backend: pytorch
Number of node : 10, Number of node features : 128, Number of classes : 10
Density : 1e-05, Random seed : 34, Epoch : 100
Traceback (most recent call last):
  File "crosskernel/benchmark2.py", line 140, in <module>
    out = model(node_features, data_pyg)[train_idx]
  File "/home/junho/.local/lib/python3.8/site-packages/torch/nn/modules/module.py", line 889, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/junho/.local/lib/python3.8/site-packages/torch_geometric/nn/sequential.py", line 106, in forward
    out = fn(*[state[key] for key in in_desc])
  File "/home/junho/.local/lib/python3.8/site-packages/torch/nn/modules/module.py", line 889, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/junho/.local/lib/python3.8/site-packages/torch_geometric/nn/conv/gcn_conv.py", line 171, in forward
    edge_index = gcn_norm(  # yapf: disable
  File "/home/junho/.local/lib/python3.8/site-packages/torch_geometric/nn/conv/gcn_conv.py", line 40, in gcn_norm
    adj_t = fill_diag(adj_t, fill_value)
  File "/home/junho/.local/lib/python3.8/site-packages/torch_sparse/diag.py", line 91, in fill_diag
    return set_diag(src, value.new_full(sizes, fill_value), k)
  File "/home/junho/.local/lib/python3.8/site-packages/torch_sparse/diag.py", line 42, in set_diag
    inv_mask = ~mask
RuntimeError: CUDA error: invalid configuration argument
========================================================================
Using backend: pytorch
Number of node : 50, Number of node features : 128, Number of classes : 10
Density : 0.1, Random seed : 34, Epoch : 100
========================================================================
Using backend: pytorch
Number of node : 50, Number of node features : 128, Number of classes : 10
Density : 0.05, Random seed : 34, Epoch : 100
========================================================================
Using backend: pytorch
Number of node : 50, Number of node features : 128, Number of classes : 10
Density : 0.01, Random seed : 34, Epoch : 100
========================================================================
Using backend: pytorch
Number of node : 50, Number of node features : 128, Number of classes : 10
Density : 0.005, Random seed : 34, Epoch : 100
========================================================================
Using backend: pytorch
Number of node : 50, Number of node features : 128, Number of classes : 10
Density : 0.001, Random seed : 34, Epoch : 100
========================================================================
Using backend: pytorch
Number of node : 50, Number of node features : 128, Number of classes : 10
Density : 0.0005, Random seed : 34, Epoch : 100
========================================================================
Using backend: pytorch
Number of node : 50, Number of node features : 128, Number of classes : 10
Density : 0.0001, Random seed : 34, Epoch : 100
Traceback (most recent call last):
  File "crosskernel/benchmark2.py", line 140, in <module>
    out = model(node_features, data_pyg)[train_idx]
  File "/home/junho/.local/lib/python3.8/site-packages/torch/nn/modules/module.py", line 889, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/junho/.local/lib/python3.8/site-packages/torch_geometric/nn/sequential.py", line 106, in forward
    out = fn(*[state[key] for key in in_desc])
  File "/home/junho/.local/lib/python3.8/site-packages/torch/nn/modules/module.py", line 889, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/junho/.local/lib/python3.8/site-packages/torch_geometric/nn/conv/gcn_conv.py", line 171, in forward
    edge_index = gcn_norm(  # yapf: disable
  File "/home/junho/.local/lib/python3.8/site-packages/torch_geometric/nn/conv/gcn_conv.py", line 40, in gcn_norm
    adj_t = fill_diag(adj_t, fill_value)
  File "/home/junho/.local/lib/python3.8/site-packages/torch_sparse/diag.py", line 91, in fill_diag
    return set_diag(src, value.new_full(sizes, fill_value), k)
  File "/home/junho/.local/lib/python3.8/site-packages/torch_sparse/diag.py", line 42, in set_diag
    inv_mask = ~mask
RuntimeError: CUDA error: invalid configuration argument
========================================================================
Using backend: pytorch
Number of node : 50, Number of node features : 128, Number of classes : 10
Density : 5e-05, Random seed : 34, Epoch : 100
Traceback (most recent call last):
  File "crosskernel/benchmark2.py", line 140, in <module>
    out = model(node_features, data_pyg)[train_idx]
  File "/home/junho/.local/lib/python3.8/site-packages/torch/nn/modules/module.py", line 889, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/junho/.local/lib/python3.8/site-packages/torch_geometric/nn/sequential.py", line 106, in forward
    out = fn(*[state[key] for key in in_desc])
  File "/home/junho/.local/lib/python3.8/site-packages/torch/nn/modules/module.py", line 889, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/junho/.local/lib/python3.8/site-packages/torch_geometric/nn/conv/gcn_conv.py", line 171, in forward
    edge_index = gcn_norm(  # yapf: disable
  File "/home/junho/.local/lib/python3.8/site-packages/torch_geometric/nn/conv/gcn_conv.py", line 40, in gcn_norm
    adj_t = fill_diag(adj_t, fill_value)
  File "/home/junho/.local/lib/python3.8/site-packages/torch_sparse/diag.py", line 91, in fill_diag
    return set_diag(src, value.new_full(sizes, fill_value), k)
  File "/home/junho/.local/lib/python3.8/site-packages/torch_sparse/diag.py", line 42, in set_diag
    inv_mask = ~mask
RuntimeError: CUDA error: invalid configuration argument
========================================================================
Using backend: pytorch
Number of node : 50, Number of node features : 128, Number of classes : 10
Density : 1e-05, Random seed : 34, Epoch : 100
Traceback (most recent call last):
  File "crosskernel/benchmark2.py", line 140, in <module>
    out = model(node_features, data_pyg)[train_idx]
  File "/home/junho/.local/lib/python3.8/site-packages/torch/nn/modules/module.py", line 889, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/junho/.local/lib/python3.8/site-packages/torch_geometric/nn/sequential.py", line 106, in forward
    out = fn(*[state[key] for key in in_desc])
  File "/home/junho/.local/lib/python3.8/site-packages/torch/nn/modules/module.py", line 889, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/junho/.local/lib/python3.8/site-packages/torch_geometric/nn/conv/gcn_conv.py", line 171, in forward
    edge_index = gcn_norm(  # yapf: disable
  File "/home/junho/.local/lib/python3.8/site-packages/torch_geometric/nn/conv/gcn_conv.py", line 40, in gcn_norm
    adj_t = fill_diag(adj_t, fill_value)
  File "/home/junho/.local/lib/python3.8/site-packages/torch_sparse/diag.py", line 91, in fill_diag
    return set_diag(src, value.new_full(sizes, fill_value), k)
  File "/home/junho/.local/lib/python3.8/site-packages/torch_sparse/diag.py", line 42, in set_diag
    inv_mask = ~mask
RuntimeError: CUDA error: invalid configuration argument
========================================================================
Using backend: pytorch
Number of node : 100, Number of node features : 128, Number of classes : 10
Density : 0.1, Random seed : 34, Epoch : 100
========================================================================
Using backend: pytorch
Number of node : 100, Number of node features : 128, Number of classes : 10
Density : 0.05, Random seed : 34, Epoch : 100
========================================================================
Using backend: pytorch
Number of node : 100, Number of node features : 128, Number of classes : 10
Density : 0.01, Random seed : 34, Epoch : 100
========================================================================
Using backend: pytorch
Number of node : 100, Number of node features : 128, Number of classes : 10
Density : 0.005, Random seed : 34, Epoch : 100
========================================================================
Using backend: pytorch
Number of node : 100, Number of node features : 128, Number of classes : 10
Density : 0.001, Random seed : 34, Epoch : 100
========================================================================
Using backend: pytorch
Number of node : 100, Number of node features : 128, Number of classes : 10
Density : 0.0005, Random seed : 34, Epoch : 100
========================================================================
Using backend: pytorch
Number of node : 100, Number of node features : 128, Number of classes : 10
Density : 0.0001, Random seed : 34, Epoch : 100
========================================================================
Using backend: pytorch
Number of node : 100, Number of node features : 128, Number of classes : 10
Density : 5e-05, Random seed : 34, Epoch : 100
Traceback (most recent call last):
  File "crosskernel/benchmark2.py", line 140, in <module>
    out = model(node_features, data_pyg)[train_idx]
  File "/home/junho/.local/lib/python3.8/site-packages/torch/nn/modules/module.py", line 889, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/junho/.local/lib/python3.8/site-packages/torch_geometric/nn/sequential.py", line 106, in forward
    out = fn(*[state[key] for key in in_desc])
  File "/home/junho/.local/lib/python3.8/site-packages/torch/nn/modules/module.py", line 889, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/junho/.local/lib/python3.8/site-packages/torch_geometric/nn/conv/gcn_conv.py", line 171, in forward
    edge_index = gcn_norm(  # yapf: disable
  File "/home/junho/.local/lib/python3.8/site-packages/torch_geometric/nn/conv/gcn_conv.py", line 40, in gcn_norm
    adj_t = fill_diag(adj_t, fill_value)
  File "/home/junho/.local/lib/python3.8/site-packages/torch_sparse/diag.py", line 91, in fill_diag
    return set_diag(src, value.new_full(sizes, fill_value), k)
  File "/home/junho/.local/lib/python3.8/site-packages/torch_sparse/diag.py", line 42, in set_diag
    inv_mask = ~mask
RuntimeError: CUDA error: invalid configuration argument
========================================================================
Using backend: pytorch
Number of node : 100, Number of node features : 128, Number of classes : 10
Density : 1e-05, Random seed : 34, Epoch : 100
Traceback (most recent call last):
  File "crosskernel/benchmark2.py", line 140, in <module>
    out = model(node_features, data_pyg)[train_idx]
  File "/home/junho/.local/lib/python3.8/site-packages/torch/nn/modules/module.py", line 889, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/junho/.local/lib/python3.8/site-packages/torch_geometric/nn/sequential.py", line 106, in forward
    out = fn(*[state[key] for key in in_desc])
  File "/home/junho/.local/lib/python3.8/site-packages/torch/nn/modules/module.py", line 889, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/junho/.local/lib/python3.8/site-packages/torch_geometric/nn/conv/gcn_conv.py", line 171, in forward
    edge_index = gcn_norm(  # yapf: disable
  File "/home/junho/.local/lib/python3.8/site-packages/torch_geometric/nn/conv/gcn_conv.py", line 40, in gcn_norm
    adj_t = fill_diag(adj_t, fill_value)
  File "/home/junho/.local/lib/python3.8/site-packages/torch_sparse/diag.py", line 91, in fill_diag
    return set_diag(src, value.new_full(sizes, fill_value), k)
  File "/home/junho/.local/lib/python3.8/site-packages/torch_sparse/diag.py", line 42, in set_diag
    inv_mask = ~mask
RuntimeError: CUDA error: invalid configuration argument
========================================================================
Using backend: pytorch
Number of node : 500, Number of node features : 128, Number of classes : 10
Density : 0.1, Random seed : 34, Epoch : 100
========================================================================
Using backend: pytorch
Number of node : 500, Number of node features : 128, Number of classes : 10
Density : 0.05, Random seed : 34, Epoch : 100
========================================================================
Using backend: pytorch
Number of node : 500, Number of node features : 128, Number of classes : 10
Density : 0.01, Random seed : 34, Epoch : 100
========================================================================
Using backend: pytorch
Number of node : 500, Number of node features : 128, Number of classes : 10
Density : 0.005, Random seed : 34, Epoch : 100
========================================================================
Using backend: pytorch
Number of node : 500, Number of node features : 128, Number of classes : 10
Density : 0.001, Random seed : 34, Epoch : 100
========================================================================
Using backend: pytorch
Number of node : 500, Number of node features : 128, Number of classes : 10
Density : 0.0005, Random seed : 34, Epoch : 100
========================================================================
Using backend: pytorch
Number of node : 500, Number of node features : 128, Number of classes : 10
Density : 0.0001, Random seed : 34, Epoch : 100
========================================================================
Using backend: pytorch
Number of node : 500, Number of node features : 128, Number of classes : 10
Density : 5e-05, Random seed : 34, Epoch : 100
========================================================================
Using backend: pytorch
Number of node : 500, Number of node features : 128, Number of classes : 10
Density : 1e-05, Random seed : 34, Epoch : 100
========================================================================
Using backend: pytorch
Number of node : 1000, Number of node features : 128, Number of classes : 10
Density : 0.1, Random seed : 34, Epoch : 100
========================================================================
Using backend: pytorch
Number of node : 1000, Number of node features : 128, Number of classes : 10
Density : 0.05, Random seed : 34, Epoch : 100
========================================================================
Using backend: pytorch
Number of node : 1000, Number of node features : 128, Number of classes : 10
Density : 0.01, Random seed : 34, Epoch : 100
========================================================================
Using backend: pytorch
Number of node : 1000, Number of node features : 128, Number of classes : 10
Density : 0.005, Random seed : 34, Epoch : 100
========================================================================
Using backend: pytorch
Number of node : 1000, Number of node features : 128, Number of classes : 10
Density : 0.001, Random seed : 34, Epoch : 100
========================================================================
Using backend: pytorch
Number of node : 1000, Number of node features : 128, Number of classes : 10
Density : 0.0005, Random seed : 34, Epoch : 100
========================================================================
Using backend: pytorch
Number of node : 1000, Number of node features : 128, Number of classes : 10
Density : 0.0001, Random seed : 34, Epoch : 100
========================================================================
Using backend: pytorch
Number of node : 1000, Number of node features : 128, Number of classes : 10
Density : 5e-05, Random seed : 34, Epoch : 100
========================================================================
Using backend: pytorch
Number of node : 1000, Number of node features : 128, Number of classes : 10
Density : 1e-05, Random seed : 34, Epoch : 100
========================================================================
Using backend: pytorch
Number of node : 5000, Number of node features : 128, Number of classes : 10
Density : 0.1, Random seed : 34, Epoch : 100
========================================================================
Using backend: pytorch
Number of node : 5000, Number of node features : 128, Number of classes : 10
Density : 0.05, Random seed : 34, Epoch : 100
========================================================================
Using backend: pytorch
Number of node : 5000, Number of node features : 128, Number of classes : 10
Density : 0.01, Random seed : 34, Epoch : 100
========================================================================
Using backend: pytorch
Number of node : 5000, Number of node features : 128, Number of classes : 10
Density : 0.005, Random seed : 34, Epoch : 100
========================================================================
Using backend: pytorch
Number of node : 5000, Number of node features : 128, Number of classes : 10
Density : 0.001, Random seed : 34, Epoch : 100
========================================================================
Using backend: pytorch
Number of node : 5000, Number of node features : 128, Number of classes : 10
Density : 0.0005, Random seed : 34, Epoch : 100
========================================================================
Using backend: pytorch
Number of node : 5000, Number of node features : 128, Number of classes : 10
Density : 0.0001, Random seed : 34, Epoch : 100
========================================================================
Using backend: pytorch
Number of node : 5000, Number of node features : 128, Number of classes : 10
Density : 5e-05, Random seed : 34, Epoch : 100
========================================================================
Using backend: pytorch
Number of node : 5000, Number of node features : 128, Number of classes : 10
Density : 1e-05, Random seed : 34, Epoch : 100
========================================================================
Using backend: pytorch
Number of node : 10000, Number of node features : 128, Number of classes : 10
Density : 0.1, Random seed : 34, Epoch : 100
========================================================================
Using backend: pytorch
Number of node : 10000, Number of node features : 128, Number of classes : 10
Density : 0.05, Random seed : 34, Epoch : 100
========================================================================
Using backend: pytorch
Number of node : 10000, Number of node features : 128, Number of classes : 10
Density : 0.01, Random seed : 34, Epoch : 100
========================================================================
Using backend: pytorch
Number of node : 10000, Number of node features : 128, Number of classes : 10
Density : 0.005, Random seed : 34, Epoch : 100
========================================================================
Using backend: pytorch
Number of node : 10000, Number of node features : 128, Number of classes : 10
Density : 0.001, Random seed : 34, Epoch : 100
========================================================================
Using backend: pytorch
Number of node : 10000, Number of node features : 128, Number of classes : 10
Density : 0.0005, Random seed : 34, Epoch : 100
========================================================================
Using backend: pytorch
Number of node : 10000, Number of node features : 128, Number of classes : 10
Density : 0.0001, Random seed : 34, Epoch : 100
========================================================================
Using backend: pytorch
Number of node : 10000, Number of node features : 128, Number of classes : 10
Density : 5e-05, Random seed : 34, Epoch : 100
========================================================================
Using backend: pytorch
Number of node : 10000, Number of node features : 128, Number of classes : 10
Density : 1e-05, Random seed : 34, Epoch : 100
========================================================================
Killed
========================================================================
Killed
========================================================================
Using backend: pytorch
Number of node : 50000, Number of node features : 128, Number of classes : 10
Density : 0.01, Random seed : 34, Epoch : 100
========================================================================
Using backend: pytorch
Number of node : 50000, Number of node features : 128, Number of classes : 10
Density : 0.005, Random seed : 34, Epoch : 100
========================================================================
Using backend: pytorch
Number of node : 50000, Number of node features : 128, Number of classes : 10
Density : 0.001, Random seed : 34, Epoch : 100
========================================================================
Using backend: pytorch
Number of node : 50000, Number of node features : 128, Number of classes : 10
Density : 0.0005, Random seed : 34, Epoch : 100
========================================================================
Using backend: pytorch
Number of node : 50000, Number of node features : 128, Number of classes : 10
Density : 0.0001, Random seed : 34, Epoch : 100
========================================================================
Using backend: pytorch
Number of node : 50000, Number of node features : 128, Number of classes : 10
Density : 5e-05, Random seed : 34, Epoch : 100
========================================================================
Using backend: pytorch
Number of node : 50000, Number of node features : 128, Number of classes : 10
Density : 1e-05, Random seed : 34, Epoch : 100
========================================================================
Using backend: pytorch
Number of node : 100000, Number of node features : 128, Number of classes : 10
Density : 0.1, Random seed : 34, Epoch : 100
Traceback (most recent call last):
  File "crosskernel/benchmark2.py", line 114, in <module>
    adj = sparse.random(MAT_SIZE, MAT_SIZE, density=DENSITY, dtype=np.float32, random_state=np.random.default_rng())
  File "/home/junho/.local/lib/python3.8/site-packages/scipy/sparse/construct.py", line 806, in random
    ind = random_state.choice(mn, size=k, replace=False)
  File "_generator.pyx", line 788, in numpy.random._generator.Generator.choice
numpy.core._exceptions.MemoryError: Unable to allocate 74.5 GiB for an array with shape (10000000000,) and data type int64
========================================================================
Using backend: pytorch
Number of node : 100000, Number of node features : 128, Number of classes : 10
Density : 0.05, Random seed : 34, Epoch : 100
Traceback (most recent call last):
  File "crosskernel/benchmark2.py", line 114, in <module>
    adj = sparse.random(MAT_SIZE, MAT_SIZE, density=DENSITY, dtype=np.float32, random_state=np.random.default_rng())
  File "/home/junho/.local/lib/python3.8/site-packages/scipy/sparse/construct.py", line 806, in random
    ind = random_state.choice(mn, size=k, replace=False)
  File "_generator.pyx", line 788, in numpy.random._generator.Generator.choice
numpy.core._exceptions.MemoryError: Unable to allocate 74.5 GiB for an array with shape (10000000000,) and data type int64
========================================================================
Using backend: pytorch
Number of node : 100000, Number of node features : 128, Number of classes : 10
Density : 0.01, Random seed : 34, Epoch : 100
Traceback (most recent call last):
  File "crosskernel/benchmark2.py", line 140, in <module>
    out = model(node_features, data_pyg)[train_idx]
  File "/home/junho/.local/lib/python3.8/site-packages/torch/nn/modules/module.py", line 889, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/junho/.local/lib/python3.8/site-packages/torch_geometric/nn/sequential.py", line 106, in forward
    out = fn(*[state[key] for key in in_desc])
  File "/home/junho/.local/lib/python3.8/site-packages/torch/nn/modules/module.py", line 889, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/junho/.local/lib/python3.8/site-packages/torch_geometric/nn/conv/gcn_conv.py", line 171, in forward
    edge_index = gcn_norm(  # yapf: disable
  File "/home/junho/.local/lib/python3.8/site-packages/torch_geometric/nn/conv/gcn_conv.py", line 40, in gcn_norm
    adj_t = fill_diag(adj_t, fill_value)
  File "/home/junho/.local/lib/python3.8/site-packages/torch_sparse/diag.py", line 91, in fill_diag
    return set_diag(src, value.new_full(sizes, fill_value), k)
  File "/home/junho/.local/lib/python3.8/site-packages/torch_sparse/diag.py", line 52, in set_diag
    new_col[mask] = col
RuntimeError: CUDA out of memory. Tried to allocate 764.00 MiB (GPU 0; 8.00 GiB total capacity; 5.46 GiB already allocated; 0 bytes free; 6.12 GiB reserved in total by PyTorch)
========================================================================
Using backend: pytorch
Number of node : 100000, Number of node features : 128, Number of classes : 10
Density : 0.005, Random seed : 34, Epoch : 100
Traceback (most recent call last):
  File "crosskernel/benchmark2.py", line 140, in <module>
    out = model(node_features, data_pyg)[train_idx]
  File "/home/junho/.local/lib/python3.8/site-packages/torch/nn/modules/module.py", line 889, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/junho/.local/lib/python3.8/site-packages/torch_geometric/nn/sequential.py", line 106, in forward
    out = fn(*[state[key] for key in in_desc])
  File "/home/junho/.local/lib/python3.8/site-packages/torch/nn/modules/module.py", line 889, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/junho/.local/lib/python3.8/site-packages/torch_geometric/nn/conv/gcn_conv.py", line 182, in forward
    out = self.propagate(edge_index, x=x, edge_weight=edge_weight,
  File "/home/junho/.local/lib/python3.8/site-packages/torch_geometric/nn/conv/message_passing.py", line 226, in propagate
    out = self.message_and_aggregate(edge_index, **msg_aggr_kwargs)
  File "/home/junho/.local/lib/python3.8/site-packages/torch_geometric/nn/conv/gcn_conv.py", line 194, in message_and_aggregate
    return matmul(adj_t, x, reduce=self.aggr)
  File "/home/junho/.local/lib/python3.8/site-packages/torch_sparse/matmul.py", line 133, in matmul
    return spmm(src, other, reduce)
  File "/home/junho/.local/lib/python3.8/site-packages/torch_sparse/matmul.py", line 69, in spmm
    return spmm_sum(src, other)
  File "/home/junho/.local/lib/python3.8/site-packages/torch_sparse/matmul.py", line 23, in spmm_sum
    csr2csc = src.storage.csr2csc()
  File "/home/junho/.local/lib/python3.8/site-packages/torch_sparse/storage.py", line 353, in csr2csc
    csr2csc = idx.argsort()
RuntimeError: CUDA out of memory. Tried to allocate 766.00 MiB (GPU 0; 8.00 GiB total capacity; 5.85 GiB already allocated; 0 bytes free; 6.23 GiB reserved in total by PyTorch)
========================================================================
Using backend: pytorch
Number of node : 100000, Number of node features : 128, Number of classes : 10
Density : 0.001, Random seed : 34, Epoch : 100
========================================================================
Using backend: pytorch
Number of node : 100000, Number of node features : 128, Number of classes : 10
Density : 0.0005, Random seed : 34, Epoch : 100
========================================================================
Using backend: pytorch
Number of node : 100000, Number of node features : 128, Number of classes : 10
Density : 0.0001, Random seed : 34, Epoch : 100
========================================================================
Using backend: pytorch
Number of node : 100000, Number of node features : 128, Number of classes : 10
Density : 5e-05, Random seed : 34, Epoch : 100
========================================================================
Using backend: pytorch
Number of node : 100000, Number of node features : 128, Number of classes : 10
Density : 1e-05, Random seed : 34, Epoch : 100
========================================================================
Using backend: pytorch
Number of node : 200000, Number of node features : 128, Number of classes : 10
Density : 0.1, Random seed : 34, Epoch : 100
Traceback (most recent call last):
  File "crosskernel/benchmark2.py", line 114, in <module>
    adj = sparse.random(MAT_SIZE, MAT_SIZE, density=DENSITY, dtype=np.float32, random_state=np.random.default_rng())
  File "/home/junho/.local/lib/python3.8/site-packages/scipy/sparse/construct.py", line 806, in random
    ind = random_state.choice(mn, size=k, replace=False)
  File "_generator.pyx", line 788, in numpy.random._generator.Generator.choice
numpy.core._exceptions.MemoryError: Unable to allocate 298. GiB for an array with shape (40000000000,) and data type int64
========================================================================
========================================================================
========================================================================
Using backend: pytorch
Number of node : 100000, Number of node features : 128, Number of classes : 10
Density : 0.1, Random seed : 34, Epoch : 100
Traceback (most recent call last):
  File "crosskernel/benchmark2.py", line 114, in <module>
    adj = sparse.random(MAT_SIZE, MAT_SIZE, density=DENSITY, dtype=np.float32, random_state=np.random.default_rng())
  File "/home/junho/.local/lib/python3.8/site-packages/scipy/sparse/construct.py", line 806, in random
    ind = random_state.choice(mn, size=k, replace=False)
  File "_generator.pyx", line 788, in numpy.random._generator.Generator.choice
numpy.core._exceptions.MemoryError: Unable to allocate 74.5 GiB for an array with shape (10000000000,) and data type int64
========================================================================
Using backend: pytorch
Number of node : 100000, Number of node features : 128, Number of classes : 10
Density : 0.05, Random seed : 34, Epoch : 100
Traceback (most recent call last):
  File "crosskernel/benchmark2.py", line 114, in <module>
    adj = sparse.random(MAT_SIZE, MAT_SIZE, density=DENSITY, dtype=np.float32, random_state=np.random.default_rng())
  File "/home/junho/.local/lib/python3.8/site-packages/scipy/sparse/construct.py", line 806, in random
    ind = random_state.choice(mn, size=k, replace=False)
  File "_generator.pyx", line 788, in numpy.random._generator.Generator.choice
numpy.core._exceptions.MemoryError: Unable to allocate 74.5 GiB for an array with shape (10000000000,) and data type int64
========================================================================
Using backend: pytorch
Number of node : 100000, Number of node features : 128, Number of classes : 10
Density : 0.01, Random seed : 34, Epoch : 100
Traceback (most recent call last):
  File "crosskernel/benchmark2.py", line 140, in <module>
    out = model(node_features, data_pyg)[train_idx]
  File "/home/junho/.local/lib/python3.8/site-packages/torch/nn/modules/module.py", line 889, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/junho/.local/lib/python3.8/site-packages/torch_geometric/nn/sequential.py", line 106, in forward
    out = fn(*[state[key] for key in in_desc])
  File "/home/junho/.local/lib/python3.8/site-packages/torch/nn/modules/module.py", line 889, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/junho/.local/lib/python3.8/site-packages/torch_geometric/nn/conv/gcn_conv.py", line 171, in forward
    edge_index = gcn_norm(  # yapf: disable
  File "/home/junho/.local/lib/python3.8/site-packages/torch_geometric/nn/conv/gcn_conv.py", line 40, in gcn_norm
    adj_t = fill_diag(adj_t, fill_value)
  File "/home/junho/.local/lib/python3.8/site-packages/torch_sparse/diag.py", line 91, in fill_diag
    return set_diag(src, value.new_full(sizes, fill_value), k)
  File "/home/junho/.local/lib/python3.8/site-packages/torch_sparse/diag.py", line 52, in set_diag
    new_col[mask] = col
RuntimeError: CUDA out of memory. Tried to allocate 764.00 MiB (GPU 0; 8.00 GiB total capacity; 5.46 GiB already allocated; 0 bytes free; 6.12 GiB reserved in total by PyTorch)
========================================================================
Using backend: pytorch
Number of node : 100000, Number of node features : 128, Number of classes : 10
Density : 0.005, Random seed : 34, Epoch : 100
Traceback (most recent call last):
  File "crosskernel/benchmark2.py", line 140, in <module>
    out = model(node_features, data_pyg)[train_idx]
  File "/home/junho/.local/lib/python3.8/site-packages/torch/nn/modules/module.py", line 889, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/junho/.local/lib/python3.8/site-packages/torch_geometric/nn/sequential.py", line 106, in forward
    out = fn(*[state[key] for key in in_desc])
  File "/home/junho/.local/lib/python3.8/site-packages/torch/nn/modules/module.py", line 889, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/junho/.local/lib/python3.8/site-packages/torch_geometric/nn/conv/gcn_conv.py", line 182, in forward
    out = self.propagate(edge_index, x=x, edge_weight=edge_weight,
  File "/home/junho/.local/lib/python3.8/site-packages/torch_geometric/nn/conv/message_passing.py", line 226, in propagate
    out = self.message_and_aggregate(edge_index, **msg_aggr_kwargs)
  File "/home/junho/.local/lib/python3.8/site-packages/torch_geometric/nn/conv/gcn_conv.py", line 194, in message_and_aggregate
    return matmul(adj_t, x, reduce=self.aggr)
  File "/home/junho/.local/lib/python3.8/site-packages/torch_sparse/matmul.py", line 133, in matmul
    return spmm(src, other, reduce)
  File "/home/junho/.local/lib/python3.8/site-packages/torch_sparse/matmul.py", line 69, in spmm
    return spmm_sum(src, other)
  File "/home/junho/.local/lib/python3.8/site-packages/torch_sparse/matmul.py", line 23, in spmm_sum
    csr2csc = src.storage.csr2csc()
  File "/home/junho/.local/lib/python3.8/site-packages/torch_sparse/storage.py", line 353, in csr2csc
    csr2csc = idx.argsort()
RuntimeError: CUDA out of memory. Tried to allocate 766.00 MiB (GPU 0; 8.00 GiB total capacity; 5.85 GiB already allocated; 0 bytes free; 6.23 GiB reserved in total by PyTorch)
========================================================================
Using backend: pytorch
Number of node : 100000, Number of node features : 128, Number of classes : 10
Density : 0.001, Random seed : 34, Epoch : 100
========================================================================
Using backend: pytorch
Number of node : 100000, Number of node features : 128, Number of classes : 10
Density : 0.0005, Random seed : 34, Epoch : 100
========================================================================
Using backend: pytorch
Number of node : 100000, Number of node features : 128, Number of classes : 10
Density : 0.0001, Random seed : 34, Epoch : 100
========================================================================
Using backend: pytorch
Number of node : 100000, Number of node features : 128, Number of classes : 10
Density : 5e-05, Random seed : 34, Epoch : 100
========================================================================
Using backend: pytorch
Number of node : 100000, Number of node features : 128, Number of classes : 10
Density : 1e-05, Random seed : 34, Epoch : 100
========================================================================
Using backend: pytorch
Number of node : 200000, Number of node features : 128, Number of classes : 10
Density : 0.1, Random seed : 34, Epoch : 100
Traceback (most recent call last):
  File "crosskernel/benchmark2.py", line 114, in <module>
    adj = sparse.random(MAT_SIZE, MAT_SIZE, density=DENSITY, dtype=np.float32, random_state=np.random.default_rng())
  File "/home/junho/.local/lib/python3.8/site-packages/scipy/sparse/construct.py", line 806, in random
    ind = random_state.choice(mn, size=k, replace=False)
  File "_generator.pyx", line 788, in numpy.random._generator.Generator.choice
numpy.core._exceptions.MemoryError: Unable to allocate 298. GiB for an array with shape (40000000000,) and data type int64
========================================================================
Using backend: pytorch
Number of node : 200000, Number of node features : 128, Number of classes : 10
Density : 0.05, Random seed : 34, Epoch : 100
Traceback (most recent call last):
  File "crosskernel/benchmark2.py", line 114, in <module>
    adj = sparse.random(MAT_SIZE, MAT_SIZE, density=DENSITY, dtype=np.float32, random_state=np.random.default_rng())
  File "/home/junho/.local/lib/python3.8/site-packages/scipy/sparse/construct.py", line 806, in random
    ind = random_state.choice(mn, size=k, replace=False)
  File "_generator.pyx", line 788, in numpy.random._generator.Generator.choice
numpy.core._exceptions.MemoryError: Unable to allocate 298. GiB for an array with shape (40000000000,) and data type int64
========================================================================
Using backend: pytorch
Number of node : 200000, Number of node features : 128, Number of classes : 10
Density : 0.01, Random seed : 34, Epoch : 100
Traceback (most recent call last):
  File "crosskernel/benchmark2.py", line 125, in <module>
    data_pyg = SparseTensor.from_scipy(adj).to('cuda')
  File "/home/junho/.local/lib/python3.8/site-packages/torch_sparse/tensor.py", line 452, in to
    self = self.device_as(torch.tensor(0., device=device), non_blocking)
  File "/home/junho/.local/lib/python3.8/site-packages/torch_sparse/tensor.py", line 142, in device_as
    return self.from_storage(self.storage.device_as(tensor, non_blocking))
  File "/home/junho/.local/lib/python3.8/site-packages/torch_sparse/storage.py", line 495, in device_as
    value = value.to(tensor.device, non_blocking=non_blocking)
RuntimeError: CUDA out of memory. Tried to allocate 1.49 GiB (GPU 0; 8.00 GiB total capacity; 6.06 GiB already allocated; 0 bytes free; 6.08 GiB reserved in total by PyTorch)
========================================================================
Using backend: pytorch
Number of node : 200000, Number of node features : 128, Number of classes : 10
Density : 0.005, Random seed : 34, Epoch : 100
Traceback (most recent call last):
  File "crosskernel/benchmark2.py", line 140, in <module>
    out = model(node_features, data_pyg)[train_idx]
  File "/home/junho/.local/lib/python3.8/site-packages/torch/nn/modules/module.py", line 889, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/junho/.local/lib/python3.8/site-packages/torch_geometric/nn/sequential.py", line 106, in forward
    out = fn(*[state[key] for key in in_desc])
  File "/home/junho/.local/lib/python3.8/site-packages/torch/nn/modules/module.py", line 889, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/junho/.local/lib/python3.8/site-packages/torch_geometric/nn/conv/gcn_conv.py", line 171, in forward
    edge_index = gcn_norm(  # yapf: disable
  File "/home/junho/.local/lib/python3.8/site-packages/torch_geometric/nn/conv/gcn_conv.py", line 40, in gcn_norm
    adj_t = fill_diag(adj_t, fill_value)
  File "/home/junho/.local/lib/python3.8/site-packages/torch_sparse/diag.py", line 91, in fill_diag
    return set_diag(src, value.new_full(sizes, fill_value), k)
  File "/home/junho/.local/lib/python3.8/site-packages/torch_sparse/diag.py", line 37, in set_diag
    src = remove_diag(src, k=k)
  File "/home/junho/.local/lib/python3.8/site-packages/torch_sparse/diag.py", line 12, in remove_diag
    new_row, new_col = row[inv_mask], col[inv_mask]
RuntimeError: CUDA out of memory. Tried to allocate 1.49 GiB (GPU 0; 8.00 GiB total capacity; 5.50 GiB already allocated; 475.51 MiB free; 5.52 GiB reserved in total by PyTorch)
========================================================================
Using backend: pytorch
Number of node : 200000, Number of node features : 128, Number of classes : 10
Density : 0.001, Random seed : 34, Epoch : 100
Traceback (most recent call last):
  File "crosskernel/benchmark2.py", line 172, in <module>
    out = model(data_dgl, node_features)
  File "/home/junho/.local/lib/python3.8/site-packages/torch/nn/modules/module.py", line 889, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/junho/.local/lib/python3.8/site-packages/dgl/nn/pytorch/utils.py", line 223, in forward
    feats = module(graph, *feats)
  File "/home/junho/.local/lib/python3.8/site-packages/torch/nn/modules/module.py", line 889, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/junho/.local/lib/python3.8/site-packages/dgl/nn/pytorch/conv/graphconv.py", line 388, in forward
    if (graph.in_degrees() == 0).any():
  File "/home/junho/.local/lib/python3.8/site-packages/dgl/heterograph.py", line 3496, in in_degrees
    deg = self._graph.in_degrees(etid, v_tensor)
  File "/home/junho/.local/lib/python3.8/site-packages/dgl/heterograph_index.py", line 577, in in_degrees
    return F.from_dgl_nd(_CAPI_DGLHeteroInDegrees(
  File "dgl/_ffi/_cython/./function.pxi", line 287, in dgl._ffi._cy3.core.FunctionBase.__call__
  File "dgl/_ffi/_cython/./function.pxi", line 222, in dgl._ffi._cy3.core.FuncCall
  File "dgl/_ffi/_cython/./function.pxi", line 211, in dgl._ffi._cy3.core.FuncCall3
  File "dgl/_ffi/_cython/./base.pxi", line 155, in dgl._ffi._cy3.core.CALL
dgl._ffi.base.DGLError: [20:17:33] /opt/dgl/src/runtime/cuda/cuda_device_api.cc:97: Check failed: e == cudaSuccess || e == cudaErrorCudartUnloading: CUDA: out of memory
Stack trace:
  [bt] (0) /home/junho/.local/lib/python3.8/site-packages/dgl/libdgl.so(dmlc::LogMessageFatal::~LogMessageFatal()+0x4f) [0x7f4677902c4f]
  [bt] (1) /home/junho/.local/lib/python3.8/site-packages/dgl/libdgl.so(dgl::runtime::CUDADeviceAPI::AllocDataSpace(DLContext, unsigned long, unsigned long, DLDataType)+0x108) [0x7f4678223078]
  [bt] (2) /home/junho/.local/lib/python3.8/site-packages/dgl/libdgl.so(dgl::runtime::WorkspacePool::AllocWorkspace(DLContext, unsigned long)+0x154) [0x7f46780c7f24]
  [bt] (3) /home/junho/.local/lib/python3.8/site-packages/dgl/libdgl.so(std::pair<dgl::runtime::NDArray, dgl::runtime::NDArray> dgl::aten::impl::Sort<(DLDeviceType)2, long>(dgl::runtime::NDArray, int)+0x134) [0x7f467824ae84]
  [bt] (4) /home/junho/.local/lib/python3.8/site-packages/dgl/libdgl.so(dgl::aten::Sort(dgl::runtime::NDArray, int)+0x1f2) [0x7f46778e8d52]
  [bt] (5) /home/junho/.local/lib/python3.8/site-packages/dgl/libdgl.so(void dgl::aten::impl::COOSort_<(DLDeviceType)2, long>(dgl::aten::COOMatrix*, bool)+0x5b) [0x7f46782554db]
  [bt] (6) /home/junho/.local/lib/python3.8/site-packages/dgl/libdgl.so(dgl::aten::COOSort_(dgl::aten::COOMatrix*, bool)+0x344) [0x7f46778e55c4]
  [bt] (7) /home/junho/.local/lib/python3.8/site-packages/dgl/libdgl.so(dgl::aten::COOSort(dgl::aten::COOMatrix, bool)+0x471) [0x7f467792ac61]
  [bt] (8) /home/junho/.local/lib/python3.8/site-packages/dgl/libdgl.so(dgl::aten::CSRMatrix dgl::aten::impl::COOToCSR<(DLDeviceType)2, long>(dgl::aten::COOMatrix)+0xbd) [0x7f467825319d]


========================================================================
Using backend: pytorch
Number of node : 200000, Number of node features : 128, Number of classes : 10
Density : 0.0005, Random seed : 34, Epoch : 100
========================================================================
Using backend: pytorch
Number of node : 200000, Number of node features : 128, Number of classes : 10
Density : 0.0001, Random seed : 34, Epoch : 100
========================================================================
Using backend: pytorch
Number of node : 200000, Number of node features : 128, Number of classes : 10
Density : 5e-05, Random seed : 34, Epoch : 100
========================================================================
Using backend: pytorch
Number of node : 200000, Number of node features : 128, Number of classes : 10
Density : 1e-05, Random seed : 34, Epoch : 100
========================================================================
Using backend: pytorch
Number of node : 300000, Number of node features : 128, Number of classes : 10
Density : 0.1, Random seed : 34, Epoch : 100
Traceback (most recent call last):
  File "crosskernel/benchmark2.py", line 114, in <module>
    adj = sparse.random(MAT_SIZE, MAT_SIZE, density=DENSITY, dtype=np.float32, random_state=np.random.default_rng())
  File "/home/junho/.local/lib/python3.8/site-packages/scipy/sparse/construct.py", line 806, in random
    ind = random_state.choice(mn, size=k, replace=False)
  File "_generator.pyx", line 788, in numpy.random._generator.Generator.choice
numpy.core._exceptions.MemoryError: Unable to allocate 671. GiB for an array with shape (90000000000,) and data type int64
========================================================================
Using backend: pytorch
Number of node : 300000, Number of node features : 128, Number of classes : 10
Density : 0.05, Random seed : 34, Epoch : 100
Traceback (most recent call last):
  File "crosskernel/benchmark2.py", line 114, in <module>
    adj = sparse.random(MAT_SIZE, MAT_SIZE, density=DENSITY, dtype=np.float32, random_state=np.random.default_rng())
  File "/home/junho/.local/lib/python3.8/site-packages/scipy/sparse/construct.py", line 806, in random
    ind = random_state.choice(mn, size=k, replace=False)
  File "_generator.pyx", line 788, in numpy.random._generator.Generator.choice
numpy.core._exceptions.MemoryError: Unable to allocate 671. GiB for an array with shape (90000000000,) and data type int64
========================================================================
Killed
========================================================================
Killed
========================================================================
Using backend: pytorch
Number of node : 300000, Number of node features : 128, Number of classes : 10
Density : 0.001, Random seed : 34, Epoch : 100
Traceback (most recent call last):
  File "crosskernel/benchmark2.py", line 140, in <module>
    out = model(node_features, data_pyg)[train_idx]
  File "/home/junho/.local/lib/python3.8/site-packages/torch/nn/modules/module.py", line 889, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/junho/.local/lib/python3.8/site-packages/torch_geometric/nn/sequential.py", line 106, in forward
    out = fn(*[state[key] for key in in_desc])
  File "/home/junho/.local/lib/python3.8/site-packages/torch/nn/modules/module.py", line 889, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/junho/.local/lib/python3.8/site-packages/torch_geometric/nn/conv/gcn_conv.py", line 182, in forward
    out = self.propagate(edge_index, x=x, edge_weight=edge_weight,
  File "/home/junho/.local/lib/python3.8/site-packages/torch_geometric/nn/conv/message_passing.py", line 226, in propagate
    out = self.message_and_aggregate(edge_index, **msg_aggr_kwargs)
  File "/home/junho/.local/lib/python3.8/site-packages/torch_geometric/nn/conv/gcn_conv.py", line 194, in message_and_aggregate
    return matmul(adj_t, x, reduce=self.aggr)
  File "/home/junho/.local/lib/python3.8/site-packages/torch_sparse/matmul.py", line 133, in matmul
    return spmm(src, other, reduce)
  File "/home/junho/.local/lib/python3.8/site-packages/torch_sparse/matmul.py", line 69, in spmm
    return spmm_sum(src, other)
  File "/home/junho/.local/lib/python3.8/site-packages/torch_sparse/matmul.py", line 23, in spmm_sum
    csr2csc = src.storage.csr2csc()
  File "/home/junho/.local/lib/python3.8/site-packages/torch_sparse/storage.py", line 353, in csr2csc
    csr2csc = idx.argsort()
RuntimeError: CUDA out of memory. Tried to allocate 1.35 GiB (GPU 0; 8.00 GiB total capacity; 5.67 GiB already allocated; 128.56 MiB free; 5.89 GiB reserved in total by PyTorch)
========================================================================
Using backend: pytorch
Number of node : 300000, Number of node features : 128, Number of classes : 10
Density : 0.0005, Random seed : 34, Epoch : 100
Traceback (most recent call last):
  File "crosskernel/benchmark2.py", line 140, in <module>
    out = model(node_features, data_pyg)[train_idx]
  File "/home/junho/.local/lib/python3.8/site-packages/torch/nn/modules/module.py", line 889, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/junho/.local/lib/python3.8/site-packages/torch_geometric/nn/sequential.py", line 106, in forward
    out = fn(*[state[key] for key in in_desc])
  File "/home/junho/.local/lib/python3.8/site-packages/torch/nn/modules/module.py", line 889, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/junho/.local/lib/python3.8/site-packages/torch_geometric/nn/conv/gcn_conv.py", line 182, in forward
    out = self.propagate(edge_index, x=x, edge_weight=edge_weight,
  File "/home/junho/.local/lib/python3.8/site-packages/torch_geometric/nn/conv/message_passing.py", line 226, in propagate
    out = self.message_and_aggregate(edge_index, **msg_aggr_kwargs)
  File "/home/junho/.local/lib/python3.8/site-packages/torch_geometric/nn/conv/gcn_conv.py", line 194, in message_and_aggregate
    return matmul(adj_t, x, reduce=self.aggr)
  File "/home/junho/.local/lib/python3.8/site-packages/torch_sparse/matmul.py", line 133, in matmul
    return spmm(src, other, reduce)
  File "/home/junho/.local/lib/python3.8/site-packages/torch_sparse/matmul.py", line 69, in spmm
    return spmm_sum(src, other)
  File "/home/junho/.local/lib/python3.8/site-packages/torch_sparse/matmul.py", line 23, in spmm_sum
    csr2csc = src.storage.csr2csc()
  File "/home/junho/.local/lib/python3.8/site-packages/torch_sparse/storage.py", line 353, in csr2csc
    csr2csc = idx.argsort()
RuntimeError: CUDA out of memory. Tried to allocate 692.00 MiB (GPU 0; 8.00 GiB total capacity; 5.81 GiB already allocated; 0 bytes free; 6.23 GiB reserved in total by PyTorch)
========================================================================
Using backend: pytorch
Number of node : 300000, Number of node features : 128, Number of classes : 10
Density : 0.0001, Random seed : 34, Epoch : 100
========================================================================
Using backend: pytorch
Number of node : 300000, Number of node features : 128, Number of classes : 10
Density : 5e-05, Random seed : 34, Epoch : 100
========================================================================
Using backend: pytorch
Number of node : 300000, Number of node features : 128, Number of classes : 10
Density : 1e-05, Random seed : 34, Epoch : 100
========================================================================
Using backend: pytorch
Number of node : 10, Number of node features : 128, Number of classes : 10
Density : 0.1, Random seed : 34, Epoch : 1
========================================================================
Using backend: pytorch
Number of node : 10, Number of node features : 128, Number of classes : 10
Density : 0.05, Random seed : 34, Epoch : 1
========================================================================
Using backend: pytorch
Number of node : 10, Number of node features : 128, Number of classes : 10
Density : 0.01, Random seed : 34, Epoch : 1
========================================================================
Using backend: pytorch
Number of node : 10, Number of node features : 128, Number of classes : 10
Density : 0.005, Random seed : 34, Epoch : 1
Traceback (most recent call last):
  File "crosskernel/benchmark2.py", line 140, in <module>
    out = model(node_features, data_pyg)[train_idx]
  File "/home/junho/.local/lib/python3.8/site-packages/torch/nn/modules/module.py", line 889, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/junho/.local/lib/python3.8/site-packages/torch_geometric/nn/sequential.py", line 106, in forward
    out = fn(*[state[key] for key in in_desc])
  File "/home/junho/.local/lib/python3.8/site-packages/torch/nn/modules/module.py", line 889, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/junho/.local/lib/python3.8/site-packages/torch_geometric/nn/conv/gcn_conv.py", line 171, in forward
    edge_index = gcn_norm(  # yapf: disable
  File "/home/junho/.local/lib/python3.8/site-packages/torch_geometric/nn/conv/gcn_conv.py", line 40, in gcn_norm
    adj_t = fill_diag(adj_t, fill_value)
  File "/home/junho/.local/lib/python3.8/site-packages/torch_sparse/diag.py", line 91, in fill_diag
    return set_diag(src, value.new_full(sizes, fill_value), k)
  File "/home/junho/.local/lib/python3.8/site-packages/torch_sparse/diag.py", line 42, in set_diag
    inv_mask = ~mask
RuntimeError: CUDA error: invalid configuration argument
========================================================================
Using backend: pytorch
Number of node : 10, Number of node features : 128, Number of classes : 10
Density : 0.001, Random seed : 34, Epoch : 1
Traceback (most recent call last):
  File "crosskernel/benchmark2.py", line 140, in <module>
    out = model(node_features, data_pyg)[train_idx]
  File "/home/junho/.local/lib/python3.8/site-packages/torch/nn/modules/module.py", line 889, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/junho/.local/lib/python3.8/site-packages/torch_geometric/nn/sequential.py", line 106, in forward
    out = fn(*[state[key] for key in in_desc])
  File "/home/junho/.local/lib/python3.8/site-packages/torch/nn/modules/module.py", line 889, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/junho/.local/lib/python3.8/site-packages/torch_geometric/nn/conv/gcn_conv.py", line 171, in forward
    edge_index = gcn_norm(  # yapf: disable
  File "/home/junho/.local/lib/python3.8/site-packages/torch_geometric/nn/conv/gcn_conv.py", line 40, in gcn_norm
    adj_t = fill_diag(adj_t, fill_value)
  File "/home/junho/.local/lib/python3.8/site-packages/torch_sparse/diag.py", line 91, in fill_diag
    return set_diag(src, value.new_full(sizes, fill_value), k)
  File "/home/junho/.local/lib/python3.8/site-packages/torch_sparse/diag.py", line 42, in set_diag
    inv_mask = ~mask
RuntimeError: CUDA error: invalid configuration argument
========================================================================
Using backend: pytorch
Number of node : 10, Number of node features : 128, Number of classes : 10
Density : 0.0005, Random seed : 34, Epoch : 1
Traceback (most recent call last):
  File "crosskernel/benchmark2.py", line 140, in <module>
    out = model(node_features, data_pyg)[train_idx]
  File "/home/junho/.local/lib/python3.8/site-packages/torch/nn/modules/module.py", line 889, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/junho/.local/lib/python3.8/site-packages/torch_geometric/nn/sequential.py", line 106, in forward
    out = fn(*[state[key] for key in in_desc])
  File "/home/junho/.local/lib/python3.8/site-packages/torch/nn/modules/module.py", line 889, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/junho/.local/lib/python3.8/site-packages/torch_geometric/nn/conv/gcn_conv.py", line 171, in forward
    edge_index = gcn_norm(  # yapf: disable
  File "/home/junho/.local/lib/python3.8/site-packages/torch_geometric/nn/conv/gcn_conv.py", line 40, in gcn_norm
    adj_t = fill_diag(adj_t, fill_value)
  File "/home/junho/.local/lib/python3.8/site-packages/torch_sparse/diag.py", line 91, in fill_diag
    return set_diag(src, value.new_full(sizes, fill_value), k)
  File "/home/junho/.local/lib/python3.8/site-packages/torch_sparse/diag.py", line 42, in set_diag
    inv_mask = ~mask
RuntimeError: CUDA error: invalid configuration argument
========================================================================
Using backend: pytorch
Number of node : 10, Number of node features : 128, Number of classes : 10
Density : 0.0001, Random seed : 34, Epoch : 1
Traceback (most recent call last):
  File "crosskernel/benchmark2.py", line 140, in <module>
    out = model(node_features, data_pyg)[train_idx]
  File "/home/junho/.local/lib/python3.8/site-packages/torch/nn/modules/module.py", line 889, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/junho/.local/lib/python3.8/site-packages/torch_geometric/nn/sequential.py", line 106, in forward
    out = fn(*[state[key] for key in in_desc])
  File "/home/junho/.local/lib/python3.8/site-packages/torch/nn/modules/module.py", line 889, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/junho/.local/lib/python3.8/site-packages/torch_geometric/nn/conv/gcn_conv.py", line 171, in forward
    edge_index = gcn_norm(  # yapf: disable
  File "/home/junho/.local/lib/python3.8/site-packages/torch_geometric/nn/conv/gcn_conv.py", line 40, in gcn_norm
    adj_t = fill_diag(adj_t, fill_value)
  File "/home/junho/.local/lib/python3.8/site-packages/torch_sparse/diag.py", line 91, in fill_diag
    return set_diag(src, value.new_full(sizes, fill_value), k)
  File "/home/junho/.local/lib/python3.8/site-packages/torch_sparse/diag.py", line 42, in set_diag
    inv_mask = ~mask
RuntimeError: CUDA error: invalid configuration argument
========================================================================
Using backend: pytorch
Number of node : 10, Number of node features : 128, Number of classes : 10
Density : 5e-05, Random seed : 34, Epoch : 1
Traceback (most recent call last):
  File "crosskernel/benchmark2.py", line 140, in <module>
    out = model(node_features, data_pyg)[train_idx]
  File "/home/junho/.local/lib/python3.8/site-packages/torch/nn/modules/module.py", line 889, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/junho/.local/lib/python3.8/site-packages/torch_geometric/nn/sequential.py", line 106, in forward
    out = fn(*[state[key] for key in in_desc])
  File "/home/junho/.local/lib/python3.8/site-packages/torch/nn/modules/module.py", line 889, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/junho/.local/lib/python3.8/site-packages/torch_geometric/nn/conv/gcn_conv.py", line 171, in forward
    edge_index = gcn_norm(  # yapf: disable
  File "/home/junho/.local/lib/python3.8/site-packages/torch_geometric/nn/conv/gcn_conv.py", line 40, in gcn_norm
    adj_t = fill_diag(adj_t, fill_value)
  File "/home/junho/.local/lib/python3.8/site-packages/torch_sparse/diag.py", line 91, in fill_diag
    return set_diag(src, value.new_full(sizes, fill_value), k)
  File "/home/junho/.local/lib/python3.8/site-packages/torch_sparse/diag.py", line 42, in set_diag
    inv_mask = ~mask
RuntimeError: CUDA error: invalid configuration argument
========================================================================
Using backend: pytorch
Number of node : 10, Number of node features : 128, Number of classes : 10
Density : 1e-05, Random seed : 34, Epoch : 1
Traceback (most recent call last):
  File "crosskernel/benchmark2.py", line 140, in <module>
    out = model(node_features, data_pyg)[train_idx]
  File "/home/junho/.local/lib/python3.8/site-packages/torch/nn/modules/module.py", line 889, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/junho/.local/lib/python3.8/site-packages/torch_geometric/nn/sequential.py", line 106, in forward
    out = fn(*[state[key] for key in in_desc])
  File "/home/junho/.local/lib/python3.8/site-packages/torch/nn/modules/module.py", line 889, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/junho/.local/lib/python3.8/site-packages/torch_geometric/nn/conv/gcn_conv.py", line 171, in forward
    edge_index = gcn_norm(  # yapf: disable
  File "/home/junho/.local/lib/python3.8/site-packages/torch_geometric/nn/conv/gcn_conv.py", line 40, in gcn_norm
    adj_t = fill_diag(adj_t, fill_value)
  File "/home/junho/.local/lib/python3.8/site-packages/torch_sparse/diag.py", line 91, in fill_diag
    return set_diag(src, value.new_full(sizes, fill_value), k)
  File "/home/junho/.local/lib/python3.8/site-packages/torch_sparse/diag.py", line 42, in set_diag
    inv_mask = ~mask
RuntimeError: CUDA error: invalid configuration argument
========================================================================
Using backend: pytorch
Number of node : 50, Number of node features : 128, Number of classes : 10
Density : 0.1, Random seed : 34, Epoch : 1
========================================================================
Using backend: pytorch
Number of node : 50, Number of node features : 128, Number of classes : 10
Density : 0.05, Random seed : 34, Epoch : 1
========================================================================
Using backend: pytorch
Number of node : 50, Number of node features : 128, Number of classes : 10
Density : 0.01, Random seed : 34, Epoch : 1
========================================================================
Using backend: pytorch
Number of node : 50, Number of node features : 128, Number of classes : 10
Density : 0.005, Random seed : 34, Epoch : 1
========================================================================
Using backend: pytorch
Number of node : 50, Number of node features : 128, Number of classes : 10
Density : 0.001, Random seed : 34, Epoch : 1
========================================================================
Using backend: pytorch
Number of node : 50, Number of node features : 128, Number of classes : 10
Density : 0.0005, Random seed : 34, Epoch : 1
========================================================================
Using backend: pytorch
Number of node : 50, Number of node features : 128, Number of classes : 10
Density : 0.0001, Random seed : 34, Epoch : 1
Traceback (most recent call last):
  File "crosskernel/benchmark2.py", line 140, in <module>
    out = model(node_features, data_pyg)[train_idx]
  File "/home/junho/.local/lib/python3.8/site-packages/torch/nn/modules/module.py", line 889, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/junho/.local/lib/python3.8/site-packages/torch_geometric/nn/sequential.py", line 106, in forward
    out = fn(*[state[key] for key in in_desc])
  File "/home/junho/.local/lib/python3.8/site-packages/torch/nn/modules/module.py", line 889, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/junho/.local/lib/python3.8/site-packages/torch_geometric/nn/conv/gcn_conv.py", line 171, in forward
    edge_index = gcn_norm(  # yapf: disable
  File "/home/junho/.local/lib/python3.8/site-packages/torch_geometric/nn/conv/gcn_conv.py", line 40, in gcn_norm
    adj_t = fill_diag(adj_t, fill_value)
  File "/home/junho/.local/lib/python3.8/site-packages/torch_sparse/diag.py", line 91, in fill_diag
    return set_diag(src, value.new_full(sizes, fill_value), k)
  File "/home/junho/.local/lib/python3.8/site-packages/torch_sparse/diag.py", line 42, in set_diag
    inv_mask = ~mask
RuntimeError: CUDA error: invalid configuration argument
========================================================================
Using backend: pytorch
Number of node : 50, Number of node features : 128, Number of classes : 10
Density : 5e-05, Random seed : 34, Epoch : 1
Traceback (most recent call last):
  File "crosskernel/benchmark2.py", line 140, in <module>
    out = model(node_features, data_pyg)[train_idx]
  File "/home/junho/.local/lib/python3.8/site-packages/torch/nn/modules/module.py", line 889, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/junho/.local/lib/python3.8/site-packages/torch_geometric/nn/sequential.py", line 106, in forward
    out = fn(*[state[key] for key in in_desc])
  File "/home/junho/.local/lib/python3.8/site-packages/torch/nn/modules/module.py", line 889, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/junho/.local/lib/python3.8/site-packages/torch_geometric/nn/conv/gcn_conv.py", line 171, in forward
    edge_index = gcn_norm(  # yapf: disable
  File "/home/junho/.local/lib/python3.8/site-packages/torch_geometric/nn/conv/gcn_conv.py", line 40, in gcn_norm
    adj_t = fill_diag(adj_t, fill_value)
  File "/home/junho/.local/lib/python3.8/site-packages/torch_sparse/diag.py", line 91, in fill_diag
    return set_diag(src, value.new_full(sizes, fill_value), k)
  File "/home/junho/.local/lib/python3.8/site-packages/torch_sparse/diag.py", line 42, in set_diag
    inv_mask = ~mask
RuntimeError: CUDA error: invalid configuration argument
========================================================================
Using backend: pytorch
Number of node : 50, Number of node features : 128, Number of classes : 10
Density : 1e-05, Random seed : 34, Epoch : 1
Traceback (most recent call last):
  File "crosskernel/benchmark2.py", line 140, in <module>
    out = model(node_features, data_pyg)[train_idx]
  File "/home/junho/.local/lib/python3.8/site-packages/torch/nn/modules/module.py", line 889, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/junho/.local/lib/python3.8/site-packages/torch_geometric/nn/sequential.py", line 106, in forward
    out = fn(*[state[key] for key in in_desc])
  File "/home/junho/.local/lib/python3.8/site-packages/torch/nn/modules/module.py", line 889, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/junho/.local/lib/python3.8/site-packages/torch_geometric/nn/conv/gcn_conv.py", line 171, in forward
    edge_index = gcn_norm(  # yapf: disable
  File "/home/junho/.local/lib/python3.8/site-packages/torch_geometric/nn/conv/gcn_conv.py", line 40, in gcn_norm
    adj_t = fill_diag(adj_t, fill_value)
  File "/home/junho/.local/lib/python3.8/site-packages/torch_sparse/diag.py", line 91, in fill_diag
    return set_diag(src, value.new_full(sizes, fill_value), k)
  File "/home/junho/.local/lib/python3.8/site-packages/torch_sparse/diag.py", line 42, in set_diag
    inv_mask = ~mask
RuntimeError: CUDA error: invalid configuration argument
========================================================================
Using backend: pytorch
Number of node : 100, Number of node features : 128, Number of classes : 10
Density : 0.1, Random seed : 34, Epoch : 1
========================================================================
Using backend: pytorch
Number of node : 100, Number of node features : 128, Number of classes : 10
Density : 0.05, Random seed : 34, Epoch : 1
========================================================================
Using backend: pytorch
Number of node : 100, Number of node features : 128, Number of classes : 10
Density : 0.01, Random seed : 34, Epoch : 1
========================================================================
Using backend: pytorch
Number of node : 100, Number of node features : 128, Number of classes : 10
Density : 0.005, Random seed : 34, Epoch : 1
========================================================================
Using backend: pytorch
Number of node : 100, Number of node features : 128, Number of classes : 10
Density : 0.001, Random seed : 34, Epoch : 1
========================================================================
Using backend: pytorch
Number of node : 100, Number of node features : 128, Number of classes : 10
Density : 0.0005, Random seed : 34, Epoch : 1
========================================================================
Using backend: pytorch
Number of node : 100, Number of node features : 128, Number of classes : 10
Density : 0.0001, Random seed : 34, Epoch : 1
========================================================================
Using backend: pytorch
Number of node : 100, Number of node features : 128, Number of classes : 10
Density : 5e-05, Random seed : 34, Epoch : 1
Traceback (most recent call last):
  File "crosskernel/benchmark2.py", line 140, in <module>
    out = model(node_features, data_pyg)[train_idx]
  File "/home/junho/.local/lib/python3.8/site-packages/torch/nn/modules/module.py", line 889, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/junho/.local/lib/python3.8/site-packages/torch_geometric/nn/sequential.py", line 106, in forward
    out = fn(*[state[key] for key in in_desc])
  File "/home/junho/.local/lib/python3.8/site-packages/torch/nn/modules/module.py", line 889, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/junho/.local/lib/python3.8/site-packages/torch_geometric/nn/conv/gcn_conv.py", line 171, in forward
    edge_index = gcn_norm(  # yapf: disable
  File "/home/junho/.local/lib/python3.8/site-packages/torch_geometric/nn/conv/gcn_conv.py", line 40, in gcn_norm
    adj_t = fill_diag(adj_t, fill_value)
  File "/home/junho/.local/lib/python3.8/site-packages/torch_sparse/diag.py", line 91, in fill_diag
    return set_diag(src, value.new_full(sizes, fill_value), k)
  File "/home/junho/.local/lib/python3.8/site-packages/torch_sparse/diag.py", line 42, in set_diag
    inv_mask = ~mask
RuntimeError: CUDA error: invalid configuration argument
========================================================================
Using backend: pytorch
Number of node : 100, Number of node features : 128, Number of classes : 10
Density : 1e-05, Random seed : 34, Epoch : 1
Traceback (most recent call last):
  File "crosskernel/benchmark2.py", line 140, in <module>
    out = model(node_features, data_pyg)[train_idx]
  File "/home/junho/.local/lib/python3.8/site-packages/torch/nn/modules/module.py", line 889, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/junho/.local/lib/python3.8/site-packages/torch_geometric/nn/sequential.py", line 106, in forward
    out = fn(*[state[key] for key in in_desc])
  File "/home/junho/.local/lib/python3.8/site-packages/torch/nn/modules/module.py", line 889, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/junho/.local/lib/python3.8/site-packages/torch_geometric/nn/conv/gcn_conv.py", line 171, in forward
    edge_index = gcn_norm(  # yapf: disable
  File "/home/junho/.local/lib/python3.8/site-packages/torch_geometric/nn/conv/gcn_conv.py", line 40, in gcn_norm
    adj_t = fill_diag(adj_t, fill_value)
  File "/home/junho/.local/lib/python3.8/site-packages/torch_sparse/diag.py", line 91, in fill_diag
    return set_diag(src, value.new_full(sizes, fill_value), k)
  File "/home/junho/.local/lib/python3.8/site-packages/torch_sparse/diag.py", line 42, in set_diag
    inv_mask = ~mask
RuntimeError: CUDA error: invalid configuration argument
========================================================================
Using backend: pytorch
Number of node : 500, Number of node features : 128, Number of classes : 10
Density : 0.1, Random seed : 34, Epoch : 1
========================================================================
Using backend: pytorch
Number of node : 500, Number of node features : 128, Number of classes : 10
Density : 0.05, Random seed : 34, Epoch : 1
========================================================================
Using backend: pytorch
Number of node : 500, Number of node features : 128, Number of classes : 10
Density : 0.01, Random seed : 34, Epoch : 1
========================================================================
Using backend: pytorch
Number of node : 500, Number of node features : 128, Number of classes : 10
Density : 0.005, Random seed : 34, Epoch : 1
========================================================================
Using backend: pytorch
Number of node : 500, Number of node features : 128, Number of classes : 10
Density : 0.001, Random seed : 34, Epoch : 1
========================================================================
Using backend: pytorch
Number of node : 500, Number of node features : 128, Number of classes : 10
Density : 0.0005, Random seed : 34, Epoch : 1
========================================================================
Using backend: pytorch
Number of node : 500, Number of node features : 128, Number of classes : 10
Density : 0.0001, Random seed : 34, Epoch : 1
========================================================================
Using backend: pytorch
Number of node : 500, Number of node features : 128, Number of classes : 10
Density : 5e-05, Random seed : 34, Epoch : 1
========================================================================
Using backend: pytorch
Number of node : 500, Number of node features : 128, Number of classes : 10
Density : 1e-05, Random seed : 34, Epoch : 1
========================================================================
Using backend: pytorch
Number of node : 1000, Number of node features : 128, Number of classes : 10
Density : 0.1, Random seed : 34, Epoch : 1
========================================================================
Using backend: pytorch
Number of node : 1000, Number of node features : 128, Number of classes : 10
Density : 0.05, Random seed : 34, Epoch : 1
========================================================================
Using backend: pytorch
Number of node : 1000, Number of node features : 128, Number of classes : 10
Density : 0.01, Random seed : 34, Epoch : 1
========================================================================
Using backend: pytorch
Number of node : 1000, Number of node features : 128, Number of classes : 10
Density : 0.005, Random seed : 34, Epoch : 1
========================================================================
Using backend: pytorch
Number of node : 1000, Number of node features : 128, Number of classes : 10
Density : 0.001, Random seed : 34, Epoch : 1
========================================================================
Using backend: pytorch
Number of node : 1000, Number of node features : 128, Number of classes : 10
Density : 0.0005, Random seed : 34, Epoch : 1
========================================================================
Using backend: pytorch
Number of node : 1000, Number of node features : 128, Number of classes : 10
Density : 0.0001, Random seed : 34, Epoch : 1
========================================================================
Using backend: pytorch
Number of node : 1000, Number of node features : 128, Number of classes : 10
Density : 5e-05, Random seed : 34, Epoch : 1
========================================================================
Using backend: pytorch
Number of node : 1000, Number of node features : 128, Number of classes : 10
Density : 1e-05, Random seed : 34, Epoch : 1
========================================================================
Using backend: pytorch
Number of node : 5000, Number of node features : 128, Number of classes : 10
Density : 0.1, Random seed : 34, Epoch : 1
========================================================================
Using backend: pytorch
Number of node : 5000, Number of node features : 128, Number of classes : 10
Density : 0.05, Random seed : 34, Epoch : 1
========================================================================
Using backend: pytorch
Number of node : 5000, Number of node features : 128, Number of classes : 10
Density : 0.01, Random seed : 34, Epoch : 1
========================================================================
Using backend: pytorch
Number of node : 5000, Number of node features : 128, Number of classes : 10
Density : 0.005, Random seed : 34, Epoch : 1
========================================================================
Using backend: pytorch
Number of node : 5000, Number of node features : 128, Number of classes : 10
Density : 0.001, Random seed : 34, Epoch : 1
========================================================================
Using backend: pytorch
Number of node : 5000, Number of node features : 128, Number of classes : 10
Density : 0.0005, Random seed : 34, Epoch : 1
========================================================================
Using backend: pytorch
Number of node : 5000, Number of node features : 128, Number of classes : 10
Density : 0.0001, Random seed : 34, Epoch : 1
========================================================================
Using backend: pytorch
Number of node : 5000, Number of node features : 128, Number of classes : 10
Density : 5e-05, Random seed : 34, Epoch : 1
========================================================================
Using backend: pytorch
Number of node : 5000, Number of node features : 128, Number of classes : 10
Density : 1e-05, Random seed : 34, Epoch : 1
========================================================================
Using backend: pytorch
Number of node : 10000, Number of node features : 128, Number of classes : 10
Density : 0.1, Random seed : 34, Epoch : 1
========================================================================
Using backend: pytorch
Number of node : 10000, Number of node features : 128, Number of classes : 10
Density : 0.05, Random seed : 34, Epoch : 1
========================================================================
Using backend: pytorch
Number of node : 10000, Number of node features : 128, Number of classes : 10
Density : 0.01, Random seed : 34, Epoch : 1
========================================================================
Using backend: pytorch
Number of node : 10000, Number of node features : 128, Number of classes : 10
Density : 0.005, Random seed : 34, Epoch : 1
========================================================================
Using backend: pytorch
Number of node : 10000, Number of node features : 128, Number of classes : 10
Density : 0.001, Random seed : 34, Epoch : 1
========================================================================
Using backend: pytorch
Number of node : 10000, Number of node features : 128, Number of classes : 10
Density : 0.0005, Random seed : 34, Epoch : 1
========================================================================
Using backend: pytorch
Number of node : 10000, Number of node features : 128, Number of classes : 10
Density : 0.0001, Random seed : 34, Epoch : 1
========================================================================
Using backend: pytorch
Number of node : 10000, Number of node features : 128, Number of classes : 10
Density : 5e-05, Random seed : 34, Epoch : 1
========================================================================
Using backend: pytorch
Number of node : 10000, Number of node features : 128, Number of classes : 10
Density : 1e-05, Random seed : 34, Epoch : 1
========================================================================
Killed
========================================================================
Killed
========================================================================
Using backend: pytorch
Number of node : 50000, Number of node features : 128, Number of classes : 10
Density : 0.01, Random seed : 34, Epoch : 1
========================================================================
Using backend: pytorch
Number of node : 50000, Number of node features : 128, Number of classes : 10
Density : 0.005, Random seed : 34, Epoch : 1
========================================================================
Using backend: pytorch
Number of node : 50000, Number of node features : 128, Number of classes : 10
Density : 0.001, Random seed : 34, Epoch : 1
========================================================================
Using backend: pytorch
Number of node : 50000, Number of node features : 128, Number of classes : 10
Density : 0.0005, Random seed : 34, Epoch : 1
========================================================================
Using backend: pytorch
Number of node : 50000, Number of node features : 128, Number of classes : 10
Density : 0.0001, Random seed : 34, Epoch : 1
========================================================================
Using backend: pytorch
Number of node : 50000, Number of node features : 128, Number of classes : 10
Density : 5e-05, Random seed : 34, Epoch : 1
========================================================================
Using backend: pytorch
Number of node : 50000, Number of node features : 128, Number of classes : 10
Density : 1e-05, Random seed : 34, Epoch : 1
========================================================================
Using backend: pytorch
Number of node : 100000, Number of node features : 128, Number of classes : 10
Density : 0.1, Random seed : 34, Epoch : 1
Traceback (most recent call last):
  File "crosskernel/benchmark2.py", line 114, in <module>
    adj = sparse.random(MAT_SIZE, MAT_SIZE, density=DENSITY, dtype=np.float32, random_state=np.random.default_rng())
  File "/home/junho/.local/lib/python3.8/site-packages/scipy/sparse/construct.py", line 806, in random
    ind = random_state.choice(mn, size=k, replace=False)
  File "_generator.pyx", line 788, in numpy.random._generator.Generator.choice
numpy.core._exceptions.MemoryError: Unable to allocate 74.5 GiB for an array with shape (10000000000,) and data type int64
========================================================================
Using backend: pytorch
Number of node : 100000, Number of node features : 128, Number of classes : 10
Density : 0.05, Random seed : 34, Epoch : 1
Traceback (most recent call last):
  File "crosskernel/benchmark2.py", line 114, in <module>
    adj = sparse.random(MAT_SIZE, MAT_SIZE, density=DENSITY, dtype=np.float32, random_state=np.random.default_rng())
  File "/home/junho/.local/lib/python3.8/site-packages/scipy/sparse/construct.py", line 806, in random
    ind = random_state.choice(mn, size=k, replace=False)
  File "_generator.pyx", line 788, in numpy.random._generator.Generator.choice
numpy.core._exceptions.MemoryError: Unable to allocate 74.5 GiB for an array with shape (10000000000,) and data type int64
========================================================================
Using backend: pytorch
Number of node : 100000, Number of node features : 128, Number of classes : 10
Density : 0.01, Random seed : 34, Epoch : 1
Traceback (most recent call last):
  File "crosskernel/benchmark2.py", line 140, in <module>
    out = model(node_features, data_pyg)[train_idx]
  File "/home/junho/.local/lib/python3.8/site-packages/torch/nn/modules/module.py", line 889, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/junho/.local/lib/python3.8/site-packages/torch_geometric/nn/sequential.py", line 106, in forward
    out = fn(*[state[key] for key in in_desc])
  File "/home/junho/.local/lib/python3.8/site-packages/torch/nn/modules/module.py", line 889, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/junho/.local/lib/python3.8/site-packages/torch_geometric/nn/conv/gcn_conv.py", line 171, in forward
    edge_index = gcn_norm(  # yapf: disable
  File "/home/junho/.local/lib/python3.8/site-packages/torch_geometric/nn/conv/gcn_conv.py", line 40, in gcn_norm
    adj_t = fill_diag(adj_t, fill_value)
  File "/home/junho/.local/lib/python3.8/site-packages/torch_sparse/diag.py", line 91, in fill_diag
    return set_diag(src, value.new_full(sizes, fill_value), k)
  File "/home/junho/.local/lib/python3.8/site-packages/torch_sparse/diag.py", line 52, in set_diag
    new_col[mask] = col
RuntimeError: CUDA out of memory. Tried to allocate 764.00 MiB (GPU 0; 8.00 GiB total capacity; 5.46 GiB already allocated; 0 bytes free; 6.12 GiB reserved in total by PyTorch)
========================================================================
Using backend: pytorch
Number of node : 100000, Number of node features : 128, Number of classes : 10
Density : 0.005, Random seed : 34, Epoch : 1
Traceback (most recent call last):
  File "crosskernel/benchmark2.py", line 140, in <module>
    out = model(node_features, data_pyg)[train_idx]
  File "/home/junho/.local/lib/python3.8/site-packages/torch/nn/modules/module.py", line 889, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/junho/.local/lib/python3.8/site-packages/torch_geometric/nn/sequential.py", line 106, in forward
    out = fn(*[state[key] for key in in_desc])
  File "/home/junho/.local/lib/python3.8/site-packages/torch/nn/modules/module.py", line 889, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/junho/.local/lib/python3.8/site-packages/torch_geometric/nn/conv/gcn_conv.py", line 182, in forward
    out = self.propagate(edge_index, x=x, edge_weight=edge_weight,
  File "/home/junho/.local/lib/python3.8/site-packages/torch_geometric/nn/conv/message_passing.py", line 226, in propagate
    out = self.message_and_aggregate(edge_index, **msg_aggr_kwargs)
  File "/home/junho/.local/lib/python3.8/site-packages/torch_geometric/nn/conv/gcn_conv.py", line 194, in message_and_aggregate
    return matmul(adj_t, x, reduce=self.aggr)
  File "/home/junho/.local/lib/python3.8/site-packages/torch_sparse/matmul.py", line 133, in matmul
    return spmm(src, other, reduce)
  File "/home/junho/.local/lib/python3.8/site-packages/torch_sparse/matmul.py", line 69, in spmm
    return spmm_sum(src, other)
  File "/home/junho/.local/lib/python3.8/site-packages/torch_sparse/matmul.py", line 23, in spmm_sum
    csr2csc = src.storage.csr2csc()
  File "/home/junho/.local/lib/python3.8/site-packages/torch_sparse/storage.py", line 353, in csr2csc
    csr2csc = idx.argsort()
RuntimeError: CUDA out of memory. Tried to allocate 766.00 MiB (GPU 0; 8.00 GiB total capacity; 5.85 GiB already allocated; 0 bytes free; 6.23 GiB reserved in total by PyTorch)
========================================================================
Using backend: pytorch
Number of node : 100000, Number of node features : 128, Number of classes : 10
Density : 0.001, Random seed : 34, Epoch : 1
========================================================================
Using backend: pytorch
Number of node : 100000, Number of node features : 128, Number of classes : 10
Density : 0.0005, Random seed : 34, Epoch : 1
========================================================================
Using backend: pytorch
Number of node : 100000, Number of node features : 128, Number of classes : 10
Density : 0.0001, Random seed : 34, Epoch : 1
========================================================================
Using backend: pytorch
Number of node : 100000, Number of node features : 128, Number of classes : 10
Density : 5e-05, Random seed : 34, Epoch : 1
========================================================================
Using backend: pytorch
Number of node : 100000, Number of node features : 128, Number of classes : 10
Density : 1e-05, Random seed : 34, Epoch : 1
========================================================================
Using backend: pytorch
Number of node : 200000, Number of node features : 128, Number of classes : 10
Density : 0.1, Random seed : 34, Epoch : 1
Traceback (most recent call last):
  File "crosskernel/benchmark2.py", line 114, in <module>
    adj = sparse.random(MAT_SIZE, MAT_SIZE, density=DENSITY, dtype=np.float32, random_state=np.random.default_rng())
  File "/home/junho/.local/lib/python3.8/site-packages/scipy/sparse/construct.py", line 806, in random
    ind = random_state.choice(mn, size=k, replace=False)
  File "_generator.pyx", line 788, in numpy.random._generator.Generator.choice
numpy.core._exceptions.MemoryError: Unable to allocate 298. GiB for an array with shape (40000000000,) and data type int64
========================================================================
Using backend: pytorch
Number of node : 200000, Number of node features : 128, Number of classes : 10
Density : 0.05, Random seed : 34, Epoch : 1
Traceback (most recent call last):
  File "crosskernel/benchmark2.py", line 114, in <module>
    adj = sparse.random(MAT_SIZE, MAT_SIZE, density=DENSITY, dtype=np.float32, random_state=np.random.default_rng())
  File "/home/junho/.local/lib/python3.8/site-packages/scipy/sparse/construct.py", line 806, in random
    ind = random_state.choice(mn, size=k, replace=False)
  File "_generator.pyx", line 788, in numpy.random._generator.Generator.choice
numpy.core._exceptions.MemoryError: Unable to allocate 298. GiB for an array with shape (40000000000,) and data type int64
========================================================================
Using backend: pytorch
Number of node : 200000, Number of node features : 128, Number of classes : 10
Density : 0.01, Random seed : 34, Epoch : 1
Traceback (most recent call last):
  File "crosskernel/benchmark2.py", line 125, in <module>
    data_pyg = SparseTensor.from_scipy(adj).to('cuda')
  File "/home/junho/.local/lib/python3.8/site-packages/torch_sparse/tensor.py", line 452, in to
    self = self.device_as(torch.tensor(0., device=device), non_blocking)
  File "/home/junho/.local/lib/python3.8/site-packages/torch_sparse/tensor.py", line 142, in device_as
    return self.from_storage(self.storage.device_as(tensor, non_blocking))
  File "/home/junho/.local/lib/python3.8/site-packages/torch_sparse/storage.py", line 495, in device_as
    value = value.to(tensor.device, non_blocking=non_blocking)
RuntimeError: CUDA out of memory. Tried to allocate 1.49 GiB (GPU 0; 8.00 GiB total capacity; 6.06 GiB already allocated; 0 bytes free; 6.08 GiB reserved in total by PyTorch)
========================================================================
Using backend: pytorch
Number of node : 200000, Number of node features : 128, Number of classes : 10
Density : 0.005, Random seed : 34, Epoch : 1
Traceback (most recent call last):
  File "crosskernel/benchmark2.py", line 140, in <module>
    out = model(node_features, data_pyg)[train_idx]
  File "/home/junho/.local/lib/python3.8/site-packages/torch/nn/modules/module.py", line 889, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/junho/.local/lib/python3.8/site-packages/torch_geometric/nn/sequential.py", line 106, in forward
    out = fn(*[state[key] for key in in_desc])
  File "/home/junho/.local/lib/python3.8/site-packages/torch/nn/modules/module.py", line 889, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/junho/.local/lib/python3.8/site-packages/torch_geometric/nn/conv/gcn_conv.py", line 171, in forward
    edge_index = gcn_norm(  # yapf: disable
  File "/home/junho/.local/lib/python3.8/site-packages/torch_geometric/nn/conv/gcn_conv.py", line 40, in gcn_norm
    adj_t = fill_diag(adj_t, fill_value)
  File "/home/junho/.local/lib/python3.8/site-packages/torch_sparse/diag.py", line 91, in fill_diag
    return set_diag(src, value.new_full(sizes, fill_value), k)
  File "/home/junho/.local/lib/python3.8/site-packages/torch_sparse/diag.py", line 37, in set_diag
    src = remove_diag(src, k=k)
  File "/home/junho/.local/lib/python3.8/site-packages/torch_sparse/diag.py", line 12, in remove_diag
    new_row, new_col = row[inv_mask], col[inv_mask]
RuntimeError: CUDA out of memory. Tried to allocate 1.49 GiB (GPU 0; 8.00 GiB total capacity; 5.50 GiB already allocated; 461.43 MiB free; 5.52 GiB reserved in total by PyTorch)
========================================================================
Using backend: pytorch
Number of node : 200000, Number of node features : 128, Number of classes : 10
Density : 0.001, Random seed : 34, Epoch : 1
Traceback (most recent call last):
  File "crosskernel/benchmark2.py", line 172, in <module>
    out = model(data_dgl, node_features)
  File "/home/junho/.local/lib/python3.8/site-packages/torch/nn/modules/module.py", line 889, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/junho/.local/lib/python3.8/site-packages/dgl/nn/pytorch/utils.py", line 223, in forward
    feats = module(graph, *feats)
  File "/home/junho/.local/lib/python3.8/site-packages/torch/nn/modules/module.py", line 889, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/junho/.local/lib/python3.8/site-packages/dgl/nn/pytorch/conv/graphconv.py", line 388, in forward
    if (graph.in_degrees() == 0).any():
  File "/home/junho/.local/lib/python3.8/site-packages/dgl/heterograph.py", line 3496, in in_degrees
    deg = self._graph.in_degrees(etid, v_tensor)
  File "/home/junho/.local/lib/python3.8/site-packages/dgl/heterograph_index.py", line 577, in in_degrees
    return F.from_dgl_nd(_CAPI_DGLHeteroInDegrees(
  File "dgl/_ffi/_cython/./function.pxi", line 287, in dgl._ffi._cy3.core.FunctionBase.__call__
  File "dgl/_ffi/_cython/./function.pxi", line 222, in dgl._ffi._cy3.core.FuncCall
  File "dgl/_ffi/_cython/./function.pxi", line 211, in dgl._ffi._cy3.core.FuncCall3
  File "dgl/_ffi/_cython/./base.pxi", line 155, in dgl._ffi._cy3.core.CALL
dgl._ffi.base.DGLError: [21:32:26] /opt/dgl/src/runtime/cuda/cuda_device_api.cc:97: Check failed: e == cudaSuccess || e == cudaErrorCudartUnloading: CUDA: out of memory
Stack trace:
  [bt] (0) /home/junho/.local/lib/python3.8/site-packages/dgl/libdgl.so(dmlc::LogMessageFatal::~LogMessageFatal()+0x4f) [0x7f4147902c4f]
  [bt] (1) /home/junho/.local/lib/python3.8/site-packages/dgl/libdgl.so(dgl::runtime::CUDADeviceAPI::AllocDataSpace(DLContext, unsigned long, unsigned long, DLDataType)+0x108) [0x7f4148223078]
  [bt] (2) /home/junho/.local/lib/python3.8/site-packages/dgl/libdgl.so(dgl::runtime::WorkspacePool::AllocWorkspace(DLContext, unsigned long)+0x154) [0x7f41480c7f24]
  [bt] (3) /home/junho/.local/lib/python3.8/site-packages/dgl/libdgl.so(std::pair<dgl::runtime::NDArray, dgl::runtime::NDArray> dgl::aten::impl::Sort<(DLDeviceType)2, long>(dgl::runtime::NDArray, int)+0x134) [0x7f414824ae84]
  [bt] (4) /home/junho/.local/lib/python3.8/site-packages/dgl/libdgl.so(dgl::aten::Sort(dgl::runtime::NDArray, int)+0x1f2) [0x7f41478e8d52]
  [bt] (5) /home/junho/.local/lib/python3.8/site-packages/dgl/libdgl.so(void dgl::aten::impl::COOSort_<(DLDeviceType)2, long>(dgl::aten::COOMatrix*, bool)+0x5b) [0x7f41482554db]
  [bt] (6) /home/junho/.local/lib/python3.8/site-packages/dgl/libdgl.so(dgl::aten::COOSort_(dgl::aten::COOMatrix*, bool)+0x344) [0x7f41478e55c4]
  [bt] (7) /home/junho/.local/lib/python3.8/site-packages/dgl/libdgl.so(dgl::aten::COOSort(dgl::aten::COOMatrix, bool)+0x471) [0x7f414792ac61]
  [bt] (8) /home/junho/.local/lib/python3.8/site-packages/dgl/libdgl.so(dgl::aten::CSRMatrix dgl::aten::impl::COOToCSR<(DLDeviceType)2, long>(dgl::aten::COOMatrix)+0xbd) [0x7f414825319d]


========================================================================
Using backend: pytorch
Number of node : 200000, Number of node features : 128, Number of classes : 10
Density : 0.0005, Random seed : 34, Epoch : 1
========================================================================
Using backend: pytorch
Number of node : 200000, Number of node features : 128, Number of classes : 10
Density : 0.0001, Random seed : 34, Epoch : 1
========================================================================
Using backend: pytorch
Number of node : 200000, Number of node features : 128, Number of classes : 10
Density : 5e-05, Random seed : 34, Epoch : 1
========================================================================
Using backend: pytorch
Number of node : 200000, Number of node features : 128, Number of classes : 10
Density : 1e-05, Random seed : 34, Epoch : 1
========================================================================
Using backend: pytorch
Number of node : 300000, Number of node features : 128, Number of classes : 10
Density : 0.1, Random seed : 34, Epoch : 1
Traceback (most recent call last):
  File "crosskernel/benchmark2.py", line 114, in <module>
    adj = sparse.random(MAT_SIZE, MAT_SIZE, density=DENSITY, dtype=np.float32, random_state=np.random.default_rng())
  File "/home/junho/.local/lib/python3.8/site-packages/scipy/sparse/construct.py", line 806, in random
    ind = random_state.choice(mn, size=k, replace=False)
  File "_generator.pyx", line 788, in numpy.random._generator.Generator.choice
numpy.core._exceptions.MemoryError: Unable to allocate 671. GiB for an array with shape (90000000000,) and data type int64
========================================================================
Using backend: pytorch
Number of node : 300000, Number of node features : 128, Number of classes : 10
Density : 0.05, Random seed : 34, Epoch : 1
Traceback (most recent call last):
  File "crosskernel/benchmark2.py", line 114, in <module>
    adj = sparse.random(MAT_SIZE, MAT_SIZE, density=DENSITY, dtype=np.float32, random_state=np.random.default_rng())
  File "/home/junho/.local/lib/python3.8/site-packages/scipy/sparse/construct.py", line 806, in random
    ind = random_state.choice(mn, size=k, replace=False)
  File "_generator.pyx", line 788, in numpy.random._generator.Generator.choice
numpy.core._exceptions.MemoryError: Unable to allocate 671. GiB for an array with shape (90000000000,) and data type int64
========================================================================
Killed
========================================================================
Killed
========================================================================
Using backend: pytorch
Number of node : 300000, Number of node features : 128, Number of classes : 10
Density : 0.001, Random seed : 34, Epoch : 1
Traceback (most recent call last):
  File "crosskernel/benchmark2.py", line 140, in <module>
    out = model(node_features, data_pyg)[train_idx]
  File "/home/junho/.local/lib/python3.8/site-packages/torch/nn/modules/module.py", line 889, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/junho/.local/lib/python3.8/site-packages/torch_geometric/nn/sequential.py", line 106, in forward
    out = fn(*[state[key] for key in in_desc])
  File "/home/junho/.local/lib/python3.8/site-packages/torch/nn/modules/module.py", line 889, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/junho/.local/lib/python3.8/site-packages/torch_geometric/nn/conv/gcn_conv.py", line 182, in forward
    out = self.propagate(edge_index, x=x, edge_weight=edge_weight,
  File "/home/junho/.local/lib/python3.8/site-packages/torch_geometric/nn/conv/message_passing.py", line 226, in propagate
    out = self.message_and_aggregate(edge_index, **msg_aggr_kwargs)
  File "/home/junho/.local/lib/python3.8/site-packages/torch_geometric/nn/conv/gcn_conv.py", line 194, in message_and_aggregate
    return matmul(adj_t, x, reduce=self.aggr)
  File "/home/junho/.local/lib/python3.8/site-packages/torch_sparse/matmul.py", line 133, in matmul
    return spmm(src, other, reduce)
  File "/home/junho/.local/lib/python3.8/site-packages/torch_sparse/matmul.py", line 69, in spmm
    return spmm_sum(src, other)
  File "/home/junho/.local/lib/python3.8/site-packages/torch_sparse/matmul.py", line 23, in spmm_sum
    csr2csc = src.storage.csr2csc()
  File "/home/junho/.local/lib/python3.8/site-packages/torch_sparse/storage.py", line 353, in csr2csc
    csr2csc = idx.argsort()
RuntimeError: CUDA out of memory. Tried to allocate 1.35 GiB (GPU 0; 8.00 GiB total capacity; 5.67 GiB already allocated; 109.69 MiB free; 5.89 GiB reserved in total by PyTorch)
========================================================================
Using backend: pytorch
Number of node : 300000, Number of node features : 128, Number of classes : 10
Density : 0.0005, Random seed : 34, Epoch : 1
Traceback (most recent call last):
  File "crosskernel/benchmark2.py", line 140, in <module>
    out = model(node_features, data_pyg)[train_idx]
  File "/home/junho/.local/lib/python3.8/site-packages/torch/nn/modules/module.py", line 889, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/junho/.local/lib/python3.8/site-packages/torch_geometric/nn/sequential.py", line 106, in forward
    out = fn(*[state[key] for key in in_desc])
  File "/home/junho/.local/lib/python3.8/site-packages/torch/nn/modules/module.py", line 889, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/junho/.local/lib/python3.8/site-packages/torch_geometric/nn/conv/gcn_conv.py", line 182, in forward
    out = self.propagate(edge_index, x=x, edge_weight=edge_weight,
  File "/home/junho/.local/lib/python3.8/site-packages/torch_geometric/nn/conv/message_passing.py", line 226, in propagate
    out = self.message_and_aggregate(edge_index, **msg_aggr_kwargs)
  File "/home/junho/.local/lib/python3.8/site-packages/torch_geometric/nn/conv/gcn_conv.py", line 194, in message_and_aggregate
    return matmul(adj_t, x, reduce=self.aggr)
  File "/home/junho/.local/lib/python3.8/site-packages/torch_sparse/matmul.py", line 133, in matmul
    return spmm(src, other, reduce)
  File "/home/junho/.local/lib/python3.8/site-packages/torch_sparse/matmul.py", line 69, in spmm
    return spmm_sum(src, other)
  File "/home/junho/.local/lib/python3.8/site-packages/torch_sparse/matmul.py", line 23, in spmm_sum
    csr2csc = src.storage.csr2csc()
  File "/home/junho/.local/lib/python3.8/site-packages/torch_sparse/storage.py", line 353, in csr2csc
    csr2csc = idx.argsort()
RuntimeError: CUDA out of memory. Tried to allocate 692.00 MiB (GPU 0; 8.00 GiB total capacity; 5.81 GiB already allocated; 0 bytes free; 6.23 GiB reserved in total by PyTorch)
========================================================================
Using backend: pytorch
Number of node : 300000, Number of node features : 128, Number of classes : 10
Density : 0.0001, Random seed : 34, Epoch : 1
========================================================================
Using backend: pytorch
Number of node : 300000, Number of node features : 128, Number of classes : 10
Density : 5e-05, Random seed : 34, Epoch : 1
========================================================================
Using backend: pytorch
Number of node : 300000, Number of node features : 128, Number of classes : 10
Density : 1e-05, Random seed : 34, Epoch : 1
